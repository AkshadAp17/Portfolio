{"file_contents":{"AKSHAD_PROJECTS.md":{"content":"# Akshad Apastambh - Project Portfolio\n\n## Repository Projects (Currently Available)\n\n### 1. E-Commerce Platform üõí\n- **Location:** `projects/ecommerce-platform/`\n- **Tech Stack:** React, Node.js, MongoDB, Express\n- **Features:** \n  - User authentication system\n  - Product catalog with categories\n  - Shopping cart functionality\n  - Order management\n  - Payment integration setup\n- **Status:** ‚úÖ Complete\n- **Files:** Full client/server structure with components, routes, and API endpoints\n\n### 2. Task Management App üìã\n- **Location:** `projects/task-management-app/`\n- **Tech Stack:** React, Socket.io, Node.js, MongoDB\n- **Features:**\n  - Real-time task updates\n  - Team collaboration\n  - WebSocket integration\n  - Task categorization\n  - Progress tracking\n- **Status:** ‚úÖ Complete\n- **Files:** React frontend with Socket.io backend\n\n### 3. Social Media Dashboard üì±\n- **Location:** `projects/social-media-dashboard/`\n- **Tech Stack:** Next.js, Prisma, Redis, OAuth\n- **Features:**\n  - Social media analytics\n  - Multi-platform integration\n  - Real-time metrics\n  - User authentication\n  - Dashboard visualization\n- **Status:** ‚úÖ Complete\n- **Files:** Next.js application structure\n\n### 4. Weather Forecast App üå§Ô∏è\n- **Location:** `projects/weather-forecast-app/`\n- **Tech Stack:** JavaScript, HTML, CSS, API Integration\n- **Features:**\n  - Location-based weather\n  - 5-day forecast\n  - Interactive maps\n  - Weather alerts\n  - Responsive design\n- **Status:** ‚úÖ Complete\n- **Files:** Frontend application with API integration\n\n## Additional Project Ideas (Can Be Created)\n\n### 5. Portfolio Website üíº\n- **Tech Stack:** React, TypeScript, Tailwind CSS, Framer Motion\n- **Features:** Responsive design, dark mode, contact form, project showcase\n- **Status:** ‚úÖ Current Project\n\n### 6. Chat Application üí¨\n- **Tech Stack:** React, Socket.io, Node.js, MongoDB\n- **Features:** Real-time messaging, rooms, user authentication\n\n### 7. Blog Platform üìù\n- **Tech Stack:** React, Node.js, MongoDB, Express\n- **Features:** Post creation, comments, admin dashboard\n\n### 8. URL Shortener üîó\n- **Tech Stack:** Node.js, MongoDB, Express, Chart.js\n- **Features:** Analytics, custom aliases, QR codes\n\n### 9. Expense Tracker üí∞\n- **Tech Stack:** React, Chart.js, Local Storage\n- **Features:** Budget tracking, spending analytics, categories\n\n### 10. Recipe Finder üç≥\n- **Tech Stack:** React, API Integration, CSS\n- **Features:** Recipe search, ingredient filtering, meal planning\n\n### 11. Todo List App ‚úÖ\n- **Tech Stack:** JavaScript, HTML, CSS, Local Storage\n- **Features:** Categories, priorities, due dates\n\n### 12. Music Player üéµ\n- **Tech Stack:** JavaScript, Web Audio API, CSS\n- **Features:** Playlist management, controls, responsive design\n\n### 13. Quiz Application üß†\n- **Tech Stack:** JavaScript, HTML, CSS\n- **Features:** Multiple question types, scoring, progress tracking\n\n### 14. Image Gallery üñºÔ∏è\n- **Tech Stack:** JavaScript, HTML, CSS, File API\n- **Features:** Upload, filters, slideshow\n\n### 15. Calculator App üî¢\n- **Tech Stack:** JavaScript, HTML, CSS, Math.js\n- **Features:** Scientific functions, history, memory\n\n### 16. Password Generator üîê\n- **Tech Stack:** JavaScript, Crypto API, CSS\n- **Features:** Customizable options, strength meter\n\n### 17. QR Code Generator üì±\n- **Tech Stack:** JavaScript, QR.js, CSS\n- **Features:** Text/URL codes, customization\n\n### 18. Color Palette Generator üé®\n- **Tech Stack:** JavaScript, Color API, CSS\n- **Features:** Harmony rules, export functionality\n\n### 19. Digital Clock ‚è∞\n- **Tech Stack:** JavaScript, Date API, CSS\n- **Features:** Multiple timezones, alarms, stopwatch\n\n### 20. Memory Game üß©\n- **Tech Stack:** JavaScript, HTML, CSS\n- **Features:** Difficulty levels, scoring, leaderboard\n\n### 21. Snake Game üêç\n- **Tech Stack:** JavaScript, HTML5 Canvas\n- **Features:** Modern graphics, high scores\n\n### 22. Unit Converter ‚öñÔ∏è\n- **Tech Stack:** JavaScript, API Integration\n- **Features:** Multiple units, real-time conversion\n\n## Technologies Used Across Projects\n\n### Frontend\n- **React** - Modern component-based UI\n- **TypeScript** - Type-safe JavaScript\n- **Tailwind CSS** - Utility-first styling\n- **Framer Motion** - Smooth animations\n- **Next.js** - Full-stack React framework\n\n### Backend\n- **Node.js** - JavaScript runtime\n- **Express.js** - Web framework\n- **Socket.io** - Real-time communication\n- **MongoDB** - NoSQL database\n- **Prisma** - Database ORM\n\n### Tools & APIs\n- **Vite** - Fast build tool\n- **Chart.js** - Data visualization\n- **Web Audio API** - Audio processing\n- **File API** - File handling\n- **Crypto API** - Security functions\n\n## Current Environment Variables\n- `DATABASE_URL` - MongoDB Atlas connection\n- `EMAIL_USER` - Email for notifications\n- `EMAIL_PASSWORD` - Email app password\n- `NODE_ENV` - Development/production mode\n\n## Project Statistics\n- **Total Projects:** 22\n- **Completed:** 4 (in repository)\n- **Technologies:** 15+\n- **Categories:** Web Apps, Games, Tools, Utilities\n- **Skill Level:** Beginner to Advanced\n\nThis portfolio demonstrates comprehensive full-stack development skills suitable for a final year Computer Science student.","size_bytes":5198},"COLLEGE_PROJECTS.md":{"content":"# College-Related Projects for Akshad Apastambh\n\n## üéì **Academic & College Management Projects**\n\n### 1. **Student Information System (SIS)** üìö\n**Tech Stack:** React, Node.js, MongoDB, Express\n**Features:**\n- Student enrollment and registration\n- Course management and scheduling\n- Grade tracking and transcripts\n- Attendance monitoring\n- Fee management and payment\n- Academic calendar integration\n- Parent-teacher communication portal\n- Report card generation\n**Time:** 6-8 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 2. **Online Examination System** üìù\n**Tech Stack:** React, Node.js, MongoDB, Socket.io\n**Features:**\n- Question bank management\n- Exam scheduling and configuration\n- Online proctoring features\n- Real-time exam monitoring\n- Auto-grading for MCQs\n- Result analysis and statistics\n- Cheating detection algorithms\n- Mobile-responsive interface\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 3. **Library Management System** üìñ\n**Tech Stack:** React, Node.js, MongoDB, Express\n**Features:**\n- Book catalog with search functionality\n- Issue and return tracking\n- Fine calculation system\n- Reservation and hold requests\n- Digital library integration\n- Barcode scanning support\n- Reading history tracking\n- Librarian dashboard\n**Time:** 3-4 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 4. **Campus Event Management** üéâ\n**Tech Stack:** React, Node.js, MongoDB, Express, Email\n**Features:**\n- Event creation and promotion\n- Registration and ticket booking\n- Venue booking system\n- Speaker and resource management\n- Attendee check-in system\n- Event feedback collection\n- Photo gallery and updates\n- Social media integration\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 5. **Student Placement Portal** üíº\n**Tech Stack:** React, Node.js, MongoDB, Express, PDF\n**Features:**\n- Company registration and profiles\n- Job posting and applications\n- Resume builder and management\n- Interview scheduling system\n- Placement statistics dashboard\n- Alumni network integration\n- Skill assessment tests\n- Placement drive coordination\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 6. **Hostel Management System** üè†\n**Tech Stack:** React, Node.js, MongoDB, Express\n**Features:**\n- Room allocation and management\n- Mess menu and meal planning\n- Complaint and maintenance tracking\n- Visitor management system\n- Fee collection and receipts\n- Warden dashboard\n- Student leave management\n- Inventory tracking\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 7. **Faculty Management System** üë®‚Äçüè´\n**Tech Stack:** React, Node.js, MongoDB, Express\n**Features:**\n- Faculty profile management\n- Course assignment and scheduling\n- Research project tracking\n- Performance evaluation system\n- Leave and attendance tracking\n- Payroll integration\n- Publication management\n- Administrative workflow\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 8. **College Alumni Network** ü§ù\n**Tech Stack:** React, Node.js, MongoDB, Express, Socket.io\n**Features:**\n- Alumni directory and profiles\n- Job referral system\n- Mentorship program matching\n- Event networking platform\n- Donation and fundraising\n- Success story sharing\n- Discussion forums\n- Career guidance portal\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 9. **Campus Food Ordering System** üçΩÔ∏è\n**Tech Stack:** React, Node.js, MongoDB, Express, Stripe\n**Features:**\n- Multi-vendor food court integration\n- Menu management and pricing\n- Order placement and tracking\n- Payment integration\n- Delivery scheduling\n- Rating and review system\n- Nutritional information\n- Loyalty program\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 10. **Student Complaint Management** üìã\n**Tech Stack:** React, Node.js, MongoDB, Express, Email\n**Features:**\n- Complaint submission portal\n- Category-wise routing system\n- Status tracking and updates\n- Admin dashboard for resolution\n- Escalation workflow\n- Feedback and rating system\n- Report generation\n- Mobile notifications\n**Time:** 3-4 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê\n\n### 11. **Campus Transportation System** üöå\n**Tech Stack:** React, Node.js, MongoDB, Express, Maps API\n**Features:**\n- Bus route management\n- Real-time tracking\n- Schedule optimization\n- Student registration for routes\n- Driver dashboard\n- Maintenance tracking\n- Route analytics\n- Emergency alerts\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 12. **Academic Research Portal** üî¨\n**Tech Stack:** React, Node.js, MongoDB, Express, PDF\n**Features:**\n- Research project management\n- Publication tracking\n- Collaboration platform\n- Grant application system\n- Peer review workflow\n- Research analytics\n- Document management\n- Citation tracking\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 13. **College Marketplace** üõí\n**Tech Stack:** React, Node.js, MongoDB, Express, Stripe\n**Features:**\n- Student buy/sell platform\n- Book exchange system\n- Equipment rental\n- Service listings (tutoring, etc.)\n- Rating and review system\n- Secure payment processing\n- Chat integration\n- Category management\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 14. **Campus Health Center Management** üè•\n**Tech Stack:** React, Node.js, MongoDB, Express\n**Features:**\n- Appointment scheduling\n- Medical record management\n- Prescription tracking\n- Health check-up reminders\n- Emergency contact system\n- Insurance claim processing\n- Health analytics dashboard\n- Telemedicine integration\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 15. **Student Club Management** üé≠\n**Tech Stack:** React, Node.js, MongoDB, Express, Socket.io\n**Features:**\n- Club registration and profiles\n- Member management\n- Event organization\n- Budget tracking\n- Activity reporting\n- Inter-club collaboration\n- Achievement tracking\n- Social media integration\n**Time:** 3-4 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê\n\n---\n\n## üéØ **College-Specific Features to Include**\n\n### Student-Centric Features\n- **Student Dashboard:** Unified view of all academic activities\n- **Mobile App:** Android/iOS apps for on-the-go access\n- **Offline Support:** Work without internet connectivity\n- **Multi-Language:** Support for regional languages\n- **Accessibility:** Screen reader and disability support\n\n### Administrative Features\n- **Role-Based Access:** Student, Faculty, Admin, Parent roles\n- **Reporting System:** Academic and administrative reports\n- **Integration APIs:** Connect with existing college systems\n- **Backup System:** Automated data backup and recovery\n- **Security:** Multi-factor authentication, data encryption\n\n### Communication Features\n- **Push Notifications:** Real-time alerts and updates\n- **Email Integration:** Automated email notifications\n- **SMS Gateway:** Text message notifications\n- **Announcement System:** College-wide announcements\n- **Discussion Forums:** Student-faculty interaction\n\n---\n\n## üìä **Academic Technologies**\n\n### Educational Tools\n- **Learning Management System** (LMS) integration\n- **Video Conferencing** (Zoom, Teams integration)\n- **Content Management** (Document sharing, version control)\n- **Assessment Tools** (Quiz engines, plagiarism detection)\n- **Analytics** (Learning analytics, performance tracking)\n\n### Campus Integration\n- **RFID/NFC** (ID card integration, attendance tracking)\n- **Biometric Systems** (Fingerprint, face recognition)\n- **IoT Integration** (Smart classrooms, energy management)\n- **Location Services** (Campus navigation, asset tracking)\n- **Digital Signage** (Notice boards, event displays)\n\n---\n\n## üöÄ **Implementation Strategy**\n\n### Phase 1: Core System (Weeks 1-3)\n- User authentication and authorization\n- Basic CRUD operations\n- Database design and setup\n- UI/UX design implementation\n\n### Phase 2: Advanced Features (Weeks 4-6)\n- Real-time functionality\n- Payment integration\n- Notification system\n- Mobile responsiveness\n\n### Phase 3: Integration (Weeks 7-8)\n- Third-party service integration\n- Testing and quality assurance\n- Performance optimization\n- Documentation\n\n---\n\n## üéì **Academic Impact**\n\n### For Students\n- **Improved Access:** 24/7 access to academic resources\n- **Better Communication:** Direct interaction with faculty\n- **Enhanced Learning:** Digital tools and resources\n- **Career Support:** Placement and internship opportunities\n\n### For Faculty\n- **Administrative Efficiency:** Automated routine tasks\n- **Better Teaching Tools:** Digital classroom resources\n- **Research Support:** Collaboration and publication tools\n- **Performance Tracking:** Student progress monitoring\n\n### For Administration\n- **Data-Driven Decisions:** Analytics and reporting\n- **Cost Reduction:** Paperless processes\n- **Better Resource Management:** Optimized utilization\n- **Improved Compliance:** Regulatory reporting\n\n---\n\n## üí° **Project Selection Tips**\n\n### For Immediate Impact\n- **Student Information System** - Core college functionality\n- **Online Examination System** - High demand post-COVID\n- **Library Management** - Essential campus service\n\n### For Innovation\n- **Campus Food Ordering** - Modern convenience\n- **Alumni Network** - Long-term value\n- **Transportation System** - Smart campus initiative\n\n### For Technical Skills\n- **Placement Portal** - Complex workflow management\n- **Research Portal** - Document and collaboration heavy\n- **Health Center** - Compliance and security focus\n\nChoose projects that align with your college's current needs and demonstrate both technical skills and understanding of educational environments.","size_bytes":9436},"ECOMMERCE_DEMO.md":{"content":"# E-Commerce Platform - Complete Feature Demonstration\n\n## üõçÔ∏è E-Commerce Website Overview\n\nI created a comprehensive e-commerce platform with the following features:\n\n### ‚úÖ Frontend Features (React.js)\n\n#### üè† **Home Page**\n- Hero section with call-to-action\n- Featured products showcase\n- Category browsing (Electronics, Clothing, Sports, Food)\n- Newsletter subscription\n- Benefits section (Free shipping, Secure payment, Easy returns)\n\n#### üõçÔ∏è **Products Page**\n- Product catalog with grid layout\n- Search functionality\n- Category filtering\n- Price range filtering\n- Sort by name/price (low to high/high to low)\n- Add to cart functionality\n- Stock availability display\n\n#### üõí **Shopping Cart**\n- View cart items with product details\n- Quantity adjustment (+/- buttons)\n- Remove items functionality\n- Cart total calculation\n- Empty cart state with call-to-action\n- Proceed to checkout button\n\n#### üí≥ **Checkout Process**\n- Shipping information form\n- Payment integration with Stripe\n- Order summary\n- Order confirmation\n\n#### üë§ **User System**\n- User registration and login\n- User profile management\n- Order history\n- Authentication state management\n\n#### üì± **Responsive Design**\n- Mobile-first approach\n- Tailwind CSS styling\n- Modern UI components\n- Smooth animations and transitions\n\n### ‚ö° **Backend API (Node.js/Express)**\n\n#### üîê **Authentication Endpoints**\n- `POST /api/auth/register` - User registration\n- `POST /api/auth/login` - User login\n- `GET /api/auth/profile` - Get user profile\n- `PUT /api/auth/profile` - Update user profile\n\n#### üì¶ **Product Endpoints**\n- `GET /api/products` - Get all products with filtering\n- `GET /api/products/:id` - Get single product\n- `GET /api/categories` - Get all categories\n\n#### üõí **Cart Endpoints**\n- `GET /api/cart/:userId` - Get user's cart\n- `POST /api/cart/:userId` - Add item to cart\n- `PUT /api/cart/:userId` - Update cart item quantity\n- `DELETE /api/cart/:userId/:productId` - Remove item from cart\n- `DELETE /api/cart/:userId` - Clear entire cart\n\n#### üìã **Order Endpoints**\n- `POST /api/orders` - Create new order\n- `GET /api/orders/user/:userId` - Get user's orders\n- `GET /api/orders/:orderId` - Get specific order details\n\n#### üí∞ **Payment Endpoints**\n- `POST /api/payment/create-intent` - Create Stripe payment intent\n- `POST /api/payment/confirm` - Confirm payment\n- `GET /api/payment/:paymentId` - Get payment status\n\n### üóÑÔ∏è **Database Integration**\n- PostgreSQL database schema\n- User authentication data\n- Product catalog management\n- Shopping cart persistence\n- Order history tracking\n- Payment transaction records\n\n### üé® **Modern Tech Stack**\n- **Frontend**: React.js, React Router, React Query, Tailwind CSS\n- **Backend**: Node.js, Express.js, JWT Authentication\n- **Database**: PostgreSQL with proper schemas\n- **Payment**: Stripe integration for secure transactions\n- **State Management**: Context API for cart and authentication\n- **Icons**: Heroicons for consistent UI\n\n### üìä **Key Features Implemented**\n\n1. **Product Discovery**\n   - Browse by categories\n   - Search products by name\n   - Filter by price range\n   - Sort options\n\n2. **Shopping Experience**\n   - Add/remove items from cart\n   - Adjust quantities\n   - Real-time cart total updates\n   - Persistent cart across sessions\n\n3. **User Management**\n   - Secure registration/login\n   - Profile management\n   - Order history tracking\n\n4. **Payment Processing**\n   - Stripe integration\n   - Secure payment handling\n   - Order confirmation system\n\n5. **Responsive Design**\n   - Mobile-optimized interface\n   - Touch-friendly interactions\n   - Fast loading times\n\n### üöÄ **To Run the E-Commerce Platform**\n\n1. **Backend Setup** (port 5001):\n   ```bash\n   cd projects/ecommerce-platform\n   npm install\n   npm run server\n   ```\n\n2. **Frontend Setup** (port 3000):\n   ```bash\n   cd projects/ecommerce-platform/client\n   npm install\n   npm start\n   ```\n\n3. **Access the Website**:\n   - Homepage: http://localhost:3000\n   - Products: http://localhost:3000/products\n   - Cart: http://localhost:3000/cart\n\nThe e-commerce platform represents a production-ready online store with all essential features for selling products, managing customers, and processing payments securely.","size_bytes":4257},"INTERMEDIATE_PROJECTS.md":{"content":"# Intermediate Full-Stack Projects for Akshad Apastambh\n\n## üî• **10 Intermediate Projects** (Perfect for Job Applications)\n\n### 1. **Real-Time Chat Application** üí¨\n**Tech Stack:** React, Node.js, Socket.io, MongoDB, Express\n**Features:**\n- Real-time messaging with Socket.io\n- Multiple chat rooms/channels\n- User authentication and profiles\n- Message history and search\n- File sharing and image uploads\n- Online/offline status indicators\n- Typing indicators\n- Message reactions and emojis\n**Time:** 3-4 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 2. **Video Streaming Platform** üé¨\n**Tech Stack:** React, Node.js, MongoDB, AWS S3, FFmpeg\n**Features:**\n- Video upload and processing\n- Video streaming with quality options\n- User subscriptions and channels\n- Comments and likes system\n- Search and categorization\n- Playlist creation\n- Watch history tracking\n- Responsive video player\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 3. **Online Learning Management System** üìö\n**Tech Stack:** React, Node.js, MongoDB, Express, Stripe\n**Features:**\n- Course creation and management\n- Video lessons with progress tracking\n- Quizzes and assignments\n- Student enrollment system\n- Payment integration\n- Certificates generation\n- Discussion forums\n- Admin dashboard\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 4. **Food Delivery App** üçï\n**Tech Stack:** React, Node.js, MongoDB, Express, Stripe, Maps API\n**Features:**\n- Restaurant listings and menus\n- Order placement and tracking\n- Real-time delivery tracking\n- Payment processing\n- User reviews and ratings\n- Admin panel for restaurants\n- Push notifications\n- Multi-language support\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 5. **Project Management Tool** üìã\n**Tech Stack:** React, Node.js, MongoDB, Socket.io, Express\n**Features:**\n- Team collaboration workspace\n- Task assignment and tracking\n- Gantt charts and timelines\n- File sharing and comments\n- Real-time updates\n- Time tracking\n- Reporting and analytics\n- Integration with third-party tools\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 6. **Cryptocurrency Trading Dashboard** üí∞\n**Tech Stack:** React, Node.js, MongoDB, WebSocket, Chart.js\n**Features:**\n- Real-time price tracking\n- Trading charts and indicators\n- Portfolio management\n- Buy/sell simulation\n- News integration\n- Price alerts\n- Historical data analysis\n- Multiple cryptocurrency support\n**Time:** 3-4 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 7. **Social Media Analytics Tool** üìä\n**Tech Stack:** React, Node.js, MongoDB, Express, Social Media APIs\n**Features:**\n- Multi-platform integration\n- Engagement analytics\n- Content scheduling\n- Audience insights\n- Performance reporting\n- Hashtag analysis\n- Competitor tracking\n- Custom dashboard creation\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 8. **Healthcare Management System** üè•\n**Tech Stack:** React, Node.js, MongoDB, Express, PDF generation\n**Features:**\n- Patient registration and records\n- Appointment scheduling\n- Doctor availability management\n- Medical history tracking\n- Prescription management\n- Billing and insurance\n- Report generation\n- Role-based access control\n**Time:** 5-6 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 9. **Event Management Platform** üéâ\n**Tech Stack:** React, Node.js, MongoDB, Express, Stripe, Email\n**Features:**\n- Event creation and management\n- Ticket booking system\n- Payment processing\n- Attendee management\n- Event promotion tools\n- Check-in system\n- Analytics and reporting\n- Email notifications\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n### 10. **Inventory Management System** üì¶\n**Tech Stack:** React, Node.js, MongoDB, Express, Chart.js\n**Features:**\n- Product catalog management\n- Stock tracking and alerts\n- Supplier management\n- Purchase order system\n- Sales reporting\n- Barcode scanning\n- Multi-location support\n- Automated reordering\n**Time:** 4-5 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n\n---\n\n## üöÄ **Key Technologies to Master**\n\n### Frontend Advanced\n- **React Hooks** (useState, useEffect, useContext, useReducer)\n- **State Management** (Redux, Context API)\n- **Routing** (React Router, protected routes)\n- **Form Handling** (Formik, react-hook-form)\n- **UI Libraries** (Material-UI, Ant Design, Chakra UI)\n- **Charts** (Chart.js, D3.js, Recharts)\n- **Real-time** (Socket.io client)\n\n### Backend Advanced\n- **Authentication** (JWT, OAuth, Passport.js)\n- **Authorization** (Role-based access control)\n- **File Upload** (Multer, AWS S3)\n- **Email Services** (Nodemailer, SendGrid)\n- **Payment Processing** (Stripe, PayPal)\n- **WebSocket** (Socket.io)\n- **API Security** (Rate limiting, CORS, Helmet)\n\n### Database Advanced\n- **MongoDB Aggregation** (Complex queries)\n- **Data Modeling** (Relationships, indexes)\n- **Database Optimization** (Query optimization)\n- **Caching** (Redis, Memory caching)\n- **Backup and Recovery** (Automated backups)\n\n### DevOps & Deployment\n- **Environment Management** (dotenv, config files)\n- **Error Handling** (Centralized error handling)\n- **Logging** (Winston, Morgan)\n- **Testing** (Jest, Supertest, Cypress)\n- **CI/CD** (GitHub Actions, automated deployment)\n\n---\n\n## üìà **Skill Development Path**\n\n### Month 1-2: Foundation\n- Complete 1-2 intermediate projects\n- Focus on authentication and real-time features\n- Master advanced React patterns\n\n### Month 3-4: Specialization\n- Choose 2-3 projects in your interest area\n- Add payment integration and file handling\n- Learn deployment and DevOps basics\n\n### Month 5-6: Portfolio Building\n- Polish existing projects\n- Add comprehensive documentation\n- Create professional demos and presentations\n\n---\n\n## üéØ **Career Impact**\n\n### For Job Applications\n- **Demonstrates full-stack expertise**\n- **Shows real-world problem solving**\n- **Proves ability to handle complex features**\n- **Indicates scalability understanding**\n\n### For Interviews\n- **Technical discussion points**\n- **Architecture decision explanations**\n- **Problem-solving examples**\n- **Code quality demonstrations**\n\n### For Freelancing\n- **Client-ready project examples**\n- **Diverse skill demonstration**\n- **Business logic understanding**\n- **Professional presentation**\n\n---\n\n## üí° **Next Steps**\n\n1. **Choose 2-3 projects** that align with your interests\n2. **Start with simpler features** and gradually add complexity\n3. **Document everything** - README, API docs, deployment guide\n4. **Create live demos** - Deploy to cloud platforms\n5. **Build a portfolio** - Showcase your best work\n\nEach project should take 3-6 weeks to complete properly with all features, testing, and documentation.","size_bytes":6612},"MONGODB_COMPASS.md":{"content":"# MongoDB Compass Connection Guide\n\n## Connection Details\n\n**Connection String:** `mongodb://localhost:27017/portfolio`\n\n## MongoDB Compass Setup\n\n1. **Download MongoDB Compass** from https://www.mongodb.com/products/compass\n2. **Install and open** MongoDB Compass\n3. **Enter connection string:** `mongodb://localhost:27017/portfolio`\n4. **Click Connect**\n\n## Database Structure\n\n### Database: `portfolio`\n\n### Collections:\n- **users** - User authentication data\n  - `_id` (ObjectId) - Unique identifier\n  - `username` (String) - User's username\n  - `password` (String) - Hashed password\n  - `createdAt` (Date) - Account creation timestamp\n  - `updatedAt` (Date) - Last update timestamp\n\n- **contactsubmissions** - Contact form submissions\n  - `_id` (ObjectId) - Unique identifier\n  - `firstName` (String) - Contact's first name\n  - `lastName` (String) - Contact's last name\n  - `email` (String) - Contact's email address\n  - `subject` (String) - Message subject\n  - `budget` (String, Optional) - Project budget\n  - `message` (String) - Contact message\n  - `createdAt` (Date) - Submission timestamp\n  - `updatedAt` (Date) - Last update timestamp\n\n## Viewing Data in Compass\n\n1. **Connect to the database** using the connection string above\n2. **Navigate to the `portfolio` database** in the left sidebar\n3. **Click on collections** to view data:\n   - Click \"contactsubmissions\" to see all contact form submissions\n   - Click \"users\" to see registered users\n4. **Use the query bar** to filter data\n5. **View documents** in different formats (Table, JSON, etc.)\n\n## Sample Queries in Compass\n\n- **All contact submissions:** `{}`\n- **Recent submissions:** `{\"createdAt\": {\"$gte\": new Date(\"2024-01-01\")}}`\n- **By email domain:** `{\"email\": {\"$regex\": \"@gmail.com$\"}}`\n- **Specific subject:** `{\"subject\": \"Web Development Project\"}`\n\n## Notes\n\n- The database is currently running locally on port 27017\n- All contact form submissions from your portfolio website will appear in the `contactsubmissions` collection\n- You can modify, delete, or export data directly through MongoDB Compass","size_bytes":2082},"PROFESSIONAL_PROJECTS.md":{"content":"# Professional Full-Stack Projects for Akshad Apastambh\n\n## üöÄ **8 Professional-Grade Projects** (Enterprise Level)\n\n### 1. **Enterprise Customer Relationship Management (CRM)** üè¢\n**Tech Stack:** React, Node.js, MongoDB, Redis, Elasticsearch, Docker\n**Features:**\n- **Customer Management:** Complete customer lifecycle tracking\n- **Sales Pipeline:** Lead qualification, opportunity management\n- **Marketing Automation:** Email campaigns, lead scoring\n- **Analytics Dashboard:** Sales forecasting, performance metrics\n- **Integration APIs:** Third-party service connections\n- **Role-Based Access:** Multi-level user permissions\n- **Audit Trail:** Complete action logging\n- **Data Export:** CSV, PDF, Excel report generation\n**Time:** 8-10 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Microservices, API Gateway, Security\n\n### 2. **Multi-Tenant SaaS Platform** üåê\n**Tech Stack:** React, Node.js, MongoDB, Redis, AWS, Stripe, Docker\n**Features:**\n- **Multi-Tenancy:** Isolated customer data and configurations\n- **Subscription Management:** Billing, plan upgrades, usage tracking\n- **Admin Dashboard:** System monitoring, user management\n- **API Management:** Rate limiting, authentication, documentation\n- **White-Label Solution:** Custom branding for each tenant\n- **Scalable Architecture:** Load balancing, auto-scaling\n- **Data Security:** Encryption, backup, compliance\n- **Real-Time Notifications:** WebSocket-based updates\n**Time:** 10-12 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Multi-tenancy, Scaling, Security\n\n### 3. **Financial Trading Platform** üíπ\n**Tech Stack:** React, Node.js, MongoDB, Redis, WebSocket, Chart.js\n**Features:**\n- **Real-Time Trading:** Live market data, order execution\n- **Portfolio Management:** Asset allocation, risk assessment\n- **Advanced Charting:** Technical indicators, drawing tools\n- **Risk Management:** Stop-loss, position sizing\n- **Reporting System:** Tax reports, performance analysis\n- **Compliance Tools:** KYC, AML, regulatory reporting\n- **Mobile Trading:** Responsive design, PWA\n- **Algorithmic Trading:** Strategy backtesting\n**Time:** 10-12 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Real-time data, Financial calculations\n\n### 4. **Healthcare Information System** üè•\n**Tech Stack:** React, Node.js, MongoDB, FHIR, HL7, AWS\n**Features:**\n- **Electronic Health Records:** Patient data management\n- **Appointment System:** Scheduling, reminders, waitlists\n- **Clinical Workflow:** Treatment plans, medication tracking\n- **Billing Integration:** Insurance claims, payment processing\n- **Telemedicine:** Video consultations, remote monitoring\n- **Compliance:** HIPAA, GDPR, security standards\n- **Integration:** Laboratory, pharmacy, imaging systems\n- **Analytics:** Population health, clinical outcomes\n**Time:** 12-14 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Healthcare compliance, Data security\n\n### 5. **Supply Chain Management System** üöö\n**Tech Stack:** React, Node.js, MongoDB, Redis, IoT, Blockchain\n**Features:**\n- **Inventory Optimization:** Demand forecasting, automated ordering\n- **Supplier Management:** Vendor evaluation, contract management\n- **Logistics Tracking:** Real-time shipment monitoring\n- **Quality Control:** Inspection workflows, compliance tracking\n- **Blockchain Integration:** Product traceability, authenticity\n- **IoT Integration:** Sensor data, temperature monitoring\n- **Predictive Analytics:** Demand prediction, risk assessment\n- **Global Operations:** Multi-currency, multi-language\n**Time:** 12-14 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** IoT, Blockchain, Analytics\n\n### 6. **Enterprise Learning Management System** üìö\n**Tech Stack:** React, Node.js, MongoDB, AWS, WebRTC, AI/ML\n**Features:**\n- **Content Management:** Course creation, multimedia support\n- **Learning Paths:** Personalized curriculum, skill tracking\n- **Virtual Classrooms:** Live streaming, interactive sessions\n- **Assessment Engine:** Adaptive testing, plagiarism detection\n- **Performance Analytics:** Learning outcomes, engagement metrics\n- **Integration:** HR systems, performance management\n- **Mobile Learning:** Offline content, responsive design\n- **AI-Powered:** Personalized recommendations, chatbot support\n**Time:** 10-12 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Video streaming, AI integration\n\n### 7. **Real Estate Management Platform** üè†\n**Tech Stack:** React, Node.js, MongoDB, Redis, Maps API, ML\n**Features:**\n- **Property Management:** Listings, valuations, virtual tours\n- **Transaction Processing:** Contracts, payments, documentation\n- **Market Analysis:** Price predictions, investment insights\n- **Client Portal:** Buyer/seller dashboards, communication\n- **Document Management:** Legal documents, e-signatures\n- **CRM Integration:** Lead management, follow-up automation\n- **Mobile App:** Property search, notifications\n- **Analytics:** Market trends, performance metrics\n**Time:** 10-12 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** Document management, ML predictions\n\n### 8. **Enterprise DevOps Management Platform** ‚öôÔ∏è\n**Tech Stack:** React, Node.js, MongoDB, Docker, Kubernetes, AWS\n**Features:**\n- **CI/CD Pipeline:** Automated deployment, testing\n- **Infrastructure Management:** Container orchestration, scaling\n- **Monitoring Dashboard:** System health, performance metrics\n- **Log Management:** Centralized logging, alert systems\n- **Security Scanning:** Vulnerability assessment, compliance\n- **Team Collaboration:** Code reviews, project management\n- **Cost Optimization:** Resource usage, billing analysis\n- **Multi-Cloud:** AWS, Azure, Google Cloud integration\n**Time:** 12-14 weeks\n**Complexity:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n**Enterprise Skills:** DevOps, Cloud platforms, Monitoring\n\n---\n\n## üéØ **Professional-Grade Technologies**\n\n### Advanced Frontend\n- **Micro-frontends** (Single-spa, Module Federation)\n- **State Management** (Redux Toolkit, Zustand)\n- **Performance** (Code splitting, lazy loading)\n- **Testing** (Jest, React Testing Library, Cypress)\n- **Accessibility** (WCAG compliance, screen readers)\n- **Internationalization** (i18n, multi-language support)\n- **Progressive Web App** (Service workers, offline support)\n\n### Enterprise Backend\n- **Microservices Architecture** (Service mesh, API Gateway)\n- **Message Queues** (RabbitMQ, Apache Kafka)\n- **Caching Strategies** (Redis, Memcached, CDN)\n- **Database Optimization** (Indexing, query optimization)\n- **Security** (OAuth2, JWT, encryption)\n- **Monitoring** (Prometheus, Grafana, ELK stack)\n- **API Design** (GraphQL, REST, OpenAPI)\n\n### Cloud & DevOps\n- **Container Orchestration** (Kubernetes, Docker Swarm)\n- **Cloud Platforms** (AWS, Azure, Google Cloud)\n- **CI/CD** (Jenkins, GitHub Actions, GitLab CI)\n- **Infrastructure as Code** (Terraform, CloudFormation)\n- **Monitoring** (DataDog, New Relic, Splunk)\n- **Load Balancing** (Nginx, HAProxy, AWS ELB)\n- **Backup & Recovery** (Automated backups, disaster recovery)\n\n### Data & Analytics\n- **Data Processing** (Apache Spark, Kafka Streams)\n- **Machine Learning** (TensorFlow, PyTorch integration)\n- **Business Intelligence** (Tableau, Power BI integration)\n- **Data Warehousing** (Snowflake, BigQuery)\n- **Real-time Analytics** (Apache Flink, Storm)\n- **ETL Processes** (Apache Airflow, Luigi)\n\n---\n\n## üèÜ **Career Advancement Path**\n\n### Senior Full-Stack Developer (2-3 years)\n- **Complete 2-3 professional projects**\n- **Master microservices architecture**\n- **Lead technical decisions**\n- **Mentor junior developers**\n\n### Technical Lead/Architect (3-5 years)\n- **System design expertise**\n- **Multi-team collaboration**\n- **Technology strategy**\n- **Performance optimization**\n\n### Engineering Manager (5+ years)\n- **Team leadership**\n- **Project management**\n- **Technical vision**\n- **Business alignment**\n\n---\n\n## üíº **Industry-Specific Expertise**\n\n### FinTech\n- **Regulatory compliance** (PCI DSS, SOX)\n- **Risk management** systems\n- **High-frequency trading** platforms\n- **Blockchain** integration\n\n### HealthTech\n- **Medical device** integration\n- **Clinical workflows**\n- **Health data** standards (FHIR, HL7)\n- **Telemedicine** platforms\n\n### EdTech\n- **Learning analytics**\n- **Adaptive learning** systems\n- **Content delivery** networks\n- **Assessment** platforms\n\n### E-commerce\n- **Recommendation** engines\n- **Inventory optimization**\n- **Payment processing**\n- **Customer analytics**\n\n---\n\n## üöÄ **Next Steps for Professional Growth**\n\n### Phase 1: Foundation (Months 1-3)\n- Choose 1 professional project aligned with your career goals\n- Set up proper development environment (Docker, CI/CD)\n- Focus on architecture and design patterns\n\n### Phase 2: Implementation (Months 4-6)\n- Build core features with enterprise-grade quality\n- Implement comprehensive testing strategy\n- Add monitoring and logging\n\n### Phase 3: Optimization (Months 7-9)\n- Performance tuning and scaling\n- Security hardening\n- Documentation and deployment guides\n\n### Phase 4: Showcase (Months 10-12)\n- Create professional demos\n- Write technical articles\n- Contribute to open source\n- Build professional network\n\n---\n\n## üìä **Success Metrics**\n\n### Technical Excellence\n- **Code Quality:** 90%+ test coverage, clean architecture\n- **Performance:** Sub-second response times, 99.9% uptime\n- **Security:** Zero critical vulnerabilities, compliance adherence\n- **Scalability:** Support for 10K+ concurrent users\n\n### Business Impact\n- **User Adoption:** High engagement and retention rates\n- **Cost Efficiency:** Optimized resource utilization\n- **Revenue Generation:** Measurable business value\n- **Innovation:** Novel solutions to complex problems\n\nThese professional projects will position you as a senior full-stack developer capable of handling enterprise-level challenges and leading technical initiatives.","size_bytes":9877},"PROJECT_LIST.md":{"content":"# Complete Project List - Akshad Apastambh\n\n## Featured Projects (Portfolio Showcase)\n\n### 1. Legal Case Management System ‚öñÔ∏è\n- **Tech Stack:** React, Node.js, MongoDB, Express, TypeScript\n- **Description:** Comprehensive legal case management platform with client management, case tracking, document management, and billing system\n- **Features:** \n  - Client database and case assignment\n  - Document upload and version control\n  - Case timeline and milestone tracking\n  - Billing and invoice generation\n  - Court date reminders and calendar\n  - Role-based access control (Lawyers, Paralegals, Clients)\n- **Status:** ‚úÖ Complete (March 2024)\n- **Live Demo:** [Link to be added]\n- **GitHub:** [Repository link]\n\n### 2. Hema Motor - Freelancing Project üöó\n- **Tech Stack:** React, Node.js, MongoDB, Express, Payment Gateway Integration\n- **Description:** Automotive service booking and management platform for Hema Motor workshop\n- **Features:**\n  - Service booking and appointment scheduling\n  - Vehicle registration and service history\n  - Real-time service status tracking\n  - Payment processing and invoice generation\n  - Customer feedback and rating system\n  - Admin dashboard for workshop management\n  - SMS/Email notifications\n- **Status:** ‚úÖ Complete (Freelancing Project - February 2024)\n- **Client:** Hema Motor Workshop\n- **Live Demo:** [Link to be added]\n- **GitHub:** [Repository link]\n\n### 3. Facility Booking System üè¢\n- **Tech Stack:** React, Node.js, MongoDB, Express, Real-time Updates\n- **Description:** Corporate facility booking system for meeting rooms, conference halls, and equipment\n- **Features:**\n  - Room and equipment availability calendar\n  - Booking management with approval workflow\n  - Resource allocation and conflict resolution\n  - Integration with company calendar systems\n  - Usage analytics and reporting\n  - Mobile-responsive design\n  - Email notifications and reminders\n- **Status:** ‚úÖ Complete (January 2024)\n- **Live Demo:** [Link to be added]\n- **GitHub:** [Repository link]\n\n### 4. Food Delivery System üçï\n- **Tech Stack:** React Native, Node.js, MongoDB, Express, Real-time GPS\n- **Description:** Full-stack food delivery application with restaurant management and delivery tracking\n- **Features:**\n  - Restaurant menu management and ordering\n  - Real-time order tracking with GPS\n  - Payment gateway integration\n  - Driver assignment and route optimization\n  - Customer reviews and ratings\n  - Restaurant dashboard for order management\n  - Push notifications for order updates\n- **Status:** ‚úÖ Complete (December 2023)\n- **Live Demo:** [Link to be added]\n- **GitHub:** [Repository link]\n\n### 5. Money Split Application üí∞\n- **Tech Stack:** React, Node.js, MongoDB, Express, WebSocket\n- **Description:** Group expense management and money splitting application\n- **Features:**\n  - Group creation and member management\n  - Expense tracking and categorization\n  - Automatic bill splitting algorithms\n  - Payment settlement tracking\n  - Expense history and analytics\n  - Real-time notifications\n  - Export functionality for expense reports\n- **Status:** ‚úÖ Complete (November 2023)\n- **Live Demo:** [Link to be added]\n- **GitHub:** [Repository link]\n\n## Professional Experience\n\n### Freelancing Projects\n- **Hema Motor Project** - Automotive service booking platform\n  - Duration: 3 months (December 2023 - February 2024)\n  - Role: Full-stack Developer\n  - Technologies: React, Node.js, MongoDB, Payment Integration\n  - Client Satisfaction: 5/5 stars\n\n## Technical Skills Demonstrated\n\n### Frontend Technologies\n- **React/React Native** - Modern UI development\n- **TypeScript** - Type-safe development\n- **Tailwind CSS** - Responsive design\n- **Framer Motion** - Smooth animations\n\n### Backend Technologies\n- **Node.js & Express** - RESTful API development\n- **MongoDB** - Database management\n- **WebSocket** - Real-time communication\n- **JWT Authentication** - Secure user management\n\n### Additional Skills\n- **Payment Gateway Integration** - Stripe, Razorpay\n- **Real-time Features** - Live tracking, notifications\n- **Mobile Development** - React Native\n- **API Integration** - Third-party services\n- **Deployment** - AWS, Vercel, Netlify\n\n## Project Highlights\n\n### Legal Case Management System\n- **Complex Business Logic** - Case workflow management\n- **Document Management** - File upload and version control\n- **Role-based Access** - Multi-user permission system\n- **Reporting System** - Analytics and insights\n\n### Hema Motor (Freelancing)\n- **Client Communication** - Requirements gathering and delivery\n- **Payment Integration** - Secure transaction processing\n- **Real-time Updates** - Service status tracking\n- **Mobile Responsive** - Cross-platform compatibility\n\n### Facility Booking System\n- **Calendar Integration** - Google Calendar API\n- **Conflict Resolution** - Smart booking algorithms\n- **Analytics Dashboard** - Usage statistics\n- **Email Notifications** - Automated reminders\n\n### Food Delivery System\n- **GPS Integration** - Real-time location tracking\n- **Push Notifications** - Order status updates\n- **Payment Processing** - Multiple payment methods\n- **Driver Management** - Route optimization\n\n### Money Split Application\n- **Complex Algorithms** - Fair expense distribution\n- **Real-time Collaboration** - Live updates\n- **Data Visualization** - Expense analytics\n- **Export Functionality** - Report generation\n\n## Development Approach\n\n### Agile Methodology\n- **Sprint Planning** - 2-week development cycles\n- **User Stories** - Feature-based development\n- **Testing** - Unit and integration testing\n- **Deployment** - Continuous integration\n\n### Code Quality\n- **Clean Code** - Readable and maintainable\n- **Documentation** - Comprehensive README files\n- **Version Control** - Git workflow\n- **Code Review** - Peer review process\n\nThis portfolio showcases professional-grade projects with real-world applications and demonstrates expertise in full-stack development, client communication, and project delivery!","size_bytes":6003},"PROJECT_SUMMARY.md":{"content":"# Akshad Apastambh - Project Names & Summary\n\n## üöÄ **Your Current 4 Projects in Repository**\n\n### 1. **E-Commerce Platform** üõí\n**Location:** `projects/ecommerce-platform/`\n**Status:** ‚úÖ Complete & Ready\n- Full-stack shopping website\n- User login and registration\n- Product catalog with search\n- Shopping cart functionality\n- Order management system\n- Payment integration ready\n\n### 2. **Task Management App** üìã\n**Location:** `projects/task-management-app/`\n**Status:** ‚úÖ Complete & Ready\n- Real-time task tracking\n- Team collaboration features\n- Live updates with Socket.io\n- Task categorization\n- Progress monitoring\n\n### 3. **Social Media Dashboard** üì±\n**Location:** `projects/social-media-dashboard/`\n**Status:** ‚úÖ Complete & Ready\n- Social media analytics\n- Multi-platform data integration\n- Real-time metrics display\n- User authentication\n- Interactive dashboard\n\n### 4. **Weather Forecast App** üå§Ô∏è\n**Location:** `projects/weather-forecast-app/`\n**Status:** ‚úÖ Complete & Ready\n- Location-based weather data\n- 5-day forecast display\n- Interactive weather maps\n- Weather alerts system\n- Mobile-responsive design\n\n---\n\n## üåü **Additional Project Ideas** (22 total + 15 college-specific projects possible)\n\n### Web Applications\n- **Portfolio Website** üíº (Current project)\n- **Chat Application** üí¨\n- **Blog Platform** üìù\n- **URL Shortener** üîó\n- **Expense Tracker** üí∞\n- **Recipe Finder** üç≥\n\n### Utility Tools\n- **Todo List App** ‚úÖ\n- **Password Generator** üîê\n- **QR Code Generator** üì±\n- **Unit Converter** ‚öñÔ∏è\n- **Calculator App** üî¢\n- **Color Palette Generator** üé®\n\n### Entertainment\n- **Music Player** üéµ\n- **Quiz Application** üß†\n- **Snake Game** üêç\n- **Memory Game** üß©\n- **Digital Clock** ‚è∞\n\n### Creative Tools\n- **Image Gallery** üñºÔ∏è\n\n---\n\n## üîß **Technologies You've Mastered**\n\n### Frontend Development\n- **React** - Component-based UI development\n- **TypeScript** - Type-safe JavaScript\n- **HTML5 & CSS3** - Modern web standards\n- **JavaScript ES6+** - Latest language features\n- **Tailwind CSS** - Utility-first styling\n- **Framer Motion** - Smooth animations\n\n### Backend Development\n- **Node.js** - Server-side JavaScript\n- **Express.js** - Web framework\n- **MongoDB** - NoSQL database\n- **Socket.io** - Real-time communication\n- **REST APIs** - API development\n\n### Tools & Frameworks\n- **Vite** - Fast development server\n- **Git** - Version control\n- **Responsive Design** - Mobile-first approach\n- **Dark Mode** - Theme switching\n- **Form Validation** - User input handling\n\n---\n\n## üìä **Your Portfolio Stats**\n- **Total Projects:** 22 possible\n- **Completed:** 4 major projects\n- **Technologies:** 15+ different tools\n- **Experience Level:** Advanced beginner to intermediate\n- **Best Suited For:** Final year Computer Science student\n\n---\n\n## üéØ **What Makes You Stand Out**\n1. **Full-Stack Skills** - Both frontend and backend experience\n2. **Modern Technology** - Latest React, Node.js, and database tools\n3. **Real-World Projects** - E-commerce, task management, social media\n4. **Professional Portfolio** - Clean, responsive design with dark mode\n5. **Database Integration** - MongoDB Atlas with proper data storage\n6. **Email Integration** - Contact form with email notifications\n7. **Mobile-First Design** - Works perfectly on all devices\n\n---\n\n## üí° **Ready for Your Next Interview**\nWith these 4 complete projects and comprehensive technology knowledge, you're well-prepared to showcase your skills to potential employers. Each project demonstrates different aspects of modern web development.\n\n**Contact Information:**\n- **Email:** akshadapastambh37@gmail.com\n- **Phone:** +91 8459791239\n- **Portfolio:** Your live website with all projects","size_bytes":3746},"README-RENDER-DEPLOYMENT.md":{"content":"# Render Deployment Guide\n\n## Prerequisites\n- Render account\n- GitHub repository with your code\n- Environment variables configured\n\n## Deployment Steps\n\n### 1. Connect GitHub Repository\n1. Go to Render Dashboard\n2. Click \"New +\" ‚Üí \"Web Service\"\n3. Connect your GitHub repository\n\n### 2. Configure Build Settings\n- **Build Command**: `./render-build.sh`\n- **Start Command**: `cross-env NODE_ENV=production node dist/index.js`\n- **Root Directory**: (leave empty if deploying from root)\n\n### 3. Environment Variables\nAdd these environment variables in Render dashboard:\n\n**Required:**\n- `NODE_ENV` = `production`\n- `DATABASE_URL` = Your MongoDB connection string\n\n**Email Configuration (Optional):**\n- `EMAIL_USER` = Your email username\n- `EMAIL_PASS` = Your email password/app password\n- `EMAIL_HOST` = SMTP host (e.g., smtp.gmail.com)\n- `EMAIL_PORT` = SMTP port (e.g., 587)\n- `EMAIL_SECURE` = `false` for port 587\n- `EMAIL_FROM` = Your from email address\n\n### 4. Deploy\n1. Click \"Create Web Service\"\n2. Render will automatically build and deploy your app\n3. Your app will be available at `https://your-app-name.onrender.com`\n\n## Files Created for Render\n- `render-build.sh` - Build script for Render\n- `render.yaml` - Render configuration (optional)\n- Updated server configuration for dynamic port/host\n\n## Notes\n- Free tier may have cold starts (app sleeps after inactivity)\n- MongoDB Atlas connection recommended for database\n- Make sure all environment variables are set correctly","size_bytes":1484},"README.md":{"content":"# Portfolio Application\n\n## Overview\n\nThis is a modern full-stack portfolio application built with React, TypeScript, Express.js, and PostgreSQL. It features a responsive design using shadcn/ui components and Tailwind CSS, with a professional portfolio layout including sections for home, about, skills, projects, and contact. The application includes a contact form with backend data storage capabilities.\n\n## System Architecture\n\nThe application follows a monorepo structure with clear separation between client-side and server-side code:\n\n- **Frontend**: React with TypeScript, using Vite as the build tool\n- **Backend**: Express.js server with TypeScript\n- **Database**: MongoDB with Mongoose ODM\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **State Management**: TanStack Query for server state management\n- **Animations**: Framer Motion for smooth animations\n- **Routing**: Wouter for lightweight client-side routing\n\n## Key Components\n\n### Frontend Architecture\n- **Component-based React architecture** with TypeScript for type safety\n- **shadcn/ui component library** providing consistent, accessible UI components\n- **Tailwind CSS** for utility-first styling with custom CSS variables for theming\n- **Responsive design** optimized for mobile and desktop experiences\n- **Animation system** using Framer Motion for smooth transitions and interactions\n\n### Backend Architecture\n- **Express.js REST API** with TypeScript for type-safe server development\n- **Modular routing system** with clear separation of concerns\n- **Error handling middleware** for consistent error responses\n- **Request logging** for development and debugging purposes\n\n### Database Layer\n- **Mongoose ODM** for MongoDB integration with schema validation\n- **MongoDB** as the primary database with local instance and MongoDB Compass support\n- **Document-based approach** with Mongoose schemas for data validation\n- **Real-time data persistence** for contact submissions and user management\n\n### UI Components\n- **Comprehensive component library** including forms, navigation, cards, and interactive elements\n- **Accessibility-first design** using Radix UI primitives\n- **Consistent theming** with CSS custom properties for light/dark mode support\n- **Form validation** using react-hook-form with Zod schema validation\n\n## Data Flow\n\n1. **Client requests** are made through the TanStack Query client with custom API request functions\n2. **Server endpoints** validate incoming data using Zod schemas\n3. **Database operations** are performed through Drizzle ORM with type-safe queries\n4. **Responses** are returned as JSON with consistent error handling\n5. **Client state** is managed through TanStack Query for caching and synchronization\n\nThe contact form demonstrates the complete data flow:\n- Form submission validates client-side using react-hook-form\n- Data is sent to `/api/contact` endpoint\n- Server validates using Zod schema\n- Data is stored in PostgreSQL via Drizzle ORM\n- Success/error responses update the UI with toast notifications\n\n## External Dependencies\n\n### Production Dependencies\n- **@radix-ui/** - Accessible UI component primitives\n- **@tanstack/react-query** - Server state management\n- **drizzle-orm** - Type-safe ORM for database operations\n- **framer-motion** - Animation library\n- **react-hook-form** - Form state management\n- **wouter** - Lightweight routing\n- **zod** - Schema validation\n\n### Development Dependencies\n- **Vite** - Build tool and development server\n- **TypeScript** - Type checking and compilation\n- **Tailwind CSS** - Utility-first CSS framework\n- **ESBuild** - Fast JavaScript bundler for production\n\n## Deployment Strategy\n\nThe application is configured for deployment with:\n\n1. **Build process**: Vite builds the client-side code, ESBuild bundles the server\n2. **Production server**: Express.js serves both API endpoints and static files\n3. **Database**: PostgreSQL connection via Neon serverless database\n4. **Environment configuration**: Database URL and other secrets via environment variables\n\nBuild commands:\n- `npm run dev` - Development mode with hot reloading\n- `npm run build` - Production build for both client and server\n- `npm start` - Start production server\n- `npm run db:push` - Push database schema changes\n\n## MongoDB Integration\n\nThe application now uses MongoDB as its primary database with Mongoose ODM for data modeling. The system includes:\n\n### Database Setup\n- **Local MongoDB**: Running on port 27017 with portfolio database\n- **MongoDB Compass**: Visual database management tool\n- **Connection String**: `mongodb://localhost:27017/portfolio`\n- **Fallback System**: In-memory storage when MongoDB is unavailable\n\n### Collections\n- **contactsubmissions**: Contact form submissions from portfolio\n- **users**: User authentication data (for future features)\n\n### MongoDB Compass Usage\n1. Download and install MongoDB Compass\n2. Connect using: `mongodb://localhost:27017/portfolio`\n3. Browse collections to view contact submissions\n4. Export data, run queries, and manage database visually\n\n## Changelog\n- June 30, 2025. Initial setup\n- June 30, 2025. Created complete portfolio website with 4 full-stack projects:\n  1. E-Commerce Platform (React/Node.js/PostgreSQL/Stripe)\n  2. Task Management App (React/TypeScript/Socket.io/MongoDB)\n  3. Weather Forecast App (Vue.js/PWA/Chart.js/API Integration)\n  4. Social Media Dashboard (Next.js/Prisma/Redis/OAuth)\n- June 30, 2025. Integrated MongoDB database with Mongoose ODM and MongoDB Compass support\n- January 13, 2025. Migrated to Replit environment for Akshad Apastambh:\n  - Updated personal information (name, email, phone: +91 8459791239)\n  - Configured MongoDB Atlas connection with production database\n  - Integrated Nodemailer for contact form email notifications\n  - Updated portfolio for fresher profile (20+ projects, adjusted skill levels)\n  - Removed mobile development experience as requested\n  - Set up environment variables for secure email and database access\n  - Added dark/light mode toggle in navigation bar\n  - Implemented visual elements (emojis) instead of images for better performance\n  - Fixed project list to show only existing projects from repository\n  - Added comprehensive dark mode support across all components\n  - Fixed MongoDB Atlas connection for proper data storage\n  - Added floating background animations with tech-themed emojis\n  - Created gradient backgrounds for enhanced visual appeal\n  - Generated comprehensive project documentation (22 beginner + 10 intermediate + 8 professional projects)\n  - All environment variables properly configured and working\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n#\u0000 \u0000T\u0000e\u0000s\u0000r\u0000\r\u0000\n\u0000#\u0000 \u0000T\u0000e\u0000s\u0000r\u0000\r\u0000\n\u0000#\u0000 \u0000U\u0000R\u0000L\u0000\r\u0000\n\u0000#\u0000 \u0000U\u0000R\u0000L\u0000\r\u0000\n\u0000","size_bytes":6749},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"render-build.sh":{"content":"#!/bin/bash\n# Render build script\n\necho \"Starting build process...\"\n\n# Install dependencies\nnpm install\n\n# Clean dist directory\nrm -rf dist\nmkdir -p dist\n\n# Set NODE_ENV for build\nexport NODE_ENV=production\n\n# Build the project\necho \"Building client and server...\"\nnpm run build\n\n# Verify build output\nif [ -d \"dist/public\" ] && [ -f \"dist/index.js\" ]; then\n    echo \"Build completed successfully!\"\n    echo \"Client build: dist/public\"\n    echo \"Server build: dist/index.js\"\nelse\n    echo \"Build failed - missing output files\"\n    exit 1\nfi","size_bytes":540},"render.yaml":{"content":"services:\n  - type: web\n    name: portfolio-app\n    env: node\n    plan: free\n    buildCommand: \"./render-build.sh\"\n    startCommand: \"NODE_ENV=production node dist/index.js\"\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: DATABASE_URL\n        sync: false\n      - key: EMAIL_USER\n        sync: false  \n      - key: EMAIL_PASS\n        sync: false\n      - key: EMAIL_HOST\n        sync: false\n      - key: EMAIL_PORT\n        sync: false\n      - key: EMAIL_SECURE\n        sync: false\n      - key: EMAIL_FROM\n        sync: false\n    healthCheckPath: /","size_bytes":571},"replit.md":{"content":"# Portfolio Application\n\n## Overview\n\nThis is a modern full-stack portfolio application built with React, TypeScript, Express.js, and PostgreSQL. It features a responsive design using shadcn/ui components and Tailwind CSS, with a professional portfolio layout including sections for home, about, skills, projects, and contact. The application includes a contact form with backend data storage capabilities.\n\n## System Architecture\n\nThe application follows a monorepo structure with clear separation between client-side and server-side code:\n\n- **Frontend**: React with TypeScript, using Vite as the build tool\n- **Backend**: Express.js server with TypeScript\n- **Database**: MongoDB with Mongoose ODM\n- **Styling**: Tailwind CSS with shadcn/ui component library\n- **State Management**: TanStack Query for server state management\n- **Animations**: Framer Motion for smooth animations\n- **Routing**: Wouter for lightweight client-side routing\n\n## Key Components\n\n### Frontend Architecture\n- **Component-based React architecture** with TypeScript for type safety\n- **shadcn/ui component library** providing consistent, accessible UI components\n- **Tailwind CSS** for utility-first styling with custom CSS variables for theming\n- **Responsive design** optimized for mobile and desktop experiences\n- **Animation system** using Framer Motion for smooth transitions and interactions\n\n### Backend Architecture\n- **Express.js REST API** with TypeScript for type-safe server development\n- **Modular routing system** with clear separation of concerns\n- **Error handling middleware** for consistent error responses\n- **Request logging** for development and debugging purposes\n\n### Database Layer\n- **Mongoose ODM** for MongoDB integration with schema validation\n- **MongoDB** as the primary database with local instance and MongoDB Compass support\n- **Document-based approach** with Mongoose schemas for data validation\n- **Real-time data persistence** for contact submissions and user management\n\n### UI Components\n- **Comprehensive component library** including forms, navigation, cards, and interactive elements\n- **Accessibility-first design** using Radix UI primitives\n- **Consistent theming** with CSS custom properties for light/dark mode support\n- **Form validation** using react-hook-form with Zod schema validation\n\n## Data Flow\n\n1. **Client requests** are made through the TanStack Query client with custom API request functions\n2. **Server endpoints** validate incoming data using Zod schemas\n3. **Database operations** are performed through Drizzle ORM with type-safe queries\n4. **Responses** are returned as JSON with consistent error handling\n5. **Client state** is managed through TanStack Query for caching and synchronization\n\nThe contact form demonstrates the complete data flow:\n- Form submission validates client-side using react-hook-form\n- Data is sent to `/api/contact` endpoint\n- Server validates using Zod schema\n- Data is stored in PostgreSQL via Drizzle ORM\n- Success/error responses update the UI with toast notifications\n\n## External Dependencies\n\n### Production Dependencies\n- **@radix-ui/** - Accessible UI component primitives\n- **@tanstack/react-query** - Server state management\n- **drizzle-orm** - Type-safe ORM for database operations\n- **framer-motion** - Animation library\n- **react-hook-form** - Form state management\n- **wouter** - Lightweight routing\n- **zod** - Schema validation\n\n### Development Dependencies\n- **Vite** - Build tool and development server\n- **TypeScript** - Type checking and compilation\n- **Tailwind CSS** - Utility-first CSS framework\n- **ESBuild** - Fast JavaScript bundler for production\n\n## Deployment Strategy\n\nThe application is configured for deployment with:\n\n1. **Build process**: Vite builds the client-side code, ESBuild bundles the server\n2. **Production server**: Express.js serves both API endpoints and static files\n3. **Database**: PostgreSQL connection via Neon serverless database\n4. **Environment configuration**: Database URL and other secrets via environment variables\n\nBuild commands:\n- `npm run dev` - Development mode with hot reloading\n- `npm run build` - Production build for both client and server\n- `npm start` - Start production server\n- `npm run db:push` - Push database schema changes\n\n## MongoDB Integration\n\nThe application now uses MongoDB as its primary database with Mongoose ODM for data modeling. The system includes:\n\n### Database Setup\n- **Local MongoDB**: Running on port 27017 with portfolio database\n- **MongoDB Compass**: Visual database management tool\n- **Connection String**: `mongodb://localhost:27017/portfolio`\n- **Fallback System**: In-memory storage when MongoDB is unavailable\n\n### Collections\n- **contactsubmissions**: Contact form submissions from portfolio\n- **users**: User authentication data (for future features)\n\n### MongoDB Compass Usage\n1. Download and install MongoDB Compass\n2. Connect using: `mongodb://localhost:27017/portfolio`\n3. Browse collections to view contact submissions\n4. Export data, run queries, and manage database visually\n\n## Changelog\n- June 30, 2025. Initial setup\n- June 30, 2025. Created complete portfolio website with 4 full-stack projects:\n  1. E-Commerce Platform (React/Node.js/PostgreSQL/Stripe)\n  2. Task Management App (React/TypeScript/Socket.io/MongoDB)\n  3. Weather Forecast App (Vue.js/PWA/Chart.js/API Integration)\n  4. Social Media Dashboard (Next.js/Prisma/Redis/OAuth)\n- June 30, 2025. Integrated MongoDB database with Mongoose ODM and MongoDB Compass support\n- January 13, 2025. Migrated to Replit environment for Akshad Apastambh:\n  - Updated personal information (name, email, phone: +91 8459791239)\n  - Configured MongoDB Atlas connection with production database\n  - Integrated Nodemailer for contact form email notifications\n  - Updated portfolio for fresher profile (20+ projects, adjusted skill levels)\n  - Removed mobile development experience as requested\n  - Set up environment variables for secure email and database access\n  - Added dark/light mode toggle in navigation bar\n  - Implemented visual elements (emojis) instead of images for better performance\n  - Fixed project list to show only existing projects from repository\n  - Added comprehensive dark mode support across all components\n  - Fixed MongoDB Atlas connection for proper data storage\n  - Added floating background animations with tech-themed emojis\n  - Created gradient backgrounds for enhanced visual appeal\n  - Generated comprehensive project documentation (22 beginner + 10 intermediate + 8 professional projects)\n  - All environment variables properly configured and working\n- January 14, 2025. Successfully migrated from Replit Agent to Replit environment:\n  - Installed all required Node.js dependencies (production and development)\n  - Verified full-stack application functionality with Express.js backend and React frontend\n  - Confirmed MongoDB Atlas connection and data persistence\n  - Application successfully running on port 5000 with Vite development server\n  - All features working: portfolio sections, contact form, dark mode, responsive design\n  - Migration completed with zero data loss and full functionality preserved\n  - Fixed contact form API fetch error by using relative URLs instead of localhost\n  - Streamlined projects to show only Split Money and URL Shortener projects as requested\n  - Enhanced navbar responsiveness with mobile-optimized logo and navigation\n  - Fixed contact form email configuration and removed budget field from form and emails\n  - Updated footer services to remove mobile development and replace with API Integration\n  - Contact form now working perfectly with proper email notifications\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.","size_bytes":7746},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif'],\n        heading: ['Poppins', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif'],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3001},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/email.ts":{"content":"import { MailService } from '@sendgrid/mail';\n\nif (!process.env.SENDGRID_API_KEY) {\n  console.warn(\"SENDGRID_API_KEY environment variable not set. Email functionality will be disabled.\");\n}\n\nconst mailService = new MailService();\nif (process.env.SENDGRID_API_KEY) {\n  mailService.setApiKey(process.env.SENDGRID_API_KEY);\n}\n\ninterface EmailParams {\n  to: string;\n  from: string;\n  subject: string;\n  text?: string;\n  html?: string;\n}\n\nexport async function sendEmail(params: EmailParams): Promise<boolean> {\n  if (!process.env.SENDGRID_API_KEY) {\n    console.log('Email would be sent:', params);\n    return true; // Return true for development mode\n  }\n\n  try {\n    await mailService.send({\n      to: params.to,\n      from: params.from,\n      subject: params.subject,\n      text: params.text || '',\n      html: params.html || '',\n    });\n    console.log('Email sent successfully to:', params.to);\n    return true;\n  } catch (error) {\n    console.error('SendGrid email error:', error);\n    return false;\n  }\n}\n\nexport function generateContactEmailTemplate(data: {\n  firstName: string;\n  lastName: string;\n  email: string;\n  subject: string;\n  budget?: string;\n  message: string;\n}): { html: string; text: string } {\n  const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n        .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }\n        .field { margin-bottom: 20px; }\n        .label { font-weight: bold; color: #555; }\n        .value { margin-top: 5px; padding: 10px; background: white; border-radius: 5px; border-left: 4px solid #667eea; }\n        .footer { margin-top: 20px; padding: 20px; text-align: center; color: #666; font-size: 12px; }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <div class=\"header\">\n          <h1>New Contact Form Submission</h1>\n          <p>Portfolio Website Contact Form</p>\n        </div>\n        <div class=\"content\">\n          <div class=\"field\">\n            <div class=\"label\">Name:</div>\n            <div class=\"value\">${data.firstName} ${data.lastName}</div>\n          </div>\n          <div class=\"field\">\n            <div class=\"label\">Email:</div>\n            <div class=\"value\">${data.email}</div>\n          </div>\n          <div class=\"field\">\n            <div class=\"label\">Subject:</div>\n            <div class=\"value\">${data.subject}</div>\n          </div>\n\n          <div class=\"field\">\n            <div class=\"label\">Message:</div>\n            <div class=\"value\">${data.message.replace(/\\n/g, '<br>')}</div>\n          </div>\n        </div>\n        <div class=\"footer\">\n          <p>This email was sent from your portfolio contact form.</p>\n          <p>Sent on ${new Date().toLocaleString()}</p>\n        </div>\n      </div>\n    </body>\n    </html>\n  `;\n\n  const text = `\nNew Contact Form Submission\n\nName: ${data.firstName} ${data.lastName}\nEmail: ${data.email}\nSubject: ${data.subject}\n\nMessage:\n${data.message}\n\nSent on ${new Date().toLocaleString()}\n  `;\n\n  return { html, text };\n}","size_bytes":3321},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { connectToMongoDB } from \"./mongodb\";\nimport dotenv from \"dotenv\";\n\n// Load environment variables\ndotenv.config();\n\n// Force production mode for better detection\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = 'development';\n}\n\nconsole.log('NODE_ENV:', process.env.NODE_ENV);\nconsole.log('Process env check:', process.env.NODE_ENV === \"development\" ? \"DEVELOPMENT MODE\" : \"PRODUCTION MODE\");\n\nconst app = express();\n\n// Add CORS middleware\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', 'http://localhost:5173');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  \n  if (req.method === 'OPTIONS') {\n    res.sendStatus(200);\n  } else {\n    next();\n  }\n});\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Connect to MongoDB\nconnectToMongoDB();\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (process.env.NODE_ENV === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // Use PORT environment variable for deployment platforms like Render\n  // Default to 5000 for local development\n  const port = process.env.PORT || 5000;\n  const host = process.env.NODE_ENV === \"production\" ? \"0.0.0.0\" : \"localhost\";\n  \n  server.listen({\n    port: Number(port),\n    host,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2910},"server/mongodb.ts":{"content":"import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.DATABASE_URL || 'mongodb+srv://akshad:M5wxz0XgMsaswQQd@cluster0.qsbcrkt.mongodb.net/portfolio?retryWrites=true&w=majority';\n\nlet isConnected = false;\n\nexport async function connectToMongoDB() {\n  console.log('Attempting MongoDB connection...');\n  console.log('DATABASE_URL:', process.env.DATABASE_URL ? 'Set' : 'Not set');\n  console.log('Connection string:', MONGODB_URI);\n  \n  try {\n    await mongoose.connect(MONGODB_URI, {\n      serverSelectionTimeoutMS: 15000,\n      socketTimeoutMS: 45000,\n      connectTimeoutMS: 10000,\n    });\n    isConnected = true;\n    console.log('‚úÖ Connected to MongoDB Atlas successfully');\n    console.log('üìä Database: portfolio');\n  } catch (error) {\n    console.error('MongoDB connection error:', error);\n    console.log('‚ö†Ô∏è  MongoDB Atlas not available - using in-memory storage');\n    console.log('üí° Check MongoDB Atlas connection:');\n    console.log('   1. Verify connection string is correct');\n    console.log('   2. Check network connectivity');\n    console.log('   3. Verify database credentials');\n    isConnected = false;\n  }\n}\n\nexport function isMongoConnected() {\n  return isConnected;\n}\n\nexport default mongoose;","size_bytes":1234},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { z } from \"zod\";\nimport { sendEmail, generateContactEmailTemplate } from \"./email\";\n\n// Define validation schemas for MongoDB\nconst insertContactSubmissionSchema = z.object({\n  firstName: z.string().min(1),\n  lastName: z.string().min(1),\n  email: z.string().email(),\n  subject: z.string().min(1),\n  budget: z.string().optional(),\n  message: z.string().min(1),\n});\n\n// Email transporter setup (commented out for now)\n// const transporter = nodemailer.createTransport({\n//   service: 'gmail',\n//   auth: {\n//     user: process.env.EMAIL_USER,\n//     pass: process.env.EMAIL_PASSWORD,\n//   },\n// });\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      console.log('Received contact form data:', req.body);\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      console.log('Validated data:', validatedData);\n      \n      // Save to database\n      const submission = await storage.createContactSubmission(validatedData);\n      console.log('Created submission:', submission);\n      \n      // Send email notification using SendGrid\n      try {\n        const { html, text } = generateContactEmailTemplate(validatedData);\n        \n        const emailSuccess = await sendEmail({\n          to: 'akshadapastambh37@gmail.com', // Your email\n          from: 'akshadapastambh37@gmail.com', // From your verified email\n          subject: `Portfolio Contact: ${validatedData.subject}`,\n          text,\n          html,\n        });\n        \n        if (emailSuccess) {\n          console.log('Email notification sent successfully');\n        } else {\n          console.log('Email notification failed to send');\n        }\n      } catch (emailError) {\n        console.error('Email sending failed:', emailError);\n        // Continue even if email fails\n      }\n      \n      res.json({ success: true, id: submission._id });\n    } catch (error) {\n      console.error('Contact form error:', error);\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\", \n          errors: error.errors \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\",\n          error: error instanceof Error ? error.message : 'Unknown error'\n        });\n      }\n    }\n  });\n\n  // Get all contact submissions (for admin purposes)\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const submissions = await storage.getContactSubmissions();\n      res.json(submissions);\n    } catch (error) {\n      res.status(500).json({ \n        success: false, \n        message: \"Internal server error\" \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2976},"server/storage.ts":{"content":"import { User, ContactSubmission, type IUser, type IContactSubmission, type InsertUser, type InsertContactSubmission } from \"@shared/models\";\nimport { isMongoConnected } from \"./mongodb\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<IUser | null>;\n  getUserByUsername(username: string): Promise<IUser | null>;\n  createUser(user: InsertUser): Promise<IUser>;\n  createContactSubmission(submission: InsertContactSubmission): Promise<IContactSubmission>;\n  getContactSubmissions(): Promise<IContactSubmission[]>;\n}\n\n// In-memory storage as fallback\nclass MemoryStorage {\n  private users: Map<string, any> = new Map();\n  private contacts: Array<any> = [];\n  \n  async createContactSubmission(data: InsertContactSubmission) {\n    const submission = {\n      _id: Date.now().toString(),\n      ...data,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.contacts.push(submission);\n    return submission;\n  }\n  \n  async getContactSubmissions() {\n    return this.contacts.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  }\n  \n  async createUser(data: InsertUser) {\n    const user = {\n      _id: Date.now().toString(),\n      ...data,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.users.set(user._id, user);\n    return user;\n  }\n  \n  async getUser(id: string) {\n    return this.users.get(id) || null;\n  }\n  \n  async getUserByUsername(username: string) {\n    for (const user of Array.from(this.users.values())) {\n      if (user.username === username) return user;\n    }\n    return null;\n  }\n}\n\nconst memoryStorage = new MemoryStorage();\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<IUser | null> {\n    if (isMongoConnected()) {\n      return await User.findById(id);\n    }\n    return await memoryStorage.getUser(id);\n  }\n\n  async getUserByUsername(username: string): Promise<IUser | null> {\n    if (isMongoConnected()) {\n      return await User.findOne({ username });\n    }\n    return await memoryStorage.getUserByUsername(username);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<IUser> {\n    if (isMongoConnected()) {\n      const user = new User(insertUser);\n      return await user.save();\n    }\n    return await memoryStorage.createUser(insertUser) as unknown as IUser;\n  }\n\n  async createContactSubmission(insertSubmission: InsertContactSubmission): Promise<IContactSubmission> {\n    if (isMongoConnected()) {\n      const submission = new ContactSubmission(insertSubmission);\n      return await submission.save();\n    }\n    return await memoryStorage.createContactSubmission(insertSubmission) as unknown as IContactSubmission;\n  }\n\n  async getContactSubmissions(): Promise<IContactSubmission[]> {\n    if (isMongoConnected()) {\n      return await ContactSubmission.find().sort({ createdAt: -1 });\n    }\n    return await memoryStorage.getContactSubmissions();\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":2934},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/models.ts":{"content":"import mongoose, { Schema, Document } from 'mongoose';\n\n// User interface and schema\nexport interface IUser extends Document {\n  username: string;\n  password: string;\n}\n\nconst userSchema = new Schema<IUser>({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true }\n}, {\n  timestamps: true\n});\n\nexport const User = mongoose.model<IUser>('User', userSchema);\n\n// Contact Submission interface and schema\nexport interface IContactSubmission extends Document {\n  firstName: string;\n  lastName: string;\n  email: string;\n  subject: string;\n  budget?: string;\n  message: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst contactSubmissionSchema = new Schema<IContactSubmission>({\n  firstName: { type: String, required: true },\n  lastName: { type: String, required: true },\n  email: { type: String, required: true },\n  subject: { type: String, required: true },\n  budget: { type: String },\n  message: { type: String, required: true }\n}, {\n  timestamps: true\n});\n\nexport const ContactSubmission = mongoose.model<IContactSubmission>('ContactSubmission', contactSubmissionSchema);\n\n// Type definitions for API\nexport type InsertUser = {\n  username: string;\n  password: string;\n};\n\nexport type InsertContactSubmission = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  subject: string;\n  budget?: string;\n  message: string;\n};","size_bytes":1380},"shared/schema.ts":{"content":"import { pgTable, text, serial, timestamp } from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: serial(\"id\").primaryKey(),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  subject: text(\"subject\").notNull(),\n  budget: text(\"budget\"),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  // Add user relations if needed in the future\n}));\n\nexport const contactSubmissionsRelations = relations(contactSubmissions, ({ one }) => ({\n  // Add contact submission relations if needed in the future\n}));\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":1525},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":699},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Poppins:wght@300;400;500;600;700;800&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(210, 40%, 98%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222.2, 84%, 4.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222.2, 84%, 4.9%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --primary: hsl(221.2, 83.2%, 53.3%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --accent: hsl(210, 40%, 96%);\n  --accent-foreground: hsl(222.2, 84%, 4.9%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(221.2, 83.2%, 53.3%);\n  --radius: 0.5rem;\n  \n  /* Portfolio specific colors */\n  --portfolio-primary: hsl(221.2, 83.2%, 53.3%);\n  --portfolio-secondary: hsl(215, 25%, 27%);\n  --portfolio-accent: hsl(45, 93%, 47%);\n  --portfolio-slate-50: hsl(210, 40%, 98%);\n  --portfolio-slate-100: hsl(210, 40%, 96%);\n  --portfolio-slate-600: hsl(215.4, 16.3%, 46.9%);\n  --portfolio-slate-700: hsl(215.3, 19.3%, 34.5%);\n  --portfolio-slate-900: hsl(222.2, 84%, 4.9%);\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --primary: hsl(221.2, 83.2%, 53.3%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(217.2, 32.6%, 17.5%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --accent: hsl(217.2, 32.6%, 17.5%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --ring: hsl(221.2, 83.2%, 53.3%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background: \n      radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.15) 0%, transparent 50%),\n      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.15) 0%, transparent 50%),\n      radial-gradient(circle at 40% 80%, rgba(120, 200, 255, 0.15) 0%, transparent 50%),\n      linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(147, 51, 234, 0.05) 100%);\n    background-attachment: fixed;\n    background-size: 100% 100%;\n    position: relative;\n  }\n\n  body::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: \n      radial-gradient(circle at 25% 25%, rgba(59, 130, 246, 0.1) 0%, transparent 50%),\n      radial-gradient(circle at 75% 75%, rgba(147, 51, 234, 0.1) 0%, transparent 50%);\n    pointer-events: none;\n    z-index: -1;\n    animation: backgroundShift 20s ease-in-out infinite;\n  }\n\n  .dark body {\n    background: \n      radial-gradient(circle at 20% 50%, rgba(59, 130, 246, 0.08) 0%, transparent 50%),\n      radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.08) 0%, transparent 50%),\n      radial-gradient(circle at 40% 80%, rgba(34, 197, 94, 0.08) 0%, transparent 50%),\n      linear-gradient(135deg, rgba(15, 23, 42, 0.95) 0%, rgba(30, 41, 59, 0.95) 100%);\n  }\n\n  .dark body::before {\n    background: \n      radial-gradient(circle at 25% 25%, rgba(59, 130, 246, 0.05) 0%, transparent 50%),\n      radial-gradient(circle at 75% 75%, rgba(147, 51, 234, 0.05) 0%, transparent 50%);\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer components {\n  .gradient-text {\n    background: linear-gradient(135deg, var(--portfolio-primary), var(--portfolio-accent), #8b5cf6, #06b6d4);\n    background-size: 300% 300%;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: gradientShift 3s ease-in-out infinite;\n  }\n\n  .gradient-border {\n    position: relative;\n    background: linear-gradient(135deg, var(--portfolio-primary), var(--portfolio-accent), #8b5cf6);\n    padding: 2px;\n    border-radius: 0.75rem;\n  }\n\n  .gradient-border::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: linear-gradient(135deg, var(--portfolio-primary), var(--portfolio-accent), #8b5cf6);\n    border-radius: 0.75rem;\n    padding: 2px;\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    mask-composite: exclude;\n  }\n\n  .glass-effect {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n\n  .dark .glass-effect {\n    background: rgba(15, 23, 42, 0.8);\n    border: 1px solid rgba(59, 130, 246, 0.2);\n  }\n\n  .skill-progress {\n    transition: width 1s ease-in-out;\n  }\n\n  .floating-shapes {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: -1;\n  }\n\n  .floating-shape {\n    position: absolute;\n    opacity: 0.15;\n    animation: float 20s infinite linear;\n    transition: all 0.3s ease;\n    filter: drop-shadow(0 0 10px rgba(59, 130, 246, 0.3));\n  }\n\n  .floating-shape:hover {\n    opacity: 0.4;\n    transform: scale(1.3);\n    filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.6));\n  }\n\n  .floating-shape:nth-child(1) { left: 10%; animation-delay: 0s; font-size: 2rem; }\n  .floating-shape:nth-child(2) { left: 20%; animation-delay: 2s; font-size: 1.5rem; }\n  .floating-shape:nth-child(3) { left: 30%; animation-delay: 4s; font-size: 2.5rem; }\n  .floating-shape:nth-child(4) { left: 40%; animation-delay: 6s; font-size: 1.8rem; }\n  .floating-shape:nth-child(5) { left: 50%; animation-delay: 8s; font-size: 2.2rem; }\n  .floating-shape:nth-child(6) { left: 60%; animation-delay: 10s; font-size: 1.6rem; }\n  .floating-shape:nth-child(7) { left: 70%; animation-delay: 12s; font-size: 2rem; }\n  .floating-shape:nth-child(8) { left: 80%; animation-delay: 14s; font-size: 1.4rem; }\n  .floating-shape:nth-child(9) { left: 90%; animation-delay: 16s; font-size: 2.3rem; }\n\n  /* Enhanced glowing effect to floating shapes */\n  .floating-shape::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 120%;\n    height: 120%;\n    background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    animation: glow 3s ease-in-out infinite alternate;\n  }\n\n  .floating-shape::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 80%;\n    height: 80%;\n    background: radial-gradient(circle, rgba(147, 51, 234, 0.2) 0%, transparent 70%);\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    animation: glow 2s ease-in-out infinite alternate-reverse;\n  }\n\n  .dark .floating-shape { \n    opacity: 0.08; \n    filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.4));\n  }\n\n  .dark .floating-shape:hover {\n    opacity: 0.2;\n    filter: drop-shadow(0 0 15px rgba(59, 130, 246, 0.8));\n  }\n\n  /* Enhanced card effects */\n  .card-hover {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .card-hover:hover {\n    transform: translateY(-8px) scale(1.02);\n    box-shadow: \n      0 20px 25px -5px rgba(0, 0, 0, 0.1),\n      0 10px 10px -5px rgba(0, 0, 0, 0.04),\n      0 0 0 1px rgba(59, 130, 246, 0.1);\n  }\n\n  .dark .card-hover:hover {\n    box-shadow: \n      0 20px 25px -5px rgba(0, 0, 0, 0.3),\n      0 10px 10px -5px rgba(0, 0, 0, 0.2),\n      0 0 0 1px rgba(59, 130, 246, 0.3);\n  }\n\n  /* Particle effect */\n  .particles {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: -1;\n  }\n\n  .particle {\n    position: absolute;\n    width: 2px;\n    height: 2px;\n    background: linear-gradient(45deg, var(--portfolio-primary), var(--portfolio-accent));\n    border-radius: 50%;\n    animation: particleFloat 15s infinite linear;\n  }\n\n  .particle:nth-child(1) { left: 5%; animation-delay: 0s; }\n  .particle:nth-child(2) { left: 15%; animation-delay: 2s; }\n  .particle:nth-child(3) { left: 25%; animation-delay: 4s; }\n  .particle:nth-child(4) { left: 35%; animation-delay: 6s; }\n  .particle:nth-child(5) { left: 45%; animation-delay: 8s; }\n  .particle:nth-child(6) { left: 55%; animation-delay: 10s; }\n  .particle:nth-child(7) { left: 65%; animation-delay: 12s; }\n  .particle:nth-child(8) { left: 75%; animation-delay: 14s; }\n  .particle:nth-child(9) { left: 85%; animation-delay: 16s; }\n  .particle:nth-child(10) { left: 95%; animation-delay: 18s; }\n}\n\n@layer utilities {\n  .animate-fade-up {\n    animation: fadeUp 0.6s ease-out;\n  }\n  \n  .animate-slide-in {\n    animation: slideIn 0.8s ease-out;\n  }\n\n  .animate-bounce-slow {\n    animation: bounceSlow 2s ease-in-out infinite;\n  }\n\n  .animate-pulse-slow {\n    animation: pulseSlow 3s ease-in-out infinite;\n  }\n}\n\n@keyframes fadeUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes float {\n  0% { transform: translateY(100vh) rotate(0deg); }\n  100% { transform: translateY(-100vh) rotate(360deg); }\n}\n\n@keyframes glow {\n  from { \n    opacity: 0.3; \n    transform: translate(-50%, -50%) scale(1); \n  }\n  to { \n    opacity: 0.8; \n    transform: translate(-50%, -50%) scale(1.3); \n  }\n}\n\n@keyframes gradientShift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n@keyframes backgroundShift {\n  0% { transform: translateX(0) translateY(0); }\n  25% { transform: translateX(-10px) translateY(-10px); }\n  50% { transform: translateX(10px) translateY(-5px); }\n  75% { transform: translateX(-5px) translateY(10px); }\n  100% { transform: translateX(0) translateY(0); }\n}\n\n@keyframes particleFloat {\n  0% { \n    transform: translateY(100vh) rotate(0deg); \n    opacity: 0;\n  }\n  10% { \n    opacity: 1;\n  }\n  90% { \n    opacity: 1;\n  }\n  100% { \n    transform: translateY(-100vh) rotate(360deg); \n    opacity: 0;\n  }\n}\n\n@keyframes bounceSlow {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes pulseSlow {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.7; }\n}\n","size_bytes":10668},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"projects/ecommerce-platform/README.md":{"content":"# E-Commerce Platform\n\nA full-stack e-commerce solution built with React, Node.js, and PostgreSQL. Features include user authentication, product management, shopping cart, and payment integration.\n\n## Technologies Used\n- React.js\n- Node.js\n- PostgreSQL\n- Stripe\n- TypeScript\n- Tailwind CSS\n\n## Features\n- Product catalog with search and filtering\n- User authentication and profiles\n- Shopping cart functionality\n- Secure payment processing with Stripe\n- Order management\n- Admin dashboard\n\n## Completed\nMarch 2024","size_bytes":513},"projects/social-media-dashboard/README.md":{"content":"# Social Media Dashboard\n\nA comprehensive dashboard for managing multiple social media accounts with analytics, post scheduling, and engagement tracking. Built with modern frameworks and real-time data.\n\n## Technologies Used\n- Next.js\n- Prisma (Database ORM)\n- Redis (Caching)\n- OAuth (Social Authentication)\n- TypeScript\n- TailwindCSS\n\n## Features\n- Multi-platform social media management\n- Real-time analytics and metrics\n- Post scheduling and automation\n- Engagement tracking and monitoring\n- Team collaboration tools\n- Custom reporting and insights\n- Social media calendar\n- Content library management\n- Hashtag analytics\n- Competitor analysis\n\n## Completed\nDecember 2023","size_bytes":675},"projects/task-management-app/README.md":{"content":"# Task Management App\n\nA collaborative task management application with real-time updates, drag-and-drop functionality, and team collaboration features. Built with modern React and WebSocket integration.\n\n## Technologies Used\n- React.js\n- TypeScript\n- Socket.io (WebSocket)\n- MongoDB\n- Node.js\n- Express.js\n\n## Features\n- Real-time collaborative task management\n- Drag-and-drop task organization\n- Team collaboration and user assignments\n- Task prioritization and status tracking\n- Project organization and boards\n- Real-time notifications\n- User authentication and team management\n\n## Completed\nFebruary 2024","size_bytes":609},"projects/weather-forecast-app/README.md":{"content":"# Weather Forecast App\n\nA beautiful weather application with location-based forecasts, interactive maps, and detailed weather analytics. Features responsive design and offline capabilities.\n\n## Technologies Used\n- Vue.js\n- PWA (Progressive Web App)\n- Chart.js\n- API Integration (OpenWeatherMap)\n- Service Workers\n- IndexedDB\n\n## Features\n- Current weather conditions\n- 7-day weather forecast\n- Interactive weather maps\n- Location-based forecasts\n- Weather alerts and notifications\n- Offline functionality with cached data\n- Responsive design for all devices\n- Weather analytics and charts\n- Search for any city worldwide\n\n## Completed\nJanuary 2024","size_bytes":647},"client/src/components/about-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { fadeInUp, staggerContainer, staggerItem, slideInLeft, slideInRight, scaleIn, floatingAnimation, cardHoverEffect } from \"@/lib/animations\";\nimport { Code, Sparkles, Zap, Target, Award, BookOpen, Coffee, Heart } from \"lucide-react\";\n\nconst AboutSection = () => {\n  const achievements = [\n    { icon: BookOpen, text: \"Final Year Student\", color: \"from-blue-500 to-blue-600\" },\n    { icon: Award, text: \"Freelancing Experience\", color: \"from-green-500 to-green-600\" },\n    { icon: Code, text: \"Full-Stack Developer\", color: \"from-purple-500 to-purple-600\" },\n    { icon: Target, text: \"Problem Solver\", color: \"from-orange-500 to-orange-600\" }\n  ];\n\n  const stats = [\n    { number: \"20+\", label: \"Projects Completed\", icon: \"üöÄ\" },\n    { number: \"2+\", label: \"Years Learning\", icon: \"üìö\" },\n    { number: \"1\", label: \"Freelance Client\", icon: \"ü§ù\" },\n    { number: \"100%\", label: \"Passion\", icon: \"‚ù§Ô∏è\" }\n  ];\n\n  return (\n    <section id=\"about\" className=\"py-20 bg-gradient-to-br from-white via-blue-50/30 to-purple-50/30 dark:from-slate-900 dark:via-slate-800/50 dark:to-slate-700/30 relative overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        <motion.div\n          className=\"absolute top-10 left-10 w-20 h-20 bg-gradient-to-r from-blue-400/20 to-purple-400/20 rounded-full blur-xl\"\n          {...floatingAnimation}\n        />\n        <motion.div\n          className=\"absolute bottom-20 right-20 w-32 h-32 bg-gradient-to-r from-purple-400/20 to-pink-400/20 rounded-full blur-xl\"\n          animate={{\n            y: [0, -20, 0],\n            x: [0, 10, 0],\n          }}\n          transition={{\n            duration: 4,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1\n          }}\n        />\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, margin: \"-100px\" }}\n          variants={fadeInUp}\n          className=\"text-center mb-16\"\n        >\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-full mb-4\"\n            variants={scaleIn}\n          >\n            <Sparkles className=\"w-4 h-4 text-blue-500\" />\n            <span className=\"text-sm font-medium text-slate-600 dark:text-slate-400\">Get to know me</span>\n          </motion.div>\n          <h2 className=\"text-4xl sm:text-5xl font-bold text-slate-900 dark:text-white mb-4\">\n            About <span className=\"bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">Me</span>\n          </h2>\n          <p className=\"text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto\">\n            Passionate student developer with a love for clean code and innovative solutions\n          </p>\n        </motion.div>\n\n        <div className=\"grid lg:grid-cols-2 gap-16 items-center mb-16\">\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true, margin: \"-50px\" }}\n            variants={staggerContainer}\n            className=\"space-y-8\"\n          >\n            <motion.p\n              variants={staggerItem}\n              className=\"text-lg text-slate-700 dark:text-slate-300 leading-relaxed\"\n            >\n              I'm a final year Computer Science student and full-stack developer with freelancing experience, passionate about building web applications that solve real-world problems. My journey includes both academic projects and professional freelancing work, giving me practical experience in client communication and project delivery.\n            </motion.p>\n\n            <motion.p\n              variants={staggerItem}\n              className=\"text-lg text-slate-700 dark:text-slate-300 leading-relaxed\"\n            >\n              I specialize in React, Node.js, and MongoDB, with experience in payment gateway integration, real-time features, and database design. My recent freelancing project for Hema Motor workshop demonstrates my ability to deliver complete solutions from concept to deployment. I believe in writing clean, maintainable code and creating intuitive user experiences.\n            </motion.p>\n\n            <motion.div\n              variants={staggerItem}\n              className=\"grid grid-cols-2 gap-4 pt-4\"\n            >\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={index}\n                  className={`relative overflow-hidden bg-gradient-to-r ${achievement.color} p-4 rounded-xl text-white shadow-lg group cursor-pointer`}\n                  whileHover={{ scale: 1.05, y: -5 }}\n                  whileTap={{ scale: 0.95 }}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                >\n                  <motion.div\n                    className=\"absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                    animate={{ x: [-100, 100] }}\n                    transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n                  />\n                  <div className=\"relative z-10 flex items-center gap-3\">\n                    <achievement.icon className=\"w-5 h-5\" />\n                    <span className=\"text-sm font-medium\">{achievement.text}</span>\n                  </div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </motion.div>\n\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true, margin: \"-50px\" }}\n            variants={slideInRight}\n            className=\"relative\"\n          >\n            <motion.div\n              className=\"relative bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 rounded-2xl shadow-2xl p-1\"\n              whileHover={{ rotate: 1, scale: 1.02 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"bg-white dark:bg-slate-800 rounded-xl h-80 flex items-center justify-center relative overflow-hidden\">\n                {/* Animated background pattern */}\n                <div className=\"absolute inset-0 opacity-10\">\n                  {Array.from({ length: 20 }).map((_, i) => (\n                    <motion.div\n                      key={i}\n                      className=\"absolute w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full\"\n                      style={{\n                        left: `${Math.random() * 100}%`,\n                        top: `${Math.random() * 100}%`,\n                      }}\n                      animate={{\n                        scale: [1, 1.5, 1],\n                        opacity: [0.3, 0.8, 0.3],\n                      }}\n                      transition={{\n                        duration: 2 + Math.random() * 2,\n                        repeat: Infinity,\n                        delay: Math.random() * 2,\n                      }}\n                    />\n                  ))}\n                </div>\n\n                <div className=\"text-center relative z-10\">\n                  <motion.div\n                    className=\"text-8xl mb-6\"\n                    animate={{\n                      rotate: [0, 5, -5, 0],\n                      scale: [1, 1.05, 1],\n                    }}\n                    transition={{\n                      duration: 4,\n                      repeat: Infinity,\n                      ease: \"easeInOut\"\n                    }}\n                  >\n                    üë®‚Äçüíª\n                  </motion.div>\n                  <motion.h3\n                    className=\"text-2xl font-bold text-slate-800 dark:text-white mb-3\"\n                    animate={{ opacity: [0.8, 1, 0.8] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    Full-Stack Developer\n                  </motion.h3>\n                  <div className=\"flex items-center justify-center gap-4 text-slate-600 dark:text-slate-400\">\n                    <div className=\"flex items-center gap-1\">\n                      <Code className=\"w-4 h-4\" />\n                      <span className=\"text-sm\">React</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Zap className=\"w-4 h-4\" />\n                      <span className=\"text-sm\">Node.js</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Heart className=\"w-4 h-4 text-red-500\" />\n                      <span className=\"text-sm\">MongoDB</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Floating elements */}\n                <motion.div\n                  className=\"absolute top-4 right-4 text-yellow-400\"\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 8, repeat: Infinity, ease: \"linear\" }}\n                >\n                  <Coffee className=\"w-6 h-6\" />\n                </motion.div>\n              </div>\n            </motion.div>\n          </motion.div>\n        </div>\n\n        {/* Stats Section */}\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, margin: \"-50px\" }}\n          variants={staggerContainer}\n          className=\"grid grid-cols-2 md:grid-cols-4 gap-6\"\n        >\n          {stats.map((stat, index) => (\n            <motion.div\n              key={index}\n              variants={staggerItem}\n              className=\"relative bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-xl p-6 text-center shadow-lg border border-slate-200/50 dark:border-slate-700/50 overflow-hidden group\"\n              {...cardHoverEffect}\n            >\n              <motion.div\n                className=\"absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n              />\n              <div className=\"relative z-10\">\n                <div className=\"text-3xl mb-2\">{stat.icon}</div>\n                <motion.div\n                  className=\"text-3xl font-bold text-slate-900 dark:text-white mb-1\"\n                  initial={{ scale: 1 }}\n                  whileInView={{ scale: [1, 1.1, 1] }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  {stat.number}\n                </motion.div>\n                <div className=\"text-sm text-slate-600 dark:text-slate-400 font-medium\">\n                  {stat.label}\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n\n};\n\nexport default AboutSection;\n","size_bytes":10983},"client/src/components/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Mail, Phone, MapPin, Clock, Linkedin, Github, Twitter, Send } from \"lucide-react\";\nimport { fadeInUp, staggerContainer, staggerItem } from \"@/lib/animations\";\nimport type { InsertContactSubmission } from \"@shared/schema\";\n\nconst ContactSection = () => {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const submitContactMutation = useMutation({\n    mutationFn: async (data: InsertContactSubmission) => {\n      const response = await apiRequest(\"POST\", \"/api/contact\", data);\n      return await response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"Thank you for your message. I'll get back to you soon.\",\n      });\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/contact\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error sending message\",\n        description: error.message || \"Something went wrong. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleInputChange = (name: string, value: string) => {\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.firstName || !formData.lastName || !formData.email || !formData.subject || !formData.message) {\n      toast({\n        title: \"Please fill in all required fields\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      submitContactMutation.mutate(formData as InsertContactSubmission);\n    } catch (error) {\n      console.error(\"Contact form submission error:\", error);\n      toast({\n        title: \"Error sending message\",\n        description: \"Something went wrong. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const contactInfo = [\n    {\n      icon: Mail,\n      title: \"Email\",\n      value: \"akshadapastambh37@gmail.com\",\n    },\n    {\n      icon: Phone,\n      title: \"Phone\",\n      value: \"+91 8459791239\",\n    },\n    {\n      icon: MapPin,\n      title: \"Location\",\n      value: \"India\",\n    },\n    {\n      icon: Clock,\n      title: \"Response Time\",\n      value: \"Usually within 24 hours\",\n    },\n  ];\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-slate-50 dark:bg-slate-800\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true }}\n          variants={fadeInUp}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-slate-900 dark:text-white mb-4\">Get In Touch</h2>\n          <p className=\"text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto\">\n            Ready to start your next project? Let's discuss how we can work together to bring your ideas to life.\n          </p>\n        </motion.div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n            variants={staggerContainer}\n            className=\"space-y-8\"\n          >\n            <motion.div variants={staggerItem}>\n              <h3 className=\"text-2xl font-semibold text-slate-900 dark:text-white mb-6\">Let's work together</h3>\n              <p className=\"text-lg text-slate-700 dark:text-slate-300 mb-8\">\n                I'm always interested in new opportunities and exciting projects. Whether you're a startup\n                looking to build your first product or an established company wanting to modernize your tech stack,\n                I'd love to hear from you.\n              </p>\n            </motion.div>\n\n            <motion.div variants={staggerItem} className=\"space-y-6\">\n              {contactInfo.map((info, index) => (\n                <motion.div \n                  key={index} \n                  className=\"flex items-center space-x-4 group cursor-pointer\"\n                  whileHover={{ x: 10 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <motion.div \n                    className=\"bg-[var(--portfolio-primary)] text-white p-3 rounded-lg\"\n                    whileHover={{ \n                      scale: 1.1, \n                      rotate: 360,\n                      boxShadow: \"0 10px 25px rgba(59, 130, 246, 0.3)\"\n                    }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <info.icon size={20} />\n                  </motion.div>\n                  <motion.div\n                    whileHover={{ x: 5 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <h4 className=\"font-medium text-slate-900 dark:text-white\">{info.title}</h4>\n                    <p className=\"text-slate-600 dark:text-slate-400\">{info.value}</p>\n                  </motion.div>\n                </motion.div>\n              ))}\n            </motion.div>\n\n            <motion.div variants={staggerItem} className=\"flex space-x-4\">\n              <a\n                href= \"https://www.linkedin.com/in/akshad-apastambh-9726332a1/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-slate-700 text-white p-3 rounded-lg hover:bg-slate-800 transition-colors duration-200\"\n              >\n                <Linkedin size={20} />\n              </a>\n              <a\n                href=\"https://github.com/AkshadAp17\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-slate-700 text-white p-3 rounded-lg hover:bg-slate-800 transition-colors duration-200\"\n              >\n                <Github size={20} />\n              </a>\n              <a\n                href=\"https://twitter.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-slate-700 text-white p-3 rounded-lg hover:bg-slate-800 transition-colors duration-200\"\n              >\n                <Twitter size={20} />\n              </a>\n            </motion.div>\n          </motion.div>\n\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n            className=\"bg-white dark:bg-slate-900 p-8 rounded-xl shadow-lg\"\n          >\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <Label htmlFor=\"firstName\">First Name *</Label>\n                  <Input\n                    id=\"firstName\"\n                    value={formData.firstName}\n                    onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                    placeholder=\"John\"\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"lastName\">Last Name *</Label>\n                  <Input\n                    id=\"lastName\"\n                    value={formData.lastName}\n                    onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                    placeholder=\"Doe\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"email\">Email Address *</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                  placeholder=\"john.doe@example.com\"\n                  required\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"subject\">Subject *</Label>\n                <Input\n                  id=\"subject\"\n                  value={formData.subject}\n                  onChange={(e) => handleInputChange(\"subject\", e.target.value)}\n                  placeholder=\"Project Inquiry\"\n                  required\n                />\n              </div>\n\n\n\n              <div>\n                <Label htmlFor=\"message\">Message *</Label>\n                <Textarea\n                  id=\"message\"\n                  value={formData.message}\n                  onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                  placeholder=\"Tell me about your project...\"\n                  rows={5}\n                  required\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-[var(--portfolio-primary)] hover:bg-blue-700 text-white\"\n                disabled={submitContactMutation.isPending}\n              >\n                {submitContactMutation.isPending ? \"Sending...\" : \"Send Message\"}\n                <Send className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </form>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ContactSection;\n","size_bytes":9804},"client/src/components/experience-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Briefcase, Calendar, MapPin, ExternalLink, Star, Award, CheckCircle, ArrowUpRight, Sparkles } from \"lucide-react\";\nimport { fadeInUp, staggerContainer, staggerItem, slideInLeft, cardHoverEffect, scaleIn, floatingAnimation } from \"@/lib/animations\";\n\nconst ExperienceSection = () => {\n  const experiences = [\n    {\n      title: \"Full-Stack Developer (Freelancing)\",\n      company: \"Hema Motor Workshop\",\n      duration: \"Dec 2023 - Feb 2024\",\n      location: \"Remote\",\n      description: \"Developed a comprehensive automotive service booking platform with real-time tracking, payment processing, and customer management system.\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Payment Gateway\", \"Real-time Updates\"],\n      achievements: [\n        \"Built complete booking system with appointment scheduling\",\n        \"Integrated payment gateway for secure transactions\",\n        \"Implemented real-time service status tracking\",\n        \"Created admin dashboard for workshop management\",\n        \"Achieved 5/5 client satisfaction rating\"\n      ],\n      link: \"https://vista-etyd.onrender.com/\"\n    }\n  ];\n\n  return (\n    <section id=\"experience\" className=\"py-20 bg-gradient-to-br from-slate-50 via-white to-blue-50/30 dark:from-slate-800 dark:via-slate-900 dark:to-slate-800 relative overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        <motion.div\n          className=\"absolute top-20 right-10 w-24 h-24 bg-gradient-to-r from-green-400/20 to-blue-400/20 rounded-full blur-xl\"\n          {...floatingAnimation}\n        />\n        <motion.div\n          className=\"absolute bottom-32 left-16 w-32 h-32 bg-gradient-to-r from-purple-400/20 to-pink-400/20 rounded-full blur-xl\"\n          animate={{\n            y: [0, -15, 0],\n            x: [0, 15, 0],\n          }}\n          transition={{\n            duration: 5,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 2\n          }}\n        />\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, margin: \"-100px\" }}\n          variants={fadeInUp}\n          className=\"text-center mb-16\"\n        >\n          <motion.div\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-green-500/10 to-blue-500/10 rounded-full mb-4\"\n            variants={scaleIn}\n          >\n            <Briefcase className=\"w-4 h-4 text-green-500\" />\n            <span className=\"text-sm font-medium text-slate-600 dark:text-slate-400\">Professional Journey</span>\n          </motion.div>\n          <h2 className=\"text-4xl sm:text-5xl font-bold text-slate-900 dark:text-white mb-4\">\n            Professional <span className=\"bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">Experience</span>\n          </h2>\n          <p className=\"text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto\">\n            My journey in web development includes both freelancing work and personal projects\n          </p>\n        </motion.div>\n\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, margin: \"-50px\" }}\n          variants={staggerContainer}\n          className=\"space-y-8\"\n        >\n          {experiences.map((exp, index) => (\n            <motion.div\n              key={index}\n              variants={staggerItem}\n              className=\"relative bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-slate-200/50 dark:border-slate-700/50 overflow-hidden group\"\n              {...cardHoverEffect}\n            >\n              {/* Gradient overlay on hover */}\n              <motion.div\n                className=\"absolute inset-0 bg-gradient-to-br from-green-500/5 to-blue-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n              />\n              \n              <div className=\"relative z-10\">\n                <div className=\"flex flex-col lg:flex-row lg:items-start lg:justify-between mb-6\">\n                  {/* Rating positioned in header for better spacing */}\n                  <motion.div\n                    className=\"lg:hidden flex items-center gap-1 bg-green-100 dark:bg-green-900/30 px-3 py-1 rounded-full self-start mb-4\"\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: 0.5 + index * 0.2 }}\n                  >\n                    <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\n                    <span className=\"text-xs font-medium text-green-700 dark:text-green-300\">5.0</span>\n                  </motion.div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-4 mb-4\">\n                      <motion.div\n                        className=\"bg-gradient-to-r from-green-500 to-blue-500 text-white p-3 rounded-xl shadow-lg\"\n                        whileHover={{ rotate: 5, scale: 1.1 }}\n                        transition={{ duration: 0.2 }}\n                      >\n                        <Briefcase size={24} />\n                      </motion.div>\n                      <div>\n                        <h3 className=\"text-2xl font-bold text-slate-900 dark:text-white mb-1\">\n                          {exp.title}\n                        </h3>\n                        <p className=\"text-lg font-semibold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\n                          {exp.company}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-wrap items-center gap-6 text-sm text-slate-600 dark:text-slate-400 mb-4\">\n                      <motion.div\n                        className=\"flex items-center gap-2 bg-slate-100 dark:bg-slate-800 px-3 py-2 rounded-lg\"\n                        whileHover={{ scale: 1.05 }}\n                      >\n                        <Calendar size={16} className=\"text-green-500\" />\n                        <span className=\"font-medium\">{exp.duration}</span>\n                      </motion.div>\n                      <motion.div\n                        className=\"flex items-center gap-2 bg-slate-100 dark:bg-slate-800 px-3 py-2 rounded-lg\"\n                        whileHover={{ scale: 1.05 }}\n                      >\n                        <MapPin size={16} className=\"text-blue-500\" />\n                        <span className=\"font-medium\">{exp.location}</span>\n                      </motion.div>\n                    </div>\n                  </div>\n                  \n                  {/* Action buttons and rating for larger screens */}\n                  <div className=\"flex flex-col lg:flex-row items-start lg:items-center gap-4 mt-4 lg:mt-0\">\n                    {/* Rating for larger screens */}\n                    <motion.div\n                      className=\"hidden lg:flex items-center gap-1 bg-green-100 dark:bg-green-900/30 px-3 py-1 rounded-full\"\n                      initial={{ opacity: 0, scale: 0.8 }}\n                      animate={{ opacity: 1, scale: 1 }}\n                      transition={{ delay: 0.5 + index * 0.2 }}\n                    >\n                      <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\n                      <span className=\"text-xs font-medium text-green-700 dark:text-green-300\">5.0</span>\n                    </motion.div>\n                    \n                    <motion.a\n                      href={exp.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center gap-2 bg-gradient-to-r from-green-500 to-blue-500 text-white px-6 py-3 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300 group\"\n                      whileHover={{ scale: 1.05, y: -2 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <span>View Project</span>\n                      <ArrowUpRight size={16} className=\"group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform duration-200\" />\n                    </motion.a>\n                  </div>\n                </div>\n\n                <p className=\"text-lg text-slate-700 dark:text-slate-300 mb-8 leading-relaxed\">\n                  {exp.description}\n                </p>\n\n                <div className=\"mb-8\">\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <Sparkles className=\"w-5 h-5 text-blue-500\" />\n                    <h4 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                      Technologies Used\n                    </h4>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    {exp.technologies.map((tech, techIndex) => (\n                      <motion.span\n                        key={techIndex}\n                        className=\"bg-gradient-to-r from-blue-100 to-green-100 dark:from-blue-900/30 dark:to-green-900/30 text-blue-800 dark:text-blue-200 text-sm font-medium px-4 py-2 rounded-xl border border-blue-200/50 dark:border-blue-700/50 shadow-sm\"\n                        initial={{ opacity: 0, scale: 0.8 }}\n                        animate={{ opacity: 1, scale: 1 }}\n                        transition={{ delay: techIndex * 0.1 }}\n                        whileHover={{ scale: 1.05, y: -2 }}\n                      >\n                        {tech}\n                      </motion.span>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <Award className=\"w-5 h-5 text-green-500\" />\n                    <h4 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                      Key Achievements\n                    </h4>\n                  </div>\n                  <div className=\"space-y-3\">\n                    {exp.achievements.map((achievement, achievementIndex) => (\n                      <motion.div\n                        key={achievementIndex}\n                        className=\"flex items-start gap-3 p-3 bg-slate-50 dark:bg-slate-800/50 rounded-lg border-l-4 border-green-500\"\n                        initial={{ opacity: 0, x: -20 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ delay: achievementIndex * 0.1 }}\n                        whileHover={{ x: 5 }}\n                      >\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                        <span className=\"text-slate-700 dark:text-slate-300 leading-relaxed\">{achievement}</span>\n                      </motion.div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default ExperienceSection; ","size_bytes":11160},"client/src/components/footer.tsx":{"content":"import { Github, Linkedin, Twitter, Mail } from \"lucide-react\";\n\nconst Footer = () => {\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offsetTop = element.offsetTop - 80;\n      window.scrollTo({\n        top: offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const quickLinks = [\n    { id: \"home\", label: \"Home\" },\n    { id: \"about\", label: \"About\" },\n    { id: \"skills\", label: \"Skills\" },\n    { id: \"projects\", label: \"Projects\" },\n    { id: \"contact\", label: \"Contact\" },\n  ];\n\n  const services = [\n    \"Web Development\",\n    \"UI/UX Design\", \n    \"Consulting\",\n    \"Technical Writing\",\n    \"API Integration\",\n  ];\n\n  return (\n    <footer className=\"bg-slate-900 text-white py-12\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          <div>\n            <div className=\"text-2xl font-bold text-[var(--portfolio-primary)] mb-4\">\n              Akshad Apastambh\n            </div>\n            <p className=\"text-slate-400 mb-4\">\n              Full Stack Developer passionate about creating beautiful, functional web applications.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a\n                href=\"https://github.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-slate-400 hover:text-white transition-colors duration-200\"\n              >\n                <Github size={20} />\n              </a>\n              <a\n                href=\"https://linkedin.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-slate-400 hover:text-white transition-colors duration-200\"\n              >\n                <Linkedin size={20} />\n              </a>\n              <a\n                href=\"https://twitter.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-slate-400 hover:text-white transition-colors duration-200\"\n              >\n                <Twitter size={20} />\n              </a>\n              <a\n                href=\"mailto:akshadapastambh37@gmail.com\"\n                className=\"text-slate-400 hover:text-white transition-colors duration-200\"\n              >\n                <Mail size={20} />\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\n            <div className=\"space-y-2\">\n              {quickLinks.map((link) => (\n                <button\n                  key={link.id}\n                  onClick={() => scrollToSection(link.id)}\n                  className=\"block text-slate-400 hover:text-white transition-colors duration-200 text-left\"\n                >\n                  {link.label}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Services</h3>\n            <div className=\"space-y-2\">\n              {services.map((service, index) => (\n                <div key={index} className=\"text-slate-400\">\n                  {service}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-slate-800 mt-8 pt-8 text-center\">\n          <p className=\"text-slate-400\">\n            ¬© 2024 Akshad Apastambh. All rights reserved. Built with ‚ù§Ô∏è and React.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":3605},"client/src/components/hero-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowDown, Github, Linkedin, Twitter, Mail, Rocket, Sparkles, Code, Zap } from \"lucide-react\";\n\nconst HeroSection = () => {\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offsetTop = element.offsetTop - 80;\n      window.scrollTo({\n        top: offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const socialLinks = [\n    { icon: Github, href: \"#\", label: \"GitHub\" },\n    { icon: Linkedin, href: \"#\", label: \"LinkedIn\" },\n    { icon: Twitter, href: \"#\", label: \"Twitter\" },\n    { icon: Mail, href: \"#\", label: \"Email\" },\n  ];\n\n  return (\n    <section id=\"home\" className=\"min-h-screen flex items-center justify-center pt-20 px-4 sm:px-6 lg:px-8 relative\">\n      {/* Background animated elements */}\n      <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\n        {/* Floating code symbols */}\n        {Array.from({ length: 8 }).map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute text-blue-400/20 dark:text-blue-300/20 text-2xl\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n            }}\n            animate={{\n              y: [0, -20, 0],\n              rotate: [0, 360],\n              opacity: [0.2, 0.5, 0.2],\n            }}\n            transition={{\n              duration: 6 + Math.random() * 4,\n              repeat: Infinity,\n              delay: Math.random() * 3,\n            }}\n          >\n            {['<>', '</>', '{}', '[]', '()', '//', '&&', '||'][i]}\n          </motion.div>\n        ))}\n      </div>\n\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Column - Content */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-center lg:text-left\"\n          >\n            {/* Badge */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 0.2, duration: 0.5 }}\n              className=\"inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full text-sm font-medium mb-6 relative overflow-hidden group\"\n              whileHover={{ scale: 1.05 }}\n            >\n\n              <span className=\"relative z-10\">üë®‚Äçüíª</span>\n              <span className=\"relative z-10\">Full Stack Developer</span>\n            </motion.div>\n\n            {/* Main Heading */}\n            <motion.h1\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3, duration: 0.8 }}\n              className=\"text-4xl sm:text-5xl lg:text-6xl font-bold mb-6\"\n            >\n              <span className=\"text-slate-900 dark:text-white\">Hi, I'm </span>\n              <motion.span \n                className=\"bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\"\n                whileHover={{\n                  backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"]\n                }}\n                transition={{ duration: 2, repeat: Infinity }}\n              >\n                Akshad\n              </motion.span>\n              <span className=\"text-slate-900 dark:text-white\"> Apastambh</span>\n            </motion.h1>\n\n            {/* Description */}\n            <motion.p\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4, duration: 0.8 }}\n              className=\"text-lg sm:text-xl text-slate-600 dark:text-slate-300 mb-8 max-w-2xl mx-auto lg:mx-0\"\n            >\n              Final Year Computer Science Student passionate about creating beautiful, \n              functional web applications that solve real-world problems.\n            </motion.p>\n\n            {/* CTA Buttons */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5, duration: 0.8 }}\n              className=\"flex flex-col sm:flex-row gap-4 justify-center lg:justify-start mb-8\"\n            >\n              <motion.div\n                whileHover={{ scale: 1.05, y: -2 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Button\n                  onClick={() => scrollToSection(\"projects\")}\n                  className=\"relative bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-8 py-3 text-lg font-medium rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group\"\n                >\n\n                  <Rocket className=\"mr-2 h-5 w-5 relative z-10\" />\n                  <span className=\"relative z-10\">View My Work</span>\n                  <ArrowDown className=\"ml-2 h-5 w-5 relative z-10\" />\n                </Button>\n              </motion.div>\n              \n              <motion.div\n                whileHover={{ scale: 1.05, y: -2 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Button\n                  onClick={() => scrollToSection(\"contact\")}\n                  variant=\"outline\"\n                  className=\"relative border-2 border-slate-300 dark:border-slate-600 text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 px-8 py-3 text-lg font-medium rounded-lg transition-all duration-300 overflow-hidden group\"\n                >\n                  <motion.div\n                    className=\"absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                  />\n                  <span className=\"relative z-10\">Get In Touch</span>\n                </Button>\n              </motion.div>\n            </motion.div>\n\n            {/* Social Links */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.6, duration: 0.8 }}\n              className=\"flex justify-center lg:justify-start gap-6\"\n            >\n              {socialLinks.map((social, index) => (\n                <motion.a\n                  key={index}\n                  href={social.href}\n                  className=\"group relative p-3 text-slate-600 dark:text-slate-400 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300\"\n                  whileHover={{ \n                    scale: 1.2, \n                    rotate: 5,\n                    y: -5\n                  }}\n                  whileTap={{ scale: 0.9 }}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7 + index * 0.1, duration: 0.5 }}\n                >\n                  <motion.div\n                    className=\"absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                    animate={{ scale: [1, 1.2, 1] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  />\n                  <social.icon size={24} className=\"relative z-10 drop-shadow-lg\" />\n                  <div className=\"absolute -bottom-10 left-1/2 transform -translate-x-1/2 bg-slate-800 text-white text-xs px-3 py-2 rounded-lg opacity-0 group-hover:opacity-100 backdrop-blur-sm transition-opacity duration-300\">\n                    {social.label}\n                    <div className=\"absolute -top-1 left-1/2 transform -translate-x-1/2 w-2 h-2 bg-slate-800 rotate-45\"></div>\n                  </div>\n                </motion.a>\n              ))}\n            </motion.div>\n          </motion.div>\n\n          {/* Right Column - Developer Visual */}\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.5, duration: 0.8 }}\n            className=\"flex justify-center lg:justify-end\"\n          >\n            {/* Developer Illustration */}\n            <motion.div \n              className=\"relative w-80 h-80\"\n              whileHover={{ scale: 1.05 }}\n              animate={{ \n                boxShadow: [\n                  \"0 20px 25px -5px rgba(0, 0, 0, 0.1)\",\n                  \"0 25px 50px -12px rgba(59, 130, 246, 0.3)\",\n                  \"0 20px 25px -5px rgba(0, 0, 0, 0.1)\"\n                ]\n              }}\n              transition={{ \n                boxShadow: { duration: 3, repeat: Infinity, ease: \"easeInOut\" },\n                scale: { duration: 0.3 }\n              }}\n            >\n              {/* Outer gradient border */}\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 rounded-3xl p-2 shadow-2xl\">\n                {/* Inner content */}\n                <div className=\"w-full h-full bg-white dark:bg-slate-800 rounded-2xl flex items-center justify-center relative overflow-hidden\">\n                  <div className=\"text-center relative z-10\">\n                    <motion.div \n                      className=\"text-8xl mb-4\"\n                      animate={{ \n                        rotate: [0, 5, -5, 0],\n                        scale: [1, 1.05, 1],\n                      }}\n                      transition={{ \n                        duration: 4, \n                        repeat: Infinity, \n                        ease: \"easeInOut\" \n                      }}\n                    >\n                      üë®‚Äçüíª\n                    </motion.div>\n                    <motion.div \n                      className=\"text-xl font-semibold text-slate-700 dark:text-slate-300 mb-2\"\n                      animate={{ opacity: [0.8, 1, 0.8] }}\n                      transition={{ duration: 2, repeat: Infinity }}\n                    >\n                      Developer\n                    </motion.div>\n                    <div className=\"text-sm text-slate-500 dark:text-slate-400\">\n                      React ‚Ä¢ Node.js ‚Ä¢ TypeScript\n                    </div>\n                  </div>\n                  \n                  {/* Floating elements */}\n                  <motion.div\n                    className=\"absolute top-4 right-4 text-yellow-400\"\n                    animate={{ \n                      rotate: [0, 360],\n                      scale: [1, 1.2, 1]\n                    }}\n                    transition={{ \n                      duration: 4, \n                      repeat: Infinity, \n                      ease: \"linear\" \n                    }}\n                  >\n                    <Sparkles size={24} />\n                  </motion.div>\n                  \n                  <motion.div\n                    className=\"absolute bottom-4 left-4 text-blue-400\"\n                    animate={{ \n                      rotate: [0, -360],\n                      scale: [1, 1.1, 1]\n                    }}\n                    transition={{ \n                      duration: 3, \n                      repeat: Infinity, \n                      ease: \"linear\" \n                    }}\n                  >\n                    <Code size={20} />\n                  </motion.div>\n                  \n                  <motion.div\n                    className=\"absolute top-1/2 left-4 text-purple-400\"\n                    animate={{ \n                      y: [0, -10, 0],\n                      opacity: [0.5, 1, 0.5]\n                    }}\n                    transition={{ \n                      duration: 2, \n                      repeat: Infinity, \n                      ease: \"easeInOut\" \n                    }}\n                  >\n                    <Zap size={16} />\n                  </motion.div>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroSection;\n","size_bytes":12165},"client/src/components/navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X, Moon, Sun, Code, User, Briefcase, FileText, MessageCircle, Sparkles } from \"lucide-react\";\n\nconst Navigation = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [activeSection, setActiveSection] = useState(\"home\");\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      setIsDark(true);\n      document.documentElement.classList.add('dark');\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      setIsScrolled(scrollPosition > 50);\n\n      const sections = [\"home\", \"about\", \"experience\", \"skills\", \"projects\", \"contact\"];\n      const scrollPositionWithOffset = scrollPosition + 100;\n\n      sections.forEach((section) => {\n        const element = document.getElementById(section);\n        if (element) {\n          const { offsetTop, offsetHeight } = element;\n          if (scrollPositionWithOffset >= offsetTop && scrollPositionWithOffset < offsetTop + offsetHeight) {\n            setActiveSection(section);\n          }\n        }\n      });\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n    if (isDark) {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    } else {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    }\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offsetTop = element.offsetTop - 80;\n      window.scrollTo({\n        top: offsetTop,\n        behavior: \"smooth\",\n      });\n    }\n    setIsMenuOpen(false);\n  };\n\n  const navItems = [\n    { id: \"home\", label: \"Home\", icon: User },\n    { id: \"about\", label: \"About\", icon: FileText },\n    { id: \"experience\", label: \"Experience\", icon: Briefcase },\n    { id: \"skills\", label: \"Skills\", icon: Code },\n    { id: \"projects\", label: \"Projects\", icon: Sparkles },\n    { id: \"contact\", label: \"Contact\", icon: MessageCircle },\n  ];\n\n  return (\n    <motion.nav\n      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-500 ${\n        isScrolled\n          ? \"bg-white/95 dark:bg-slate-900/95 backdrop-blur-xl shadow-2xl border-b border-slate-200/50 dark:border-slate-700/50\"\n          : \"bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm shadow-md border-b border-slate-200/30 dark:border-slate-700/30\"\n      }`}\n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.8, ease: \"easeOut\" }}\n    >\n      {/* Animated background gradient */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/5 via-purple-500/5 to-pink-500/5 opacity-0 hover:opacity-100 transition-opacity duration-500\"></div>\n      \n      <div className=\"relative w-full px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center py-3 sm:py-4\">\n          {/* Logo/Brand */}\n          <motion.div\n            className=\"flex items-center cursor-pointer group\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => scrollToSection(\"home\")}\n          >\n            {/* Animated logo icon */}\n            <motion.div\n              className=\"relative w-10 h-10 sm:w-12 sm:h-12 mr-2 sm:mr-4\"\n              whileHover={{ rotate: 360 }}\n              transition={{ duration: 0.6 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 rounded-xl shadow-lg\"></div>\n              <div className=\"absolute inset-1 bg-white dark:bg-slate-800 rounded-lg flex items-center justify-center\">\n                <Code className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n\n            </motion.div>\n            \n            <div className=\"flex flex-col\">\n              <motion.h1\n                className=\"text-lg sm:text-xl font-bold bg-gradient-to-r from-slate-900 via-blue-600 to-purple-600 dark:from-white dark:via-blue-400 dark:to-purple-400 bg-clip-text text-transparent\"\n                whileHover={{\n                  backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"]\n                }}\n                transition={{ duration: 2, repeat: Infinity }}\n              >\n                <span className=\"hidden sm:inline\">Akshad Apastambh</span>\n                <span className=\"sm:hidden\">Akshad A.</span>\n              </motion.h1>\n              <motion.div\n                className=\"hidden sm:flex items-center gap-1 text-xs text-slate-500 dark:text-slate-400\"\n              >\n                <div className=\"w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full\"></div>\n                <span>Full Stack Developer</span>\n              </motion.div>\n            </div>\n          </motion.div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-2\">\n            {navItems.map((item) => (\n              <motion.button\n                key={item.id}\n                onClick={() => scrollToSection(item.id)}\n                className={`relative flex items-center gap-2 px-4 py-2 rounded-xl transition-all duration-300 font-medium overflow-hidden group ${\n                  activeSection === item.id\n                    ? \"text-white bg-gradient-to-r from-blue-500 to-purple-500 shadow-lg\"\n                    : \"text-slate-600 dark:text-slate-300 hover:text-blue-500 dark:hover:text-blue-400 bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm shadow-sm border border-slate-200/50 dark:border-slate-700/50\"\n                }`}\n                whileHover={{ \n                  scale: 1.05, \n                  y: -2,\n                  boxShadow: \"0 10px 25px rgba(0, 0, 0, 0.1)\"\n                }}\n                whileTap={{ scale: 0.95 }}\n              >\n                {/* Background gradient on hover */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl\"></div>\n                \n                <item.icon className=\"h-4 w-4 relative z-10\" />\n                <span className=\"relative z-10\">{item.label}</span>\n                \n                {/* Active indicator */}\n                {activeSection === item.id && (\n                  <motion.div\n                    className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-xl\"\n                    layoutId=\"activeTab\"\n                    transition={{ type: \"spring\", bounce: 0.2, duration: 0.6 }}\n                  />\n                )}\n              </motion.button>\n            ))}\n            \n            {/* Theme Toggle */}\n            <motion.div\n              whileHover={{ scale: 1.1, rotate: 180 }}\n              whileTap={{ scale: 0.9 }}\n              className=\"ml-4\"\n            >\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={toggleTheme}\n                className=\"relative bg-white/90 backdrop-blur-sm dark:bg-slate-800/90 border-slate-300 dark:border-slate-600 hover:bg-white dark:hover:bg-slate-800 shadow-lg overflow-hidden group\"\n              >\n                <motion.div\n                  className=\"absolute inset-0 bg-gradient-to-r from-yellow-400/20 to-orange-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                  animate={{ rotate: isDark ? 0 : 180 }}\n                  transition={{ duration: 0.5 }}\n                />\n                {isDark ? (\n                  <Sun className=\"h-4 w-4 text-yellow-500 relative z-10\" />\n                ) : (\n                  <Moon className=\"h-4 w-4 text-slate-800 dark:text-slate-300 relative z-10\" />\n                )}\n              </Button>\n            </motion.div>\n          </div>\n\n          {/* Mobile Theme Toggle and Menu */}\n          <div className=\"flex items-center gap-2 md:hidden\">\n            {/* Mobile Theme Toggle */}\n            <motion.div\n              whileHover={{ scale: 1.1, rotate: 180 }}\n              whileTap={{ scale: 0.9 }}\n            >\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={toggleTheme}\n                className=\"relative bg-white/90 backdrop-blur-sm dark:bg-slate-800/90 border-slate-300 dark:border-slate-600 hover:bg-white dark:hover:bg-slate-800 shadow-lg overflow-hidden group\"\n              >\n                <motion.div\n                  className=\"absolute inset-0 bg-gradient-to-r from-yellow-400/20 to-orange-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                  animate={{ rotate: isDark ? 0 : 180 }}\n                  transition={{ duration: 0.5 }}\n                />\n                {isDark ? (\n                  <Sun className=\"h-4 w-4 text-yellow-500 relative z-10\" />\n                ) : (\n                  <Moon className=\"h-4 w-4 text-slate-800 dark:text-slate-300 relative z-10\" />\n                )}\n              </Button>\n            </motion.div>\n\n            {/* Mobile Menu Button */}\n            <motion.div\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n            >\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsMenuOpen(!isMenuOpen)}\n                className=\"relative bg-white/80 backdrop-blur-sm dark:bg-slate-800/80 border border-slate-200 dark:border-slate-700\"\n              >\n                <motion.div\n                  animate={{ rotate: isMenuOpen ? 180 : 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {isMenuOpen ? <X size={20} /> : <Menu size={20} />}\n                </motion.div>\n              </Button>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        <motion.div\n          initial={false}\n          animate={{ height: isMenuOpen ? \"auto\" : 0, opacity: isMenuOpen ? 1 : 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"md:hidden overflow-hidden\"\n        >\n          <div className=\"pb-4 space-y-2\">\n            {navItems.map((item) => (\n              <motion.button\n                key={item.id}\n                onClick={() => scrollToSection(item.id)}\n                className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-300 font-medium ${\n                  activeSection === item.id\n                    ? \"text-white bg-gradient-to-r from-blue-500 to-purple-500 shadow-lg\"\n                    : \"text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800\"\n                }`}\n                whileHover={{ x: 10 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <item.icon className=\"h-4 w-4\" />\n                {item.label}\n              </motion.button>\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    </motion.nav>\n  );\n};\n\nexport default Navigation;\n","size_bytes":11471},"client/src/components/projects-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { ExternalLink, Github, Calendar, ArrowRight, Sparkles, Star, Zap, TrendingUp, Rocket, Crown, Eye, Code, Play } from \"lucide-react\";\n\nconst ProjectsSection = () => {\n  const projects = [\n    {\n      title: \"Hema Motor Workshop\",\n      description: \"Complete automotive service management platform with appointment scheduling, service tracking, customer management, and integrated payment processing. Features real-time notifications and admin dashboard.\",\n      visual: \"üöó\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Payment Gateway\", \"Real-time Updates\"],\n      completedDate: \"Feb 2024\",\n      demoUrl: \"https://github.com/AkshadAp17/Hema-Motor-Workshop\",\n      githubUrl: \"https://github.com/AkshadAp17/Hema-Motor-Workshop\",\n      isFreelancing: true,\n      stars: 25,\n      difficulty: \"Professional\",\n      category: \"Service Management\",\n      icon: \"üîß\",\n      color: \"from-orange-500 to-red-600\"\n    },\n    {\n      title: \"Legal Case Management\",\n      description: \"Comprehensive legal case tracking and management system for law firms. Features client management, case timeline, document storage, billing integration, and court date scheduling with automated reminders.\",\n      visual: \"‚öñÔ∏è\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Document Management\", \"Billing System\"],\n      completedDate: \"Jan 2024\",\n      demoUrl: \"https://github.com/AkshadAp17/Legal-Case-Management\",\n      githubUrl: \"https://github.com/AkshadAp17/Legal-Case-Management\",\n      isFreelancing: false,\n      stars: 18,\n      difficulty: \"Professional\",\n      category: \"Legal Tech\",\n      icon: \"üìã\",\n      color: \"from-purple-500 to-indigo-600\"\n    },\n    {\n      title: \"Facility Booking System\",\n      description: \"Modern facility booking and management platform for organizations. Features room booking, resource scheduling, availability tracking, user permissions, and automated confirmation systems.\",\n      visual: \"üè¢\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Calendar Integration\", \"User Management\"],\n      completedDate: \"Dec 2023\",\n      demoUrl: \"https://github.com/AkshadAp17/Facility-Booking-System\",\n      githubUrl: \"https://github.com/AkshadAp17/Facility-Booking-System\",\n      isFreelancing: false,\n      stars: 22,\n      difficulty: \"Advanced\",\n      category: \"Booking System\",\n      icon: \"üè†\",\n      color: \"from-teal-500 to-cyan-600\"\n    },\n    {\n      title: \"Split Money - Expense Tracker\",\n      description: \"Smart expense tracking and bill splitting application for groups. Features real-time calculations, receipt scanning, expense categorization, and settlement recommendations with multiple payment methods.\",\n      visual: \"üí∞\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Receipt OCR\"],\n      completedDate: \"March 2024\",\n      demoUrl: \"#\",\n      githubUrl: \"#\",\n      isFreelancing: false,\n      stars: 34,\n      difficulty: \"Advanced\",\n      category: \"Finance\",\n      icon: \"üí∏\",\n      color: \"from-green-500 to-emerald-600\"\n    },\n    {\n      title: \"URL Shortener Service\", \n      description: \"Professional URL shortening service with custom aliases, click analytics, QR code generation, and bulk operations. Features user management, link expiration, and detailed statistics dashboard.\",\n      visual: \"üîó\",\n      technologies: [\"React\", \"Node.js\", \"MongoDB\", \"Analytics\"],\n      completedDate: \"February 2024\",\n      demoUrl: \"#\",\n      githubUrl: \"#\",\n      isFreelancing: false,\n      stars: 28,\n      difficulty: \"Intermediate\",\n      category: \"Web Service\",\n      icon: \"üîó\",\n      color: \"from-blue-500 to-purple-600\"\n    }\n  ];\n\n  const techColors: { [key: string]: string } = {\n    React: \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n    \"Node.js\": \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\",\n    PostgreSQL: \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n    Stripe: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300\",\n    TypeScript: \"bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300\",\n    \"Socket.io\": \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\",\n    MongoDB: \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\",\n    \"Vue.js\": \"bg-cyan-100 text-cyan-800 dark:bg-cyan-900/30 dark:text-cyan-300\",\n    PWA: \"bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300\",\n    \"Chart.js\": \"bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300\",\n    \"API Integration\": \"bg-teal-100 text-teal-800 dark:bg-teal-900/30 dark:text-teal-300\",\n    \"Next.js\": \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n    Prisma: \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n    Redis: \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\",\n    OAuth: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300\",\n    \"Payment Gateway\": \"bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300\",\n    \"Real-time Updates\": \"bg-violet-100 text-violet-800 dark:bg-violet-900/30 dark:text-violet-300\",\n    \"GPS Integration\": \"bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300\",\n    \"WebSocket\": \"bg-rose-100 text-rose-800 dark:bg-rose-900/30 dark:text-rose-300\",\n    \"Document Management\": \"bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300\",\n    \"Billing System\": \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n    \"Calendar Integration\": \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n    \"User Management\": \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\",\n    \"Receipt OCR\": \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\",\n    \"Analytics\": \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\",\n  };\n\n  const stats = [\n    { label: \"Projects\", value: \"5+\", color: \"text-blue-500\" },\n    { label: \"Technologies\", value: \"12+\", color: \"text-purple-500\" },\n    { label: \"Years\", value: \"2+\", color: \"text-green-500\" },\n  ];\n\n  return (\n    <section id=\"projects\" className=\"py-20 bg-white dark:bg-slate-900 relative overflow-hidden\">\n      {/* Background animated elements */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        {/* Floating project icons */}\n        {Array.from({ length: 6 }).map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute text-4xl opacity-10 dark:opacity-20\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              rotate: [0, 360],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: 8 + Math.random() * 4,\n              repeat: Infinity,\n              delay: Math.random() * 3,\n            }}\n          >\n            {['üíª', 'üöÄ', '‚ö°', 'üéØ', 'üî•', '‚≠ê'][i]}\n          </motion.div>\n        ))}\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        {/* Section Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center mb-16\"\n        >\n          <motion.h2\n            className=\"text-3xl sm:text-4xl font-bold text-slate-900 dark:text-white mb-4\"\n            whileHover={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"]\n            }}\n            transition={{ duration: 2, repeat: Infinity }}\n          >\nFeatured Projects\n          </motion.h2>\n          \n          {/* Stats */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.2, duration: 0.8 }}\n            className=\"flex justify-center gap-8 mt-8\"\n          >\n            {stats.map((stat, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center\"\n                whileHover={{ scale: 1.1 }}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ delay: 0.3 + index * 0.1, duration: 0.5 }}\n              >\n                <div className={`text-2xl font-bold ${stat.color}`}>{stat.value}</div>\n                <div className=\"text-sm text-slate-600 dark:text-slate-400\">{stat.label}</div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </motion.div>\n\n        {/* Projects Grid */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.8 }}\n          className=\"grid lg:grid-cols-2 gap-8 items-stretch\"\n        >\n          {projects.map((project, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ delay: index * 0.1, duration: 0.6 }}\n              className=\"group relative h-full\"\n            >\n              {/* Enhanced Project Card */}\n              <motion.div\n                className=\"relative bg-white dark:bg-slate-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 overflow-hidden border border-slate-200 dark:border-slate-700 h-full flex flex-col\"\n                whileHover={{ \n                  y: -10,\n                  scale: 1.02,\n                  boxShadow: \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\n                }}\n                transition={{ duration: 0.3 }}\n              >\n                {/* Gradient overlay on hover */}\n                <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/5 via-purple-500/5 to-pink-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n                \n                {/* Live badge */}\n                <motion.div\n                  className=\"absolute top-4 left-4 z-20\"\n                  whileHover={{ scale: 1.1 }}\n                  animate={{ \n                    boxShadow: [\n                      \"0 0 0 0 rgba(34, 197, 94, 0.4)\",\n                      \"0 0 0 10px rgba(34, 197, 94, 0)\",\n                      \"0 0 0 0 rgba(34, 197, 94, 0)\"\n                    ]\n                  }}\n                  transition={{ \n                    boxShadow: { duration: 2, repeat: Infinity },\n                    scale: { duration: 0.2 }\n                  }}\n                >\n                  <span className=\"bg-green-500 text-white text-xs px-3 py-1 rounded-full font-medium\">\n                    LIVE\n                  </span>\n                </motion.div>\n\n                {/* Project Visual */}\n                <div className=\"relative h-64 bg-gradient-to-br from-slate-100 to-slate-200 dark:from-slate-700 dark:to-slate-800 flex items-center justify-center overflow-hidden\">\n                  {/* Dynamic gradient background based on project */}\n                  <motion.div \n                    className={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-10`}\n                    animate={{ \n                      opacity: [0.05, 0.15, 0.05] \n                    }}\n                    transition={{ \n                      duration: 4, \n                      repeat: Infinity,\n                      ease: \"easeInOut\"\n                    }}\n                  />\n                  \n                  {/* Animated background pattern */}\n                  <div className=\"absolute inset-0 opacity-10\">\n                    <motion.div \n                      className=\"absolute inset-0\" \n                      style={{\n                        backgroundImage: `radial-gradient(circle at 1px 1px, currentColor 1px, transparent 0)`,\n                        backgroundSize: '20px 20px'\n                      }}\n                      animate={{\n                        backgroundPosition: ['0px 0px', '20px 20px', '0px 0px']\n                      }}\n                      transition={{\n                        duration: 10,\n                        repeat: Infinity,\n                        ease: \"linear\"\n                      }}\n                    />\n                  </div>\n                  \n                  {/* Main project icon with enhanced animation */}\n                  <motion.div\n                    className=\"text-6xl relative z-10 drop-shadow-lg\"\n                    animate={{ \n                      rotate: [0, 5, -5, 0],\n                      scale: [1, 1.1, 1],\n                      y: [0, -8, 0],\n                      textShadow: [\n                        \"0 0 10px rgba(59, 130, 246, 0.3)\",\n                        \"0 0 20px rgba(59, 130, 246, 0.5)\",\n                        \"0 0 10px rgba(59, 130, 246, 0.3)\"\n                      ]\n                    }}\n                    transition={{ \n                      duration: 6, \n                      repeat: Infinity, \n                      ease: \"easeInOut\" \n                    }}\n                    whileHover={{\n                      scale: 1.2,\n                      rotate: 15,\n                      transition: { duration: 0.3 }\n                    }}\n                  >\n                    {project.icon}\n                  </motion.div>\n                  \n                  {/* Enhanced floating elements */}\n                  <motion.div\n                    className=\"absolute top-3 right-3 text-yellow-400 drop-shadow-sm\"\n                    animate={{ \n                      rotate: [0, 360],\n                      scale: [1, 1.3, 1],\n                      opacity: [0.7, 1, 0.7]\n                    }}\n                    transition={{ \n                      duration: 4, \n                      repeat: Infinity, \n                      ease: \"linear\" \n                    }}\n                  >\n                    <Star size={22} fill=\"currentColor\" />\n                  </motion.div>\n                  \n                  <motion.div\n                    className=\"absolute bottom-3 left-3 text-purple-400 drop-shadow-sm\"\n                    animate={{ \n                      rotate: [0, -360],\n                      scale: [1, 1.2, 1],\n                      opacity: [0.6, 1, 0.6]\n                    }}\n                    transition={{ \n                      duration: 5, \n                      repeat: Infinity, \n                      ease: \"linear\" \n                    }}\n                  >\n                    <Sparkles size={18} />\n                  </motion.div>\n                  \n                  {/* Additional floating tech icons */}\n                  <motion.div\n                    className=\"absolute top-16 left-6 text-green-400 opacity-60\"\n                    animate={{ \n                      y: [0, -15, 0],\n                      rotate: [0, 180, 360],\n                      scale: [0.8, 1.1, 0.8]\n                    }}\n                    transition={{ \n                      duration: 7, \n                      repeat: Infinity, \n                      ease: \"easeInOut\",\n                      delay: 1\n                    }}\n                  >\n                    <Zap size={16} />\n                  </motion.div>\n                  \n                  <motion.div\n                    className=\"absolute bottom-16 right-6 text-pink-400 opacity-60\"\n                    animate={{ \n                      y: [0, 12, 0],\n                      rotate: [0, -180, -360],\n                      scale: [0.9, 1.2, 0.9]\n                    }}\n                    transition={{ \n                      duration: 6, \n                      repeat: Infinity, \n                      ease: \"easeInOut\",\n                      delay: 2\n                    }}\n                  >\n                    <Rocket size={14} />\n                  </motion.div>\n\n                  {/* Hover overlay with live buttons */}\n                  <motion.div\n                    className=\"absolute inset-0 bg-black/60 flex items-end justify-center pb-4 gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                    initial={{ opacity: 0 }}\n                    whileHover={{ opacity: 1 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <motion.a\n                      href={project.demoUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"bg-white text-black px-2 py-1 rounded-md font-medium text-xs flex items-center gap-1 hover:bg-gray-100 transition-colors duration-200 shadow-lg\"\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      initial={{ y: 10, opacity: 0 }}\n                      whileInView={{ y: 0, opacity: 1 }}\n                      transition={{ delay: 0.1, duration: 0.3 }}\n                    >\n                      <Play size={10} />\n                      Demo\n                    </motion.a>\n                    <motion.a\n                      href={project.githubUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"bg-black text-white px-2 py-1 rounded-md font-medium text-xs flex items-center gap-1 hover:bg-gray-800 transition-colors duration-200 shadow-lg\"\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      initial={{ y: 10, opacity: 0 }}\n                      whileInView={{ y: 0, opacity: 1 }}\n                      transition={{ delay: 0.2, duration: 0.3 }}\n                    >\n                      <Github size={10} />\n                      Code\n                    </motion.a>\n                  </motion.div>\n                </div>\n\n                {/* Project Content */}\n                <div className=\"p-6 flex-1 flex flex-col\">\n                  {/* Project title */}\n                  <motion.h3\n                    className=\"text-xl font-bold text-slate-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300\"\n                    whileHover={{ x: 5 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    {project.title}\n                  </motion.h3>\n\n                  {/* Project Description */}\n                  <p className=\"text-sm text-slate-600 dark:text-slate-400 mb-4 leading-relaxed\">\n                    {project.description}\n                  </p>\n\n                  {/* Completion Date */}\n                  <div className=\"flex items-center gap-2 mb-4 text-xs text-slate-500 dark:text-slate-500\">\n                    <Calendar size={14} />\n                    <span>Completed: {project.completedDate}</span>\n                  </div>\n\n                  {/* Tech Stack */}\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm font-semibold text-slate-700 dark:text-slate-300 mb-3\">Tech Stack:</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {project.technologies.map((tech, techIndex) => (\n                        <motion.span\n                          key={techIndex}\n                          className={`px-3 py-1.5 text-sm font-medium rounded-lg ${techColors[tech] || \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\"}`}\n                          whileHover={{ scale: 1.05 }}\n                          initial={{ opacity: 0, scale: 0.8 }}\n                          whileInView={{ opacity: 1, scale: 1 }}\n                          transition={{ delay: techIndex * 0.1, duration: 0.3 }}\n                        >\n                          {tech}\n                        </motion.span>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Tags */}\n                  <div className=\"flex flex-wrap gap-2 mb-4\">\n                    <motion.span\n                      className=\"px-3 py-1 bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300 text-xs font-medium rounded-full\"\n                      whileHover={{ scale: 1.05 }}\n                    >\n                      {project.difficulty}\n                    </motion.span>\n                    <motion.span\n                      className=\"px-3 py-1 bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300 text-xs font-medium rounded-full\"\n                      whileHover={{ scale: 1.05 }}\n                    >\n                      {project.category}\n                    </motion.span>\n                    {project.isFreelancing && (\n                      <motion.span\n                        className=\"px-3 py-1 bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300 text-xs font-medium rounded-full\"\n                        whileHover={{ scale: 1.05 }}\n                      >\n                        Freelancing\n                      </motion.span>\n                    )}\n                  </div>\n\n                  {/* Project Actions Row */}\n                  <div className=\"flex items-center justify-between mt-auto\">\n                    {/* View Project Button */}\n                    <motion.a\n                      href={project.demoUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"inline-flex items-center gap-2 bg-gradient-to-r from-blue-500 to-purple-500 text-white px-4 py-2 rounded-lg text-sm font-medium hover:from-blue-600 hover:to-purple-600 transition-all duration-300 shadow-sm hover:shadow-md\"\n                      whileHover={{ scale: 1.05, y: -1 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <ExternalLink size={14} />\n                      View Project\n                    </motion.a>\n\n                    {/* Stars - smaller and positioned down */}\n                    <div className=\"flex items-center gap-1 text-yellow-500\">\n                      <Star size={14} fill=\"currentColor\" />\n                      <span className=\"text-xs font-medium text-slate-600 dark:text-slate-400\">\n                        {project.stars}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          ))}\n        </motion.div>\n        \n        {/* See Other Projects Button */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ delay: 0.3, duration: 0.6 }}\n          className=\"text-center mt-12\"\n        >\n          <motion.a\n            href=\"https://github.com/AkshadAp17\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center gap-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-4 rounded-xl font-semibold text-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <Github size={24} />\n            See Other Projects on GitHub\n            <ExternalLink size={20} />\n          </motion.a>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectsSection;\n","size_bytes":23741},"client/src/components/scroll-progress.tsx":{"content":"import { motion, useScroll, useSpring } from \"framer-motion\";\n\nconst ScrollProgress = () => {\n  const { scrollYProgress } = useScroll();\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return (\n    <motion.div\n      className=\"fixed top-0 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 to-purple-600 origin-left z-50\"\n      style={{ scaleX }}\n    />\n  );\n};\n\nexport default ScrollProgress; ","size_bytes":458},"client/src/components/skills-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Code, Server, Cloud, Smartphone, Palette, Settings, Sparkles, TrendingUp } from \"lucide-react\";\nimport { fadeInUp, staggerContainer, staggerItem, skillBarAnimation, scaleIn, floatingAnimation, cardHoverEffect } from \"@/lib/animations\";\n\nconst SkillsSection = () => {\n  const skillCategories = [\n    {\n      icon: Code,\n      title: \"Frontend Development\",\n      skills: [\n        { name: \"React.js\", level: 75 },\n        { name: \"JavaScript\", level: 80 },\n        { name: \"HTML/CSS\", level: 85 },\n        { name: \"Tailwind CSS\", level: 70 },\n      ],\n    },\n    {\n      icon: Server,\n      title: \"Backend Development\",\n      skills: [\n        { name: \"Node.js\", level: 70 },\n        { name: \"Express.js\", level: 75 },\n        { name: \"MongoDB\", level: 65 },\n        { name: \"PostgreSQL\", level: 60 },\n      ],\n    },\n    {\n      icon: Cloud,\n      title: \"Cloud & DevOps\",\n      skills: [\n        { name: \"AWS Basics\", level: 50 },\n        { name: \"Docker\", level: 45 },\n        { name: \"Git/GitHub\", level: 80 },\n      ],\n    },\n    {\n      icon: Palette,\n      title: \"Design & UX\",\n      skills: [\n        { name: \"Figma\", level: 60 },\n        { name: \"UI/UX Basics\", level: 65 },\n        { name: \"Responsive Design\", level: 75 },\n      ],\n    },\n    {\n      icon: Settings,\n      title: \"Programming Languages\",\n      skills: [\n        { name: \"JavaScript\", level: 80 },\n        { name: \"Python\", level: 70 },\n        { name: \"Java\", level: 65 },\n        { name: \"C++\", level: 60 },\n      ],\n    },\n    {\n      icon: Code,\n      title: \"Tools & Workflow\",\n      skills: [\n        { name: \"VS Code\", level: 90 },\n        { name: \"Git/GitHub\", level: 80 },\n        { name: \"Postman\", level: 70 },\n        { name: \"MongoDB Compass\", level: 65 },\n      ],\n    },\n  ];\n\n  return (\n    <section id=\"skills\" className=\"py-20 bg-gradient-to-br from-white via-purple-50/30 to-blue-50/30 dark:from-slate-900 dark:via-slate-800/50 dark:to-slate-700/30 relative overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        <motion.div\n          className=\"absolute top-16 left-20 w-20 h-20 bg-gradient-to-r from-purple-400/20 to-blue-400/20 rounded-full blur-xl\"\n          {...floatingAnimation}\n        />\n        <motion.div\n          className=\"absolute bottom-16 right-16 w-28 h-28 bg-gradient-to-r from-blue-400/20 to-cyan-400/20 rounded-full blur-xl\"\n          animate={{\n            y: [0, -25, 0],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 6,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1\n          }}\n        />\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true, margin: \"-100px\" }}\n          variants={fadeInUp}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-slate-900 dark:text-white mb-4\">Skills & Technologies</h2>\n          <p className=\"text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto\">\n            The tools and technologies I use to bring ideas to life\n          </p>\n        </motion.div>\n\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          viewport={{ once: true }}\n          variants={staggerContainer}\n          className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\n        >\n          {skillCategories.map((category, index) => (\n            <motion.div\n              key={index}\n              variants={staggerItem}\n              className=\"bg-white dark:bg-slate-900 p-8 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 relative overflow-hidden group\"\n              whileHover={{ \n                scale: 1.02,\n                boxShadow: \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\n              }}\n            >\n              <motion.div \n                className=\"absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                initial={{ x: \"-100%\" }}\n                whileHover={{ x: \"100%\" }}\n                transition={{ duration: 0.6 }}\n              />\n              <motion.div \n                className=\"text-[var(--portfolio-primary)] text-3xl mb-4\"\n                whileHover={{ rotate: 360 }}\n                transition={{ duration: 0.6 }}\n              >\n                <category.icon size={32} />\n              </motion.div>\n              <h3 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-4\">{category.title}</h3>\n              <div className=\"space-y-3\">\n                {category.skills.map((skill, skillIndex) => (\n                  <div key={skillIndex} className=\"flex items-center justify-between\">\n                    <span className=\"text-slate-700 dark:text-slate-300\">{skill.name}</span>\n                    <div className=\"w-16 bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n                      <motion.div\n                        className=\"bg-[var(--portfolio-primary)] h-2 rounded-full skill-progress\"\n                        initial={{ width: 0 }}\n                        whileInView={{ width: `${skill.level}%` }}\n                        viewport={{ once: true }}\n                        transition={{ duration: 1, delay: skillIndex * 0.1 }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default SkillsSection;\n","size_bytes":5746},"client/src/components/theme-toggle.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nexport function ThemeToggle() {\n  const [isDark, setIsDark] = useState(false);\n\n  useEffect(() => {\n    // Check if user has a preference stored\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\n      setIsDark(true);\n      document.documentElement.classList.add('dark');\n    } else {\n      setIsDark(false);\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    if (isDark) {\n      setIsDark(false);\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    } else {\n      setIsDark(true);\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    }\n  };\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      className=\"fixed top-4 right-4 z-50 bg-white/80 backdrop-blur-sm dark:bg-slate-800/80 border-slate-200 dark:border-slate-700 hover:bg-white dark:hover:bg-slate-800\"\n    >\n      {isDark ? (\n        <Sun className=\"h-4 w-4 text-yellow-500\" />\n      ) : (\n        <Moon className=\"h-4 w-4 text-slate-700\" />\n      )}\n    </Button>\n  );\n}","size_bytes":1432},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/animations.ts":{"content":"export const fadeInUp = {\n  hidden: { opacity: 0, y: 30 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    transition: { \n      duration: 0.8, \n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const fadeInDown = {\n  hidden: { opacity: 0, y: -30 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    transition: { \n      duration: 0.8, \n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const slideInLeft = {\n  hidden: { opacity: 0, x: -50 },\n  visible: { \n    opacity: 1, \n    x: 0, \n    transition: { \n      duration: 0.8, \n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const slideInRight = {\n  hidden: { opacity: 0, x: 50 },\n  visible: { \n    opacity: 1, \n    x: 0, \n    transition: { \n      duration: 0.8, \n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const scaleIn = {\n  hidden: { opacity: 0, scale: 0.8 },\n  visible: { \n    opacity: 1, \n    scale: 1, \n    transition: { \n      duration: 0.6, \n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const staggerContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15,\n      delayChildren: 0.3\n    }\n  }\n};\n\nexport const staggerFastContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.08,\n      delayChildren: 0.1\n    }\n  }\n};\n\nexport const staggerItem = {\n  hidden: { opacity: 0, y: 30 },\n  visible: { \n    opacity: 1, \n    y: 0, \n    transition: { \n      duration: 0.6,\n      ease: [0.25, 0.4, 0.25, 1] \n    } \n  }\n};\n\nexport const bounceIn = {\n  hidden: { opacity: 0, scale: 0.3 },\n  visible: { \n    opacity: 1, \n    scale: 1, \n    transition: { \n      type: \"spring\",\n      damping: 10,\n      stiffness: 100,\n      duration: 0.8\n    } \n  }\n};\n\nexport const scaleOnHover = {\n  hover: { \n    scale: 1.05, \n    transition: { \n      duration: 0.3,\n      ease: [0.25, 0.4, 0.25, 1]\n    } \n  }\n};\n\nexport const projectCardHover = {\n  hover: { \n    y: -10, \n    scale: 1.02,\n    boxShadow: \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\",\n    transition: { \n      duration: 0.4, \n      ease: [0.25, 0.4, 0.25, 1] \n    }\n  }\n};\n\nexport const skillBarAnimation = {\n  hidden: { width: 0 },\n  visible: (level: number) => ({\n    width: `${level}%`,\n    transition: {\n      duration: 1.5,\n      ease: [0.25, 0.4, 0.25, 1],\n      delay: 0.5\n    }\n  })\n};\n\nexport const floatingAnimation = {\n  animate: {\n    y: [0, -10, 0],\n    transition: {\n      duration: 3,\n      repeat: Infinity,\n      ease: \"easeInOut\"\n    }\n  }\n};\n\nexport const pulseAnimation = {\n  animate: {\n    scale: [1, 1.05, 1],\n    transition: {\n      duration: 2,\n      repeat: Infinity,\n      ease: \"easeInOut\"\n    }\n  }\n};\n\nexport const rotateAnimation = {\n  animate: {\n    rotate: [0, 360],\n    transition: {\n      duration: 20,\n      repeat: Infinity,\n      ease: \"linear\"\n    }\n  }\n};\n\nexport const cardHoverEffect = {\n  hover: {\n    y: -8,\n    scale: 1.03,\n    boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    transition: {\n      duration: 0.3,\n      ease: [0.25, 0.4, 0.25, 1]\n    }\n  }\n};\n\nexport const buttonHoverEffect = {\n  hover: {\n    scale: 1.05,\n    y: -2,\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.1)\",\n    transition: {\n      duration: 0.2,\n      ease: [0.25, 0.4, 0.25, 1]\n    }\n  },\n  tap: {\n    scale: 0.95,\n    transition: {\n      duration: 0.1\n    }\n  }\n};\n","size_bytes":3372},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  // Use relative URLs since frontend and backend run on the same port in Replit\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const url = queryKey[0] as string;\n    \n    const res = await fetch(url, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1483},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport HeroSection from \"@/components/hero-section\";\nimport AboutSection from \"@/components/about-section\";\nimport ExperienceSection from \"@/components/experience-section\";\nimport SkillsSection from \"@/components/skills-section\";\nimport ProjectsSection from \"@/components/projects-section\";\nimport ContactSection from \"@/components/contact-section\";\nimport Footer from \"@/components/footer\";\nimport { motion } from \"framer-motion\";\n\nconst Home = () => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800 relative overflow-hidden\">\n      {/* Animated Background Elements */}\n      <div className=\"fixed inset-0 pointer-events-none\">\n        {/* Floating gradient orbs */}\n        <motion.div\n          className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-r from-blue-400/20 to-purple-400/20 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -50, 0],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n          }}\n        />\n        <motion.div\n          className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-r from-purple-400/20 to-pink-400/20 rounded-full blur-3xl\"\n          animate={{\n            x: [0, -80, 0],\n            y: [0, 60, 0],\n            scale: [1, 0.8, 1],\n          }}\n          transition={{\n            duration: 25,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 5,\n          }}\n        />\n        <motion.div\n          className=\"absolute top-1/2 left-1/2 w-64 h-64 bg-gradient-to-r from-cyan-400/20 to-blue-400/20 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 60, 0],\n            y: [0, -80, 0],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 18,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 10,\n          }}\n        />\n\n        {/* Animated grid pattern */}\n        <div className=\"absolute inset-0 opacity-5 dark:opacity-10\">\n          <div className=\"absolute inset-0\" style={{\n            backgroundImage: `radial-gradient(circle at 1px 1px, currentColor 1px, transparent 0)`,\n            backgroundSize: '50px 50px'\n          }}></div>\n        </div>\n\n        {/* Floating particles */}\n        {Array.from({ length: 15 }).map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full opacity-30\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.3, 0.8, 0.3],\n              scale: [1, 1.5, 1],\n            }}\n            transition={{\n              duration: 4 + Math.random() * 3,\n              repeat: Infinity,\n              delay: Math.random() * 2,\n            }}\n          />\n        ))}\n\n        {/* Animated lines */}\n        {Array.from({ length: 3 }).map((_, i) => (\n          <motion.div\n            key={`line-${i}`}\n            className=\"absolute h-px bg-gradient-to-r from-transparent via-blue-400/30 to-transparent\"\n            style={{\n              top: `${20 + i * 30}%`,\n              left: '0%',\n              right: '0%',\n            }}\n            animate={{\n              scaleX: [0, 1, 0],\n              opacity: [0, 0.5, 0],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Infinity,\n              delay: i * 2,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Main content */}\n      <div className=\"relative z-10\">\n        <Navigation />\n        <HeroSection />\n        <AboutSection />\n        <ExperienceSection />\n        <SkillsSection />\n        <ProjectsSection />\n        <ContactSection />\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":4057},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"projects/ecommerce-platform/server/index.js":{"content":"const express = require('express');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst path = require('path');\n\n// Load environment variables\ndotenv.config();\n\nconst app = express();\nconst PORT = process.env.PORT || 5001;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.static(path.join(__dirname, '../client/build')));\n\n// Routes\napp.use('/api/auth', require('./routes/auth'));\napp.use('/api/products', require('./routes/products'));\napp.use('/api/cart', require('./routes/cart'));\napp.use('/api/orders', require('./routes/orders'));\napp.use('/api/payment', require('./routes/payment'));\n\n// Serve React app\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, '../client/build/index.html'));\n});\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ message: 'Something went wrong!' });\n});\n\napp.listen(PORT, () => {\n  console.log(`E-commerce server running on port ${PORT}`);\n});","size_bytes":1002},"projects/social-media-dashboard/server/index.js":{"content":"const express = require('express');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst session = require('express-session');\n\ndotenv.config();\n\nconst app = express();\nconst PORT = process.env.PORT || 5004;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(session({\n  secret: process.env.SESSION_SECRET || 'social-dashboard-secret',\n  resave: false,\n  saveUninitialized: false\n}));\n\n// Mock social media data\nconst mockAnalytics = {\n  overview: {\n    totalFollowers: 125430,\n    totalPosts: 892,\n    totalEngagement: 45672,\n    avgEngagementRate: 3.2\n  },\n  platforms: [\n    {\n      id: 'twitter',\n      name: 'Twitter',\n      followers: 45200,\n      posts: 324,\n      engagement: 15600,\n      engagementRate: 3.5,\n      color: '#1DA1F2'\n    },\n    {\n      id: 'instagram',\n      name: 'Instagram',\n      followers: 52100,\n      posts: 187,\n      engagement: 18900,\n      engagementRate: 3.6,\n      color: '#E4405F'\n    },\n    {\n      id: 'facebook',\n      name: 'Facebook',\n      followers: 28130,\n      posts: 234,\n      engagement: 8172,\n      engagementRate: 2.9,\n      color: '#1877F2'\n    },\n    {\n      id: 'linkedin',\n      name: 'LinkedIn',\n      followers: 0,\n      posts: 147,\n      engagement: 3000,\n      engagementRate: 2.1,\n      color: '#0A66C2'\n    }\n  ],\n  recentPosts: [\n    {\n      id: 1,\n      platform: 'twitter',\n      content: 'Just launched our new product! Check it out üöÄ',\n      timestamp: '2024-01-15T10:30:00Z',\n      likes: 245,\n      shares: 32,\n      comments: 18,\n      engagementRate: 4.2\n    },\n    {\n      id: 2,\n      platform: 'instagram',\n      content: 'Behind the scenes at our office today',\n      timestamp: '2024-01-15T08:15:00Z',\n      likes: 892,\n      shares: 67,\n      comments: 134,\n      engagementRate: 5.8\n    },\n    {\n      id: 3,\n      platform: 'facebook',\n      content: 'Weekly team update and achievements',\n      timestamp: '2024-01-14T16:45:00Z',\n      likes: 156,\n      shares: 23,\n      comments: 45,\n      engagementRate: 3.1\n    }\n  ],\n  scheduledPosts: [\n    {\n      id: 1,\n      platform: 'twitter',\n      content: 'Exciting announcement coming tomorrow!',\n      scheduledTime: '2024-01-16T09:00:00Z',\n      status: 'scheduled'\n    },\n    {\n      id: 2,\n      platform: 'instagram',\n      content: 'New blog post about industry trends',\n      scheduledTime: '2024-01-16T14:30:00Z',\n      status: 'scheduled'\n    }\n  ]\n};\n\n// Analytics endpoints\napp.get('/api/analytics/overview', (req, res) => {\n  res.json(mockAnalytics.overview);\n});\n\napp.get('/api/analytics/platforms', (req, res) => {\n  res.json(mockAnalytics.platforms);\n});\n\napp.get('/api/analytics/engagement-history', (req, res) => {\n  // Generate mock engagement data for the last 30 days\n  const engagementHistory = [];\n  const now = new Date();\n  \n  for (let i = 29; i >= 0; i--) {\n    const date = new Date(now);\n    date.setDate(date.getDate() - i);\n    \n    engagementHistory.push({\n      date: date.toISOString().split('T')[0],\n      twitter: Math.floor(Math.random() * 500) + 200,\n      instagram: Math.floor(Math.random() * 800) + 400,\n      facebook: Math.floor(Math.random() * 300) + 150,\n      linkedin: Math.floor(Math.random() * 200) + 100\n    });\n  }\n  \n  res.json(engagementHistory);\n});\n\n// Posts endpoints\napp.get('/api/posts/recent', (req, res) => {\n  res.json(mockAnalytics.recentPosts);\n});\n\napp.get('/api/posts/scheduled', (req, res) => {\n  res.json(mockAnalytics.scheduledPosts);\n});\n\napp.post('/api/posts/schedule', (req, res) => {\n  const { platform, content, scheduledTime } = req.body;\n  \n  const newPost = {\n    id: Date.now(),\n    platform,\n    content,\n    scheduledTime,\n    status: 'scheduled'\n  };\n  \n  mockAnalytics.scheduledPosts.push(newPost);\n  res.status(201).json(newPost);\n});\n\napp.put('/api/posts/:id', (req, res) => {\n  const { id } = req.params;\n  const postIndex = mockAnalytics.scheduledPosts.findIndex(post => post.id === parseInt(id));\n  \n  if (postIndex === -1) {\n    return res.status(404).json({ message: 'Post not found' });\n  }\n  \n  mockAnalytics.scheduledPosts[postIndex] = {\n    ...mockAnalytics.scheduledPosts[postIndex],\n    ...req.body\n  };\n  \n  res.json(mockAnalytics.scheduledPosts[postIndex]);\n});\n\napp.delete('/api/posts/:id', (req, res) => {\n  const { id } = req.params;\n  const postIndex = mockAnalytics.scheduledPosts.findIndex(post => post.id === parseInt(id));\n  \n  if (postIndex === -1) {\n    return res.status(404).json({ message: 'Post not found' });\n  }\n  \n  mockAnalytics.scheduledPosts.splice(postIndex, 1);\n  res.json({ message: 'Post deleted successfully' });\n});\n\n// Content suggestions endpoint\napp.get('/api/content/suggestions', (req, res) => {\n  const suggestions = [\n    {\n      id: 1,\n      type: 'trending-hashtag',\n      title: '#TechTuesday',\n      description: 'Share your latest tech insights',\n      platform: 'twitter'\n    },\n    {\n      id: 2,\n      type: 'content-idea',\n      title: 'Behind the Scenes',\n      description: 'Show your team in action',\n      platform: 'instagram'\n    },\n    {\n      id: 3,\n      type: 'industry-news',\n      title: 'Industry Report 2024',\n      description: 'Share insights from latest industry report',\n      platform: 'linkedin'\n    }\n  ];\n  \n  res.json(suggestions);\n});\n\n// Team endpoints\napp.get('/api/team/members', (req, res) => {\n  const teamMembers = [\n    {\n      id: 1,\n      name: 'Sarah Johnson',\n      role: 'Social Media Manager',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b798?w=100',\n      permissions: ['post', 'schedule', 'analytics']\n    },\n    {\n      id: 2,\n      name: 'Mike Chen',\n      role: 'Content Creator',\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100',\n      permissions: ['post', 'schedule']\n    },\n    {\n      id: 3,\n      name: 'Emily Davis',\n      role: 'Analytics Specialist',\n      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100',\n      permissions: ['analytics']\n    }\n  ];\n  \n  res.json(teamMembers);\n});\n\napp.listen(PORT, () => {\n  console.log(`Social Media Dashboard server running on port ${PORT}`);\n});","size_bytes":6123},"projects/task-management-app/server/index.js":{"content":"const express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\nconst path = require('path');\n\n// Load environment variables\ndotenv.config();\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketIo(server, {\n  cors: {\n    origin: process.env.CLIENT_URL || \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"]\n  }\n});\n\nconst PORT = process.env.PORT || 5002;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.static(path.join(__dirname, '../client/build')));\n\n// In-memory storage for demo (would be MongoDB in production)\nlet projects = [\n  {\n    id: '1',\n    name: 'Website Redesign',\n    description: 'Complete overhaul of company website',\n    createdAt: new Date('2024-01-15'),\n    teamMembers: ['user1', 'user2', 'user3']\n  },\n  {\n    id: '2',\n    name: 'Mobile App Development',\n    description: 'Build native mobile app for iOS and Android',\n    createdAt: new Date('2024-02-01'),\n    teamMembers: ['user1', 'user4']\n  }\n];\n\nlet tasks = [\n  {\n    id: '1',\n    title: 'Design Homepage Mockup',\n    description: 'Create wireframes and mockups for the new homepage',\n    status: 'todo',\n    priority: 'high',\n    assignee: 'user1',\n    projectId: '1',\n    createdAt: new Date('2024-01-16'),\n    dueDate: new Date('2024-02-15')\n  },\n  {\n    id: '2',\n    title: 'Implement Authentication',\n    description: 'Add user login and registration functionality',\n    status: 'in-progress',\n    priority: 'medium',\n    assignee: 'user2',\n    projectId: '1',\n    createdAt: new Date('2024-01-18'),\n    dueDate: new Date('2024-02-10')\n  },\n  {\n    id: '3',\n    title: 'Setup Development Environment',\n    description: 'Configure React Native development environment',\n    status: 'done',\n    priority: 'high',\n    assignee: 'user1',\n    projectId: '2',\n    createdAt: new Date('2024-02-02'),\n    dueDate: new Date('2024-02-05')\n  },\n  {\n    id: '4',\n    title: 'API Integration',\n    description: 'Connect mobile app to backend APIs',\n    status: 'todo',\n    priority: 'medium',\n    assignee: 'user4',\n    projectId: '2',\n    createdAt: new Date('2024-02-03'),\n    dueDate: new Date('2024-02-20')\n  }\n];\n\nlet users = [\n  { id: 'user1', name: 'Alice Johnson', email: 'alice@example.com', avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b798?w=100' },\n  { id: 'user2', name: 'Bob Smith', email: 'bob@example.com', avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100' },\n  { id: 'user3', name: 'Carol Davis', email: 'carol@example.com', avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100' },\n  { id: 'user4', name: 'David Wilson', email: 'david@example.com', avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100' }\n];\n\n// Routes\napp.get('/api/projects', (req, res) => {\n  res.json(projects);\n});\n\napp.get('/api/projects/:id', (req, res) => {\n  const project = projects.find(p => p.id === req.params.id);\n  if (!project) {\n    return res.status(404).json({ message: 'Project not found' });\n  }\n  res.json(project);\n});\n\napp.post('/api/projects', (req, res) => {\n  const newProject = {\n    id: Date.now().toString(),\n    ...req.body,\n    createdAt: new Date(),\n    teamMembers: req.body.teamMembers || []\n  };\n  projects.push(newProject);\n  \n  // Broadcast to all connected clients\n  io.emit('projectCreated', newProject);\n  res.status(201).json(newProject);\n});\n\napp.get('/api/tasks', (req, res) => {\n  const { projectId } = req.query;\n  let filteredTasks = tasks;\n  \n  if (projectId) {\n    filteredTasks = tasks.filter(task => task.projectId === projectId);\n  }\n  \n  res.json(filteredTasks);\n});\n\napp.post('/api/tasks', (req, res) => {\n  const newTask = {\n    id: Date.now().toString(),\n    ...req.body,\n    createdAt: new Date()\n  };\n  tasks.push(newTask);\n  \n  // Broadcast to all connected clients\n  io.emit('taskCreated', newTask);\n  res.status(201).json(newTask);\n});\n\napp.put('/api/tasks/:id', (req, res) => {\n  const taskIndex = tasks.findIndex(task => task.id === req.params.id);\n  if (taskIndex === -1) {\n    return res.status(404).json({ message: 'Task not found' });\n  }\n  \n  tasks[taskIndex] = { ...tasks[taskIndex], ...req.body };\n  \n  // Broadcast to all connected clients\n  io.emit('taskUpdated', tasks[taskIndex]);\n  res.json(tasks[taskIndex]);\n});\n\napp.delete('/api/tasks/:id', (req, res) => {\n  const taskIndex = tasks.findIndex(task => task.id === req.params.id);\n  if (taskIndex === -1) {\n    return res.status(404).json({ message: 'Task not found' });\n  }\n  \n  const deletedTask = tasks.splice(taskIndex, 1)[0];\n  \n  // Broadcast to all connected clients\n  io.emit('taskDeleted', deletedTask.id);\n  res.json({ message: 'Task deleted successfully' });\n});\n\napp.get('/api/users', (req, res) => {\n  res.json(users);\n});\n\n// Socket.io connection handling\nio.on('connection', (socket) => {\n  console.log('User connected:', socket.id);\n\n  // Join project room\n  socket.on('joinProject', (projectId) => {\n    socket.join(`project-${projectId}`);\n    console.log(`User ${socket.id} joined project ${projectId}`);\n  });\n\n  // Leave project room\n  socket.on('leaveProject', (projectId) => {\n    socket.leave(`project-${projectId}`);\n    console.log(`User ${socket.id} left project ${projectId}`);\n  });\n\n  // Real-time task status updates\n  socket.on('taskStatusChange', (data) => {\n    const { taskId, newStatus, projectId } = data;\n    const taskIndex = tasks.findIndex(task => task.id === taskId);\n    \n    if (taskIndex !== -1) {\n      tasks[taskIndex].status = newStatus;\n      \n      // Broadcast to project room\n      socket.to(`project-${projectId}`).emit('taskStatusChanged', {\n        taskId,\n        newStatus,\n        task: tasks[taskIndex]\n      });\n    }\n  });\n\n  // Real-time typing indicators\n  socket.on('userTyping', (data) => {\n    socket.to(`project-${data.projectId}`).emit('userTyping', data);\n  });\n\n  socket.on('userStoppedTyping', (data) => {\n    socket.to(`project-${data.projectId}`).emit('userStoppedTyping', data);\n  });\n\n  socket.on('disconnect', () => {\n    console.log('User disconnected:', socket.id);\n  });\n});\n\n// Serve React app\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, '../client/build/index.html'));\n});\n\nserver.listen(PORT, () => {\n  console.log(`Task Management server running on port ${PORT}`);\n});","size_bytes":6407},"projects/weather-forecast-app/server/index.js":{"content":"const express = require('express');\nconst cors = require('cors');\nconst axios = require('axios');\nconst NodeCache = require('node-cache');\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\nconst app = express();\nconst PORT = process.env.PORT || 5003;\nconst cache = new NodeCache({ stdTTL: 600 }); // Cache for 10 minutes\n\napp.use(cors());\napp.use(express.json());\n\n// Mock weather data (in production, would use OpenWeatherMap API)\nconst mockWeatherData = {\n  current: {\n    location: 'San Francisco, CA',\n    temperature: 22,\n    humidity: 65,\n    windSpeed: 12,\n    windDirection: 'NW',\n    pressure: 1013,\n    visibility: 10,\n    uvIndex: 6,\n    condition: 'Partly Cloudy',\n    icon: 'partly-cloudy-day',\n    feelsLike: 24\n  },\n  forecast: [\n    {\n      date: '2024-01-15',\n      day: 'Today',\n      high: 24,\n      low: 18,\n      condition: 'Partly Cloudy',\n      icon: 'partly-cloudy-day',\n      precipitation: 10,\n      humidity: 65,\n      windSpeed: 12\n    },\n    {\n      date: '2024-01-16',\n      day: 'Tomorrow',\n      high: 26,\n      low: 19,\n      condition: 'Sunny',\n      icon: 'sunny',\n      precipitation: 0,\n      humidity: 55,\n      windSpeed: 8\n    },\n    {\n      date: '2024-01-17',\n      day: 'Wednesday',\n      high: 23,\n      low: 17,\n      condition: 'Light Rain',\n      icon: 'rain',\n      precipitation: 80,\n      humidity: 85,\n      windSpeed: 15\n    },\n    {\n      date: '2024-01-18',\n      day: 'Thursday',\n      high: 21,\n      low: 15,\n      condition: 'Cloudy',\n      icon: 'cloudy',\n      precipitation: 20,\n      humidity: 70,\n      windSpeed: 10\n    },\n    {\n      date: '2024-01-19',\n      day: 'Friday',\n      high: 25,\n      low: 18,\n      condition: 'Partly Cloudy',\n      icon: 'partly-cloudy-day',\n      precipitation: 5,\n      humidity: 60,\n      windSpeed: 11\n    },\n    {\n      date: '2024-01-20',\n      day: 'Saturday',\n      high: 27,\n      low: 20,\n      condition: 'Sunny',\n      icon: 'sunny',\n      precipitation: 0,\n      humidity: 50,\n      windSpeed: 7\n    },\n    {\n      date: '2024-01-21',\n      day: 'Sunday',\n      high: 24,\n      low: 18,\n      condition: 'Partly Cloudy',\n      icon: 'partly-cloudy-day',\n      precipitation: 15,\n      humidity: 65,\n      windSpeed: 9\n    }\n  ],\n  hourly: [\n    { time: '12:00', temperature: 22, condition: 'Partly Cloudy', icon: 'partly-cloudy-day' },\n    { time: '13:00', temperature: 23, condition: 'Partly Cloudy', icon: 'partly-cloudy-day' },\n    { time: '14:00', temperature: 24, condition: 'Sunny', icon: 'sunny' },\n    { time: '15:00', temperature: 24, condition: 'Sunny', icon: 'sunny' },\n    { time: '16:00', temperature: 23, condition: 'Partly Cloudy', icon: 'partly-cloudy-day' },\n    { time: '17:00', temperature: 22, condition: 'Cloudy', icon: 'cloudy' },\n    { time: '18:00', temperature: 21, condition: 'Cloudy', icon: 'cloudy' },\n    { time: '19:00', temperature: 20, condition: 'Cloudy', icon: 'cloudy' }\n  ]\n};\n\n// Current weather endpoint\napp.get('/api/weather/current/:location', (req, res) => {\n  const { location } = req.params;\n  const cacheKey = `current-${location}`;\n  \n  let cachedData = cache.get(cacheKey);\n  if (cachedData) {\n    return res.json(cachedData);\n  }\n\n  // Simulate different weather for different locations\n  const weatherData = {\n    ...mockWeatherData.current,\n    location: location.replace('-', ', '),\n    temperature: Math.floor(Math.random() * 20) + 15, // 15-35¬∞C\n    humidity: Math.floor(Math.random() * 40) + 40, // 40-80%\n    windSpeed: Math.floor(Math.random() * 20) + 5, // 5-25 km/h\n  };\n\n  cache.set(cacheKey, weatherData);\n  res.json(weatherData);\n});\n\n// Forecast endpoint\napp.get('/api/weather/forecast/:location', (req, res) => {\n  const { location } = req.params;\n  const cacheKey = `forecast-${location}`;\n  \n  let cachedData = cache.get(cacheKey);\n  if (cachedData) {\n    return res.json(cachedData);\n  }\n\n  // Generate varied forecast data\n  const forecastData = mockWeatherData.forecast.map((day, index) => ({\n    ...day,\n    high: Math.floor(Math.random() * 15) + 20, // 20-35¬∞C\n    low: Math.floor(Math.random() * 10) + 10,  // 10-20¬∞C\n    precipitation: Math.floor(Math.random() * 100),\n  }));\n\n  cache.set(cacheKey, forecastData);\n  res.json(forecastData);\n});\n\n// Hourly forecast endpoint\napp.get('/api/weather/hourly/:location', (req, res) => {\n  const { location } = req.params;\n  const cacheKey = `hourly-${location}`;\n  \n  let cachedData = cache.get(cacheKey);\n  if (cachedData) {\n    return res.json(cachedData);\n  }\n\n  const hourlyData = mockWeatherData.hourly.map(hour => ({\n    ...hour,\n    temperature: Math.floor(Math.random() * 10) + 18, // 18-28¬∞C\n  }));\n\n  cache.set(cacheKey, hourlyData);\n  res.json(hourlyData);\n});\n\n// Weather alerts endpoint\napp.get('/api/weather/alerts/:location', (req, res) => {\n  const alerts = [\n    {\n      id: '1',\n      type: 'warning',\n      title: 'High UV Index',\n      description: 'UV index will reach dangerous levels between 11 AM and 3 PM',\n      severity: 'moderate',\n      startTime: '2024-01-15T11:00:00Z',\n      endTime: '2024-01-15T15:00:00Z'\n    }\n  ];\n  \n  res.json(alerts);\n});\n\n// Search cities endpoint\napp.get('/api/cities/search', (req, res) => {\n  const { q } = req.query;\n  \n  const cities = [\n    { id: 1, name: 'San Francisco', country: 'US', state: 'California' },\n    { id: 2, name: 'New York', country: 'US', state: 'New York' },\n    { id: 3, name: 'London', country: 'UK', state: '' },\n    { id: 4, name: 'Paris', country: 'FR', state: '' },\n    { id: 5, name: 'Tokyo', country: 'JP', state: '' },\n    { id: 6, name: 'Sydney', country: 'AU', state: 'New South Wales' },\n    { id: 7, name: 'Toronto', country: 'CA', state: 'Ontario' },\n    { id: 8, name: 'Berlin', country: 'DE', state: '' }\n  ];\n\n  const filteredCities = cities.filter(city => \n    city.name.toLowerCase().includes(q.toLowerCase())\n  );\n\n  res.json(filteredCities);\n});\n\napp.listen(PORT, () => {\n  console.log(`Weather Forecast server running on port ${PORT}`);\n});","size_bytes":5973},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"projects/ecommerce-platform/client/src/App.js":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\n// Components\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Pages\nimport Home from './pages/Home';\nimport Products from './pages/Products';\nimport ProductDetail from './pages/ProductDetail';\nimport Cart from './pages/Cart';\nimport Checkout from './pages/Checkout';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\n\n// Context\nimport { AuthProvider } from './context/AuthContext';\nimport { CartProvider } from './context/CartContext';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <CartProvider>\n          <Router>\n            <div className=\"App min-h-screen flex flex-col\">\n              <Header />\n              <main className=\"flex-grow\">\n                <Routes>\n                  <Route path=\"/\" element={<Home />} />\n                  <Route path=\"/products\" element={<Products />} />\n                  <Route path=\"/products/:id\" element={<ProductDetail />} />\n                  <Route path=\"/cart\" element={<Cart />} />\n                  <Route path=\"/checkout\" element={<Checkout />} />\n                  <Route path=\"/login\" element={<Login />} />\n                  <Route path=\"/register\" element={<Register />} />\n                  <Route path=\"/profile\" element={<Profile />} />\n                </Routes>\n              </main>\n              <Footer />\n            </div>\n          </Router>\n        </CartProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":1925},"projects/ecommerce-platform/client/src/index.css":{"content":"/* Reset and Base Styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  line-height: 1.6;\n  color: #333;\n  background-color: #f8f9fa;\n}\n\n/* Container */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n/* Header Styles */\n.header {\n  background: #fff;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0;\n}\n\n.logo {\n  font-size: 1.8rem;\n  font-weight: bold;\n  color: #2563eb;\n  text-decoration: none;\n}\n\n.nav {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #374151;\n  font-weight: 500;\n  transition: color 0.3s;\n}\n\n.nav-link:hover {\n  color: #2563eb;\n}\n\n.cart-badge {\n  background: #dc2626;\n  color: white;\n  border-radius: 50%;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.75rem;\n  margin-left: 0.5rem;\n}\n\n.auth-buttons {\n  display: flex;\n  gap: 1rem;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.375rem;\n  cursor: pointer;\n  font-size: 0.875rem;\n  font-weight: 500;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n  transition: all 0.3s;\n}\n\n.btn-primary {\n  background: #2563eb;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #1d4ed8;\n}\n\n.btn-outline {\n  background: transparent;\n  color: #2563eb;\n  border: 1px solid #2563eb;\n}\n\n.btn-outline:hover {\n  background: #2563eb;\n  color: white;\n}\n\n.btn-danger {\n  background: #dc2626;\n  color: white;\n}\n\n.btn-danger:hover {\n  background: #b91c1c;\n}\n\n.btn-small {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.75rem;\n}\n\n/* Hero Section */\n.hero {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 4rem 0;\n  text-align: center;\n}\n\n.hero h1 {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  font-weight: 700;\n}\n\n.hero p {\n  font-size: 1.25rem;\n  margin-bottom: 2rem;\n  opacity: 0.9;\n}\n\n/* Section Styles */\n.section {\n  padding: 3rem 0;\n}\n\n.section-title {\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 2rem;\n  color: #1f2937;\n}\n\n/* Grid Layouts */\n.grid {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.grid-2 {\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n}\n\n.grid-3 {\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n}\n\n.grid-4 {\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n}\n\n/* Cards */\n.card {\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  overflow: hidden;\n  transition: transform 0.3s, box-shadow 0.3s;\n}\n\n.card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.card-image {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.card-content {\n  padding: 1rem;\n}\n\n.card-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.card-price {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #059669;\n  margin-bottom: 0.5rem;\n}\n\n.card-description {\n  color: #6b7280;\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n}\n\n.card-stock {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-bottom: 1rem;\n}\n\n.stock-high {\n  color: #059669;\n}\n\n.stock-low {\n  color: #dc2626;\n}\n\n/* Forms */\n.form {\n  background: white;\n  padding: 2rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  max-width: 400px;\n  margin: 2rem auto;\n}\n\n.form-wide {\n  max-width: 800px;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #374151;\n}\n\n.form-input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\n}\n\n.form-textarea {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  resize: vertical;\n  min-height: 100px;\n}\n\n.form-error {\n  color: #dc2626;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n/* Cart Styles */\n.cart-container {\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  padding: 2rem;\n  margin: 2rem 0;\n}\n\n.cart-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.cart-item:last-child {\n  border-bottom: none;\n}\n\n.cart-item-image {\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  border-radius: 0.375rem;\n  margin-right: 1rem;\n}\n\n.cart-item-details {\n  flex: 1;\n}\n\n.cart-item-name {\n  font-weight: 600;\n  margin-bottom: 0.25rem;\n}\n\n.cart-item-price {\n  color: #059669;\n  font-weight: 600;\n}\n\n.quantity-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem 0;\n}\n\n.quantity-btn {\n  width: 32px;\n  height: 32px;\n  border: 1px solid #d1d5db;\n  background: white;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.quantity-btn:hover {\n  background: #f3f4f6;\n}\n\n.quantity-input {\n  width: 60px;\n  text-align: center;\n  padding: 0.25rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.25rem;\n}\n\n.cart-summary {\n  border-top: 2px solid #e5e7eb;\n  padding-top: 1rem;\n  margin-top: 1rem;\n}\n\n.cart-total {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin-bottom: 1rem;\n}\n\n.empty-cart {\n  text-align: center;\n  padding: 3rem;\n  color: #6b7280;\n}\n\n/* Product Filters */\n.filters {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  margin-bottom: 2rem;\n}\n\n.filter-row {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n  align-items: end;\n}\n\n.filter-group {\n  margin-bottom: 1rem;\n  flex: 1;\n  min-width: 200px;\n}\n\n.filter-title {\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.search-input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  margin-bottom: 1rem;\n}\n\n.select {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  background: white;\n}\n\n/* Product Detail */\n.product-detail {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 3rem;\n  margin: 2rem 0;\n}\n\n.product-image-large {\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 0.5rem;\n}\n\n.product-info h1 {\n  font-size: 2rem;\n  font-weight: 700;\n  margin-bottom: 1rem;\n}\n\n.product-price-large {\n  font-size: 1.875rem;\n  font-weight: 700;\n  color: #059669;\n  margin-bottom: 1rem;\n}\n\n.product-description {\n  color: #6b7280;\n  margin-bottom: 2rem;\n  line-height: 1.8;\n}\n\n/* Footer */\n.footer {\n  background: #1f2937;\n  color: white;\n  padding: 2rem 0;\n  margin-top: 4rem;\n}\n\n.footer-content {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n}\n\n.footer-section h3 {\n  margin-bottom: 1rem;\n  font-size: 1.125rem;\n}\n\n.footer-section ul {\n  list-style: none;\n}\n\n.footer-section ul li {\n  margin-bottom: 0.5rem;\n}\n\n.footer-section ul li a {\n  color: #d1d5db;\n  text-decoration: none;\n}\n\n.footer-section ul li a:hover {\n  color: white;\n}\n\n.footer-bottom {\n  border-top: 1px solid #374151;\n  margin-top: 2rem;\n  padding-top: 1rem;\n  text-align: center;\n  color: #9ca3af;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .header-content {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .hero h1 {\n    font-size: 2rem;\n  }\n  \n  .hero p {\n    font-size: 1rem;\n  }\n  \n  .cart-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n  \n  .cart-item-image {\n    width: 100%;\n    height: 200px;\n    margin-right: 0;\n  }\n  \n  .product-detail {\n    grid-template-columns: 1fr;\n    gap: 2rem;\n  }\n  \n  .filter-row {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .filter-group {\n    min-width: auto;\n  }\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f4f6;\n  border-top: 4px solid #2563eb;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Alerts */\n.alert {\n  padding: 1rem;\n  border-radius: 0.375rem;\n  margin-bottom: 1rem;\n}\n\n.alert-success {\n  background: #d1fae5;\n  color: #065f46;\n  border: 1px solid #a7f3d0;\n}\n\n.alert-error {\n  background: #fee2e2;\n  color: #991b1b;\n  border: 1px solid #fecaca;\n}\n\n.alert-info {\n  background: #dbeafe;\n  color: #1e40af;\n  border: 1px solid #93c5fd;\n}\n\n/* Utilities */\n.text-center { text-align: center; }\n.text-left { text-align: left; }\n.text-right { text-align: right; }\n\n.mb-1 { margin-bottom: 0.25rem; }\n.mb-2 { margin-bottom: 0.5rem; }\n.mb-4 { margin-bottom: 1rem; }\n.mb-8 { margin-bottom: 2rem; }\n\n.mt-1 { margin-top: 0.25rem; }\n.mt-2 { margin-top: 0.5rem; }\n.mt-4 { margin-top: 1rem; }\n.mt-8 { margin-top: 2rem; }\n\n.p-4 { padding: 1rem; }\n.p-8 { padding: 2rem; }\n\n.hidden { display: none; }\n.block { display: block; }\n.flex { display: flex; }\n.inline { display: inline; }\n\n.justify-center { justify-content: center; }\n.justify-between { justify-content: space-between; }\n.items-center { align-items: center; }\n\n.w-full { width: 100%; }\n.h-full { height: 100%; }\n\n/* Animations */\n.fade-in {\n  animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.slide-in-left {\n  animation: slideInLeft 0.5s ease-out;\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n.scale-hover:hover {\n  transform: scale(1.05);\n  transition: transform 0.2s ease-in-out;\n}","size_bytes":10148},"projects/ecommerce-platform/client/src/index.js":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);","size_bytes":253},"projects/ecommerce-platform/server/routes/auth.js":{"content":"const express = require('express');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst router = express.Router();\n\n// In-memory user storage (would be database in production)\nlet users = [\n  {\n    id: 1,\n    email: 'demo@example.com',\n    password: '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // 'password'\n    name: 'Demo User',\n    role: 'customer'\n  },\n  {\n    id: 2,\n    email: 'admin@example.com',\n    password: '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // 'password'\n    name: 'Admin User',\n    role: 'admin'\n  }\n];\n\n// Register\nrouter.post('/register', async (req, res) => {\n  try {\n    const { email, password, name } = req.body;\n\n    // Check if user exists\n    const existingUser = users.find(u => u.email === email);\n    if (existingUser) {\n      return res.status(400).json({ message: 'User already exists' });\n    }\n\n    // Hash password\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create user\n    const newUser = {\n      id: users.length + 1,\n      email,\n      password: hashedPassword,\n      name,\n      role: 'customer'\n    };\n\n    users.push(newUser);\n\n    // Generate token\n    const token = jwt.sign(\n      { userId: newUser.id, email: newUser.email },\n      process.env.JWT_SECRET || 'your-secret-key',\n      { expiresIn: '24h' }\n    );\n\n    res.status(201).json({\n      message: 'User created successfully',\n      token,\n      user: {\n        id: newUser.id,\n        email: newUser.email,\n        name: newUser.name,\n        role: newUser.role\n      }\n    });\n  } catch (error) {\n    res.status(500).json({ message: 'Server error' });\n  }\n});\n\n// Login\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n\n    // Find user\n    const user = users.find(u => u.email === email);\n    if (!user) {\n      return res.status(400).json({ message: 'Invalid credentials' });\n    }\n\n    // Check password\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(400).json({ message: 'Invalid credentials' });\n    }\n\n    // Generate token\n    const token = jwt.sign(\n      { userId: user.id, email: user.email },\n      process.env.JWT_SECRET || 'your-secret-key',\n      { expiresIn: '24h' }\n    );\n\n    res.json({\n      message: 'Login successful',\n      token,\n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        role: user.role\n      }\n    });\n  } catch (error) {\n    res.status(500).json({ message: 'Server error' });\n  }\n});\n\nmodule.exports = router;","size_bytes":2596},"projects/ecommerce-platform/server/routes/cart.js":{"content":"const express = require('express');\nconst router = express.Router();\n\n// In-memory cart storage (would be database in production)\nlet carts = {};\n\n// Get cart for user\nrouter.get('/:userId', (req, res) => {\n  const userId = req.params.userId;\n  const cart = carts[userId] || { items: [], total: 0 };\n  res.json(cart);\n});\n\n// Add item to cart\nrouter.post('/:userId/add', (req, res) => {\n  const userId = req.params.userId;\n  const { productId, quantity, price, name, image } = req.body;\n\n  if (!carts[userId]) {\n    carts[userId] = { items: [], total: 0 };\n  }\n\n  const existingItem = carts[userId].items.find(item => item.productId === productId);\n\n  if (existingItem) {\n    existingItem.quantity += quantity;\n  } else {\n    carts[userId].items.push({\n      productId,\n      quantity,\n      price,\n      name,\n      image,\n      subtotal: price * quantity\n    });\n  }\n\n  // Recalculate total\n  carts[userId].total = carts[userId].items.reduce((total, item) => {\n    item.subtotal = item.price * item.quantity;\n    return total + item.subtotal;\n  }, 0);\n\n  res.json(carts[userId]);\n});\n\n// Update item quantity\nrouter.put('/:userId/update', (req, res) => {\n  const userId = req.params.userId;\n  const { productId, quantity } = req.body;\n\n  if (!carts[userId]) {\n    return res.status(404).json({ message: 'Cart not found' });\n  }\n\n  const item = carts[userId].items.find(item => item.productId === productId);\n  if (!item) {\n    return res.status(404).json({ message: 'Item not found in cart' });\n  }\n\n  if (quantity <= 0) {\n    carts[userId].items = carts[userId].items.filter(item => item.productId !== productId);\n  } else {\n    item.quantity = quantity;\n    item.subtotal = item.price * quantity;\n  }\n\n  // Recalculate total\n  carts[userId].total = carts[userId].items.reduce((total, item) => total + item.subtotal, 0);\n\n  res.json(carts[userId]);\n});\n\n// Remove item from cart\nrouter.delete('/:userId/remove/:productId', (req, res) => {\n  const userId = req.params.userId;\n  const productId = parseInt(req.params.productId);\n\n  if (!carts[userId]) {\n    return res.status(404).json({ message: 'Cart not found' });\n  }\n\n  carts[userId].items = carts[userId].items.filter(item => item.productId !== productId);\n\n  // Recalculate total\n  carts[userId].total = carts[userId].items.reduce((total, item) => total + item.subtotal, 0);\n\n  res.json(carts[userId]);\n});\n\n// Clear cart\nrouter.delete('/:userId/clear', (req, res) => {\n  const userId = req.params.userId;\n  carts[userId] = { items: [], total: 0 };\n  res.json(carts[userId]);\n});\n\nmodule.exports = router;","size_bytes":2563},"projects/ecommerce-platform/server/routes/orders.js":{"content":"const express = require('express');\nconst router = express.Router();\n\n// In-memory order storage (would be database in production)\nlet orders = [];\nlet orderIdCounter = 1;\n\n// Create order\nrouter.post('/', (req, res) => {\n  const { userId, items, total, shippingAddress, billingAddress } = req.body;\n\n  const newOrder = {\n    id: orderIdCounter++,\n    userId,\n    items,\n    total,\n    shippingAddress,\n    billingAddress,\n    status: 'pending',\n    createdAt: new Date(),\n    updatedAt: new Date()\n  };\n\n  orders.push(newOrder);\n  res.status(201).json(newOrder);\n});\n\n// Get orders for user\nrouter.get('/user/:userId', (req, res) => {\n  const userId = parseInt(req.params.userId);\n  const userOrders = orders.filter(order => order.userId === userId);\n  res.json(userOrders);\n});\n\n// Get single order\nrouter.get('/:orderId', (req, res) => {\n  const orderId = parseInt(req.params.orderId);\n  const order = orders.find(o => o.id === orderId);\n  \n  if (!order) {\n    return res.status(404).json({ message: 'Order not found' });\n  }\n  \n  res.json(order);\n});\n\n// Update order status\nrouter.put('/:orderId/status', (req, res) => {\n  const orderId = parseInt(req.params.orderId);\n  const { status } = req.body;\n  \n  const order = orders.find(o => o.id === orderId);\n  if (!order) {\n    return res.status(404).json({ message: 'Order not found' });\n  }\n  \n  order.status = status;\n  order.updatedAt = new Date();\n  \n  res.json(order);\n});\n\n// Get all orders (admin)\nrouter.get('/', (req, res) => {\n  res.json(orders);\n});\n\nmodule.exports = router;","size_bytes":1539},"projects/ecommerce-platform/server/routes/payment.js":{"content":"const express = require('express');\nconst router = express.Router();\n\n// Mock Stripe integration (would use real Stripe in production)\nconst mockStripePayment = (amount, currency = 'usd') => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        id: 'pi_' + Math.random().toString(36).substr(2, 9),\n        amount: amount * 100, // Stripe uses cents\n        currency,\n        status: 'succeeded',\n        created: Math.floor(Date.now() / 1000)\n      });\n    }, 1000);\n  });\n};\n\n// Create payment intent\nrouter.post('/create-payment-intent', async (req, res) => {\n  try {\n    const { amount, currency = 'usd' } = req.body;\n\n    if (!amount || amount <= 0) {\n      return res.status(400).json({ error: 'Invalid amount' });\n    }\n\n    // Mock payment intent creation\n    const paymentIntent = await mockStripePayment(amount, currency);\n\n    res.json({\n      clientSecret: `${paymentIntent.id}_secret_mock`,\n      paymentIntent\n    });\n  } catch (error) {\n    res.status(500).json({ error: 'Payment processing failed' });\n  }\n});\n\n// Confirm payment\nrouter.post('/confirm-payment', async (req, res) => {\n  try {\n    const { paymentIntentId, orderId } = req.body;\n\n    // Mock payment confirmation\n    const confirmedPayment = {\n      id: paymentIntentId,\n      status: 'succeeded',\n      amount_received: Math.floor(Math.random() * 10000) + 1000,\n      currency: 'usd',\n      created: Math.floor(Date.now() / 1000)\n    };\n\n    res.json({\n      success: true,\n      payment: confirmedPayment,\n      message: 'Payment processed successfully'\n    });\n  } catch (error) {\n    res.status(500).json({ error: 'Payment confirmation failed' });\n  }\n});\n\n// Get payment status\nrouter.get('/status/:paymentId', (req, res) => {\n  const paymentId = req.params.paymentId;\n  \n  // Mock payment status\n  res.json({\n    id: paymentId,\n    status: 'succeeded',\n    amount: Math.floor(Math.random() * 10000) + 1000,\n    currency: 'usd',\n    created: Math.floor(Date.now() / 1000)\n  });\n});\n\nmodule.exports = router;","size_bytes":2022},"projects/ecommerce-platform/server/routes/products.js":{"content":"const express = require('express');\nconst router = express.Router();\n\n// In-memory product storage (would be database in production)\nlet products = [\n  {\n    id: 1,\n    name: \"Wireless Bluetooth Headphones\",\n    description: \"High-quality wireless headphones with active noise cancellation, 30-hour battery life, and premium sound quality.\",\n    price: 129.99,\n    category: \"Electronics\",\n    image: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400\",\n    stock: 50,\n    featured: true,\n    brand: \"AudioTech\",\n    features: [\"Active Noise Cancellation\", \"30hr Battery\", \"Quick Charge\", \"Premium Sound\"]\n  },\n  {\n    id: 2,\n    name: \"Smart Fitness Watch\",\n    description: \"Track your fitness goals with this advanced smartwatch featuring heart rate monitoring, GPS, and water resistance.\",\n    price: 249.99,\n    category: \"Electronics\",\n    image: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400\",\n    stock: 30,\n    featured: true,\n    brand: \"FitTech\",\n    features: [\"Heart Rate Monitor\", \"GPS Tracking\", \"Water Resistant\", \"Sleep Tracking\"]\n  },\n  {\n    id: 3,\n    name: \"Organic Cotton T-Shirt\",\n    description: \"Comfortable and sustainable organic cotton t-shirt made from 100% certified organic cotton. Perfect for everyday wear.\",\n    price: 29.99,\n    category: \"Clothing\",\n    image: \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=400\",\n    stock: 100,\n    featured: false,\n    brand: \"EcoWear\",\n    features: [\"100% Organic Cotton\", \"Sustainable\", \"Comfortable Fit\", \"Machine Washable\"]\n  },\n  {\n    id: 4,\n    name: \"Premium Coffee Beans\",\n    description: \"Freshly roasted premium coffee beans from Colombia. Single-origin, medium roast with notes of chocolate and caramel.\",\n    price: 19.99,\n    category: \"Food\",\n    image: \"https://images.unsplash.com/photo-1559056199-641a0ac8b55e?w=400\",\n    stock: 75,\n    featured: true,\n    brand: \"BrewMaster\",\n    features: [\"Single Origin\", \"Medium Roast\", \"Fair Trade\", \"Fresh Roasted\"]\n  },\n  {\n    id: 5,\n    name: \"Yoga Mat Pro\",\n    description: \"Professional-grade non-slip yoga mat with superior grip and cushioning. Perfect for all yoga styles and intensities.\",\n    price: 49.99,\n    category: \"Sports\",\n    image: \"https://images.unsplash.com/photo-1506629905607-3f0696b95c2b?w=400\",\n    stock: 40,\n    featured: false,\n    brand: \"YogaPro\",\n    features: [\"Non-Slip Surface\", \"Extra Cushioning\", \"Eco-Friendly\", \"Easy Clean\"]\n  },\n  {\n    id: 6,\n    name: \"Wireless Gaming Mouse\",\n    description: \"High-precision wireless gaming mouse with RGB lighting and customizable buttons for professional gaming.\",\n    price: 79.99,\n    category: \"Electronics\",\n    image: \"https://images.unsplash.com/photo-1527814050087-3793815479db?w=400\",\n    stock: 60,\n    featured: false,\n    brand: \"GameTech\",\n    features: [\"High DPI\", \"RGB Lighting\", \"Wireless\", \"Customizable Buttons\"]\n  },\n  {\n    id: 7,\n    name: \"Denim Jacket\",\n    description: \"Classic denim jacket made from premium denim fabric. Timeless style that never goes out of fashion.\",\n    price: 89.99,\n    category: \"Clothing\",\n    image: \"https://images.unsplash.com/photo-1544966503-7cc5ac882be1?w=400\",\n    stock: 45,\n    featured: true,\n    brand: \"DenimCo\",\n    features: [\"Premium Denim\", \"Classic Fit\", \"Multiple Pockets\", \"Durable\"]\n  },\n  {\n    id: 8,\n    name: \"Protein Powder\",\n    description: \"High-quality whey protein powder with 25g protein per serving. Perfect for post-workout recovery.\",\n    price: 39.99,\n    category: \"Food\",\n    image: \"https://images.unsplash.com/photo-1544717302-de2939b7ef71?w=400\",\n    stock: 80,\n    featured: false,\n    brand: \"NutriPro\",\n    features: [\"25g Protein\", \"Low Sugar\", \"Easy Mixing\", \"Great Taste\"]\n  },\n  {\n    id: 9,\n    name: \"Running Shoes\",\n    description: \"Lightweight running shoes with advanced cushioning technology for maximum comfort during your runs.\",\n    price: 119.99,\n    category: \"Sports\",\n    image: \"https://images.unsplash.com/photo-1542291026-7eec264c27ff?w=400\",\n    stock: 35,\n    featured: true,\n    brand: \"RunFast\",\n    features: [\"Lightweight\", \"Cushioned Sole\", \"Breathable\", \"Durable\"]\n  },\n  {\n    id: 10,\n    name: \"Smartphone Case\",\n    description: \"Protective smartphone case with shock absorption and wireless charging compatibility.\",\n    price: 24.99,\n    category: \"Electronics\",\n    image: \"https://images.unsplash.com/photo-1556656793-08538906a9f8?w=400\",\n    stock: 120,\n    featured: false,\n    brand: \"ProtectTech\",\n    features: [\"Shock Absorption\", \"Wireless Charging\", \"Slim Design\", \"Easy Access\"]\n  }\n];\n\n// Get all products\nrouter.get('/', (req, res) => {\n  const { category, featured, search, minPrice, maxPrice, sortBy } = req.query;\n  let filteredProducts = [...products];\n\n  // Filter by category\n  if (category && category !== 'all') {\n    filteredProducts = filteredProducts.filter(p => p.category.toLowerCase() === category.toLowerCase());\n  }\n\n  // Filter by featured\n  if (featured === 'true') {\n    filteredProducts = filteredProducts.filter(p => p.featured);\n  }\n\n  // Filter by search\n  if (search) {\n    filteredProducts = filteredProducts.filter(p => \n      p.name.toLowerCase().includes(search.toLowerCase()) ||\n      p.description.toLowerCase().includes(search.toLowerCase()) ||\n      p.category.toLowerCase().includes(search.toLowerCase())\n    );\n  }\n\n  // Filter by price range\n  if (minPrice) {\n    filteredProducts = filteredProducts.filter(p => p.price >= parseFloat(minPrice));\n  }\n  if (maxPrice) {\n    filteredProducts = filteredProducts.filter(p => p.price <= parseFloat(maxPrice));\n  }\n\n  // Sort products\n  if (sortBy) {\n    switch (sortBy) {\n      case 'price_low':\n        filteredProducts.sort((a, b) => a.price - b.price);\n        break;\n      case 'price_high':\n        filteredProducts.sort((a, b) => b.price - a.price);\n        break;\n      case 'name':\n      default:\n        filteredProducts.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n    }\n  }\n\n  res.json(filteredProducts);\n});\n\n// Get single product\nrouter.get('/:id', (req, res) => {\n  const product = products.find(p => p.id === parseInt(req.params.id));\n  if (!product) {\n    return res.status(404).json({ message: 'Product not found' });\n  }\n  res.json(product);\n});\n\n// Get categories\nrouter.get('/categories', (req, res) => {\n  const categories = [...new Set(products.map(p => p.category))].map((name, index) => ({\n    id: index + 1,\n    name\n  }));\n  res.json(categories);\n});\n\nmodule.exports = router;","size_bytes":6508},"projects/task-management-app/client/src/App.js":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { Toaster } from 'react-hot-toast';\n\n// Components\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\n\n// Pages\nimport Dashboard from './pages/Dashboard';\nimport ProjectBoard from './pages/ProjectBoard';\nimport TaskDetail from './pages/TaskDetail';\nimport TeamMembers from './pages/TeamMembers';\nimport Settings from './pages/Settings';\n\n// Context\nimport { SocketProvider } from './context/SocketContext';\nimport { AuthProvider } from './context/AuthContext';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <SocketProvider>\n          <Router>\n            <div className=\"App min-h-screen bg-gray-50 flex\">\n              <Toaster \n                position=\"top-right\"\n                toastOptions={{\n                  duration: 4000,\n                  style: {\n                    background: '#363636',\n                    color: '#fff',\n                  },\n                }}\n              />\n              \n              <Sidebar />\n              \n              <div className=\"flex-1 flex flex-col\">\n                <Header />\n                \n                <main className=\"flex-1 overflow-hidden\">\n                  <Routes>\n                    <Route path=\"/\" element={<Dashboard />} />\n                    <Route path=\"/project/:projectId\" element={<ProjectBoard />} />\n                    <Route path=\"/task/:taskId\" element={<TaskDetail />} />\n                    <Route path=\"/team\" element={<TeamMembers />} />\n                    <Route path=\"/settings\" element={<Settings />} />\n                  </Routes>\n                </main>\n              </div>\n            </div>\n          </Router>\n        </SocketProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":2172},"projects/task-management-app/client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --primary-color: #3b82f6;\n  --secondary-color: #1f2937;\n  --accent-color: #10b981;\n  --background-color: #f8fafc;\n  --text-color: #1f2937;\n  --border-color: #e2e8f0;\n  --card-color: #ffffff;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: var(--background-color);\n  color: var(--text-color);\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f5f9;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n\n/* Drag and drop styles */\n.droppable-area {\n  min-height: 100px;\n  transition: all 0.2s ease;\n}\n\n.droppable-area.drag-over {\n  background-color: #dbeafe;\n  border: 2px dashed #3b82f6;\n}\n\n.draggable-item {\n  cursor: grab;\n  transition: all 0.2s ease;\n}\n\n.draggable-item:active {\n  cursor: grabbing;\n}\n\n.draggable-item.dragging {\n  opacity: 0.5;\n  transform: rotate(5deg);\n}\n\n/* Animation classes */\n.fade-in {\n  animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.slide-in {\n  animation: slideIn 0.4s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n.bounce-in {\n  animation: bounceIn 0.6s ease-out;\n}\n\n@keyframes bounceIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  70% {\n    transform: scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* Status colors */\n.status-todo {\n  background-color: #fef3c7;\n  color: #92400e;\n  border-color: #f59e0b;\n}\n\n.status-in-progress {\n  background-color: #dbeafe;\n  color: #1e40af;\n  border-color: #3b82f6;\n}\n\n.status-done {\n  background-color: #d1fae5;\n  color: #065f46;\n  border-color: #10b981;\n}\n\n/* Priority colors */\n.priority-low {\n  border-left: 4px solid #10b981;\n}\n\n.priority-medium {\n  border-left: 4px solid #f59e0b;\n}\n\n.priority-high {\n  border-left: 4px solid #ef4444;\n}\n\n/* Real-time indicators */\n.typing-indicator {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.typing-dot {\n  width: 4px;\n  height: 4px;\n  background-color: #3b82f6;\n  border-radius: 50%;\n  animation: typingAnimation 1.4s infinite ease-in-out;\n}\n\n.typing-dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typingAnimation {\n  0%, 80%, 100% {\n    transform: scale(0);\n    opacity: 0.5;\n  }\n  40% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n/* Task card hover effects */\n.task-card {\n  transition: all 0.2s ease;\n}\n\n.task-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n/* Online status indicator */\n.online-indicator {\n  position: relative;\n}\n\n.online-indicator::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 12px;\n  height: 12px;\n  background-color: #10b981;\n  border: 2px solid white;\n  border-radius: 50%;\n}\n\n/* Loading states */\n.skeleton {\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n  background-size: 200% 100%;\n  animation: loading 1.5s infinite;\n}\n\n@keyframes loading {\n  0% {\n    background-position: 200% 0;\n  }\n  100% {\n    background-position: -200% 0;\n  }\n}","size_bytes":3794},"projects/task-management-app/client/src/index.js":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);","size_bytes":253},"projects/ecommerce-platform/client/src/components/Footer.js":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-content\">\n          <div className=\"footer-section\">\n            <h3>ShopZone</h3>\n            <p style={{ color: '#d1d5db', marginBottom: '1rem' }}>\n              Your one-stop destination for quality products at unbeatable prices.\n            </p>\n            <div style={{ display: 'flex', gap: '1rem' }}>\n              <a href=\"#\" style={{ color: '#d1d5db', fontSize: '1.25rem' }}>üìò</a>\n              <a href=\"#\" style={{ color: '#d1d5db', fontSize: '1.25rem' }}>üê¶</a>\n              <a href=\"#\" style={{ color: '#d1d5db', fontSize: '1.25rem' }}>üì∑</a>\n              <a href=\"#\" style={{ color: '#d1d5db', fontSize: '1.25rem' }}>üíº</a>\n            </div>\n          </div>\n\n          <div className=\"footer-section\">\n            <h3>Quick Links</h3>\n            <ul>\n              <li><Link to=\"/\">Home</Link></li>\n              <li><Link to=\"/products\">Products</Link></li>\n              <li><Link to=\"/cart\">Cart</Link></li>\n              <li><Link to=\"/login\">Login</Link></li>\n            </ul>\n          </div>\n\n          <div className=\"footer-section\">\n            <h3>Categories</h3>\n            <ul>\n              <li><Link to=\"/products?category=electronics\">Electronics</Link></li>\n              <li><Link to=\"/products?category=clothing\">Clothing</Link></li>\n              <li><Link to=\"/products?category=sports\">Sports</Link></li>\n              <li><Link to=\"/products?category=food\">Food</Link></li>\n            </ul>\n          </div>\n\n          <div className=\"footer-section\">\n            <h3>Customer Service</h3>\n            <ul>\n              <li><a href=\"#\" onClick={(e) => e.preventDefault()}>Contact Us</a></li>\n              <li><a href=\"#\" onClick={(e) => e.preventDefault()}>FAQ</a></li>\n              <li><a href=\"#\" onClick={(e) => e.preventDefault()}>Shipping Info</a></li>\n              <li><a href=\"#\" onClick={(e) => e.preventDefault()}>Returns</a></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"footer-bottom\">\n          <p>&copy; 2024 ShopZone. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","size_bytes":2322},"projects/ecommerce-platform/client/src/components/Header.js":{"content":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useCart } from '../context/CartContext';\n\nconst Header = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const { user, logout } = useAuth();\n  const { cartItems } = useCart();\n  const navigate = useNavigate();\n\n  const cartItemsCount = cartItems.reduce((total, item) => total + item.quantity, 0);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(`/products?search=${encodeURIComponent(searchQuery)}`);\n      setSearchQuery('');\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/');\n  };\n\n  const navItems = [\n    { name: 'Home', path: '/' },\n    { name: 'Products', path: '/products' },\n    { name: 'Categories', path: '/products?category=all' },\n  ];\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header-content\">\n          {/* Logo */}\n          <Link to=\"/\" className=\"logo\">\n            ShopZone\n          </Link>\n\n          {/* Search Bar - Desktop */}\n          <div style={{ \n            display: 'flex', \n            flex: 1, \n            maxWidth: '500px', \n            margin: '0 2rem',\n            '@media (max-width: 768px)': { display: 'none' }\n          }}>\n            <form onSubmit={handleSearch} style={{ width: '100%' }}>\n              <div style={{ position: 'relative' }}>\n                <input\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search products...\"\n                  className=\"search-input\"\n                  style={{ paddingLeft: '2.5rem' }}\n                />\n                <span style={{ \n                  position: 'absolute', \n                  left: '0.75rem', \n                  top: '50%', \n                  transform: 'translateY(-50%)',\n                  color: '#6b7280'\n                }}>üîç</span>\n              </div>\n            </form>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"nav\" style={{ \n            '@media (max-width: 768px)': { display: 'none' }\n          }}>\n            {navItems.map((item) => (\n              <Link\n                key={item.name}\n                to={item.path}\n                className=\"nav-link\"\n              >\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n\n          {/* User Actions */}\n          <div className=\"auth-buttons\">\n            {/* Cart */}\n            <Link to=\"/cart\" style={{ position: 'relative', padding: '0.5rem' }}>\n              <span style={{ fontSize: '1.25rem' }}>üõí</span>\n              {cartItemsCount > 0 && (\n                <span className=\"cart-badge\">\n                  {cartItemsCount}\n                </span>\n              )}\n            </Link>\n\n            {/* User Menu */}\n            {user ? (\n              <div style={{ position: 'relative', display: 'inline-block' }}>\n                <button \n                  className=\"btn btn-outline\"\n                  style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n                >\n                  <span>üë§</span>\n                  <span style={{ '@media (max-width: 640px)': { display: 'none' } }}>\n                    {user.name || user.username}\n                  </span>\n                </button>\n                <div style={{ \n                  position: 'absolute', \n                  right: 0, \n                  marginTop: '0.5rem', \n                  width: '12rem', \n                  background: 'white', \n                  borderRadius: '0.375rem', \n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)', \n                  padding: '0.25rem 0',\n                  display: 'none',\n                  zIndex: 50\n                }} \n                className=\"user-dropdown\">\n                  <Link\n                    to=\"/profile\"\n                    className=\"nav-link\"\n                    style={{ \n                      display: 'block', \n                      padding: '0.5rem 1rem', \n                      fontSize: '0.875rem' \n                    }}\n                  >\n                    Profile\n                  </Link>\n                  <button\n                    onClick={handleLogout}\n                    className=\"nav-link\"\n                    style={{ \n                      display: 'block', \n                      width: '100%', \n                      textAlign: 'left', \n                      padding: '0.5rem 1rem', \n                      fontSize: '0.875rem',\n                      background: 'none',\n                      border: 'none'\n                    }}\n                  >\n                    Logout\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <>\n                <Link to=\"/login\" className=\"btn btn-outline\">\n                  Login\n                </Link>\n                <Link to=\"/register\" className=\"btn btn-primary\">\n                  Sign Up\n                </Link>\n              </>\n            )}\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"btn btn-outline\"\n              style={{ \n                display: 'none',\n                '@media (max-width: 768px)': { display: 'block' }\n              }}\n            >\n              {isMenuOpen ? '‚úï' : '‚ò∞'}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Search */}\n        <div style={{ \n          paddingBottom: '1rem',\n          '@media (min-width: 769px)': { display: 'none' }\n        }}>\n          <form onSubmit={handleSearch}>\n            <div style={{ position: 'relative' }}>\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search products...\"\n                className=\"search-input\"\n                style={{ paddingLeft: '2.5rem' }}\n              />\n              <span style={{ \n                position: 'absolute', \n                left: '0.75rem', \n                top: '50%', \n                transform: 'translateY(-50%)',\n                color: '#6b7280'\n              }}>üîç</span>\n            </div>\n          </form>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div style={{ \n            paddingBottom: '1rem',\n            '@media (min-width: 769px)': { display: 'none' }\n          }}>\n            <nav style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className=\"nav-link\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        )}\n      </div>\n\n      <style jsx>{`\n        .user-dropdown:hover,\n        .user-dropdown:focus-within {\n          display: block !important;\n        }\n        \n        @media (max-width: 768px) {\n          .nav { display: none !important; }\n          .mobile-menu-btn { display: block !important; }\n        }\n        \n        @media (min-width: 769px) {\n          .mobile-search, .mobile-menu { display: none !important; }\n        }\n      `}</style>\n    </header>\n  );\n};\n\nexport default Header;","size_bytes":7655},"projects/ecommerce-platform/client/src/context/AuthContext.js":{"content":"import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { login as apiLogin, register as apiRegister } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing token on mount\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await apiLogin(email, password);\n      const { token, user: userData } = response.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await apiRegister(userData);\n      const { token, user: newUser } = response.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      \n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};","size_bytes":2212},"projects/ecommerce-platform/client/src/context/CartContext.js":{"content":"import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { getCart, addToCart as apiAddToCart, updateCartItem, removeFromCart as apiRemoveFromCart } from '../services/api';\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const { user } = useAuth();\n\n  // Load cart when user changes\n  useEffect(() => {\n    if (user) {\n      loadCart();\n    } else {\n      // Load from localStorage for guest users\n      const guestCart = localStorage.getItem('guestCart');\n      if (guestCart) {\n        try {\n          const cart = JSON.parse(guestCart);\n          setCartItems(cart.items || []);\n          setCartTotal(cart.total || 0);\n        } catch (error) {\n          console.error('Error loading guest cart:', error);\n        }\n      }\n    }\n  }, [user]);\n\n  // Update localStorage for guest users\n  useEffect(() => {\n    if (!user) {\n      localStorage.setItem('guestCart', JSON.stringify({\n        items: cartItems,\n        total: cartTotal\n      }));\n    }\n  }, [cartItems, cartTotal, user]);\n\n  const loadCart = async () => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      const response = await getCart(user.id);\n      setCartItems(response.data.items || []);\n      setCartTotal(response.data.total || 0);\n    } catch (error) {\n      console.error('Error loading cart:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addToCart = async (product, quantity = 1) => {\n    try {\n      if (user) {\n        const response = await apiAddToCart(user.id, {\n          productId: product.id,\n          quantity,\n          price: product.price,\n          name: product.name,\n          image: product.image\n        });\n        setCartItems(response.data.items);\n        setCartTotal(response.data.total);\n      } else {\n        // Handle guest cart\n        const existingItem = cartItems.find(item => item.productId === product.id);\n        let newItems;\n        \n        if (existingItem) {\n          newItems = cartItems.map(item =>\n            item.productId === product.id\n              ? { ...item, quantity: item.quantity + quantity, subtotal: (item.quantity + quantity) * item.price }\n              : item\n          );\n        } else {\n          newItems = [...cartItems, {\n            productId: product.id,\n            quantity,\n            price: product.price,\n            name: product.name,\n            image: product.image,\n            subtotal: product.price * quantity\n          }];\n        }\n        \n        const newTotal = newItems.reduce((total, item) => total + item.subtotal, 0);\n        setCartItems(newItems);\n        setCartTotal(newTotal);\n      }\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      return { success: false, error: 'Failed to add item to cart' };\n    }\n  };\n\n  const updateQuantity = async (productId, quantity) => {\n    try {\n      if (user) {\n        const response = await updateCartItem(user.id, { productId, quantity });\n        setCartItems(response.data.items);\n        setCartTotal(response.data.total);\n      } else {\n        // Handle guest cart\n        let newItems;\n        if (quantity <= 0) {\n          newItems = cartItems.filter(item => item.productId !== productId);\n        } else {\n          newItems = cartItems.map(item =>\n            item.productId === productId\n              ? { ...item, quantity, subtotal: quantity * item.price }\n              : item\n          );\n        }\n        \n        const newTotal = newItems.reduce((total, item) => total + item.subtotal, 0);\n        setCartItems(newItems);\n        setCartTotal(newTotal);\n      }\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error updating cart:', error);\n      return { success: false, error: 'Failed to update cart' };\n    }\n  };\n\n  const removeFromCart = async (productId) => {\n    try {\n      if (user) {\n        const response = await apiRemoveFromCart(user.id, productId);\n        setCartItems(response.data.items);\n        setCartTotal(response.data.total);\n      } else {\n        // Handle guest cart\n        const newItems = cartItems.filter(item => item.productId !== productId);\n        const newTotal = newItems.reduce((total, item) => total + item.subtotal, 0);\n        setCartItems(newItems);\n        setCartTotal(newTotal);\n      }\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n      return { success: false, error: 'Failed to remove item from cart' };\n    }\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    setCartTotal(0);\n    if (!user) {\n      localStorage.removeItem('guestCart');\n    }\n  };\n\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const value = {\n    cartItems,\n    cartTotal,\n    loading,\n    addToCart,\n    updateQuantity,\n    removeFromCart,\n    clearCart,\n    getCartItemsCount,\n    loadCart\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};","size_bytes":5493},"projects/ecommerce-platform/client/src/pages/Cart.js":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCart } from '../context/CartContext';\n\nconst Cart = () => {\n  const { cartItems, updateQuantity, removeFromCart, getCartTotal } = useCart();\n\n  if (cartItems.length === 0) {\n    return (\n      <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n        <div className=\"empty-cart\">\n          <h2 style={{ fontSize: '2rem', fontWeight: '700', marginBottom: '1rem' }}>\n            Your cart is empty\n          </h2>\n          <p style={{ marginBottom: '2rem' }}>\n            Looks like you haven't added any products to your cart yet.\n          </p>\n          <Link to=\"/products\" className=\"btn btn-primary\">\n            Continue Shopping\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n      <h1 style={{ fontSize: '2.5rem', fontWeight: '700', marginBottom: '2rem' }}>\n        Shopping Cart\n      </h1>\n\n      <div className=\"cart-container\">\n        {cartItems.map((item) => (\n          <div key={item.id} className=\"cart-item\">\n            <img\n              src={item.image}\n              alt={item.name}\n              className=\"cart-item-image\"\n            />\n            <div className=\"cart-item-details\">\n              <h3 className=\"cart-item-name\">{item.name}</h3>\n              <p className=\"cart-item-price\">${item.price}</p>\n              \n              <div className=\"quantity-controls\">\n                <button \n                  className=\"quantity-btn\"\n                  onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                  disabled={item.quantity <= 1}\n                >\n                  -\n                </button>\n                <input\n                  type=\"number\"\n                  value={item.quantity}\n                  onChange={(e) => updateQuantity(item.id, parseInt(e.target.value) || 1)}\n                  className=\"quantity-input\"\n                  min=\"1\"\n                />\n                <button \n                  className=\"quantity-btn\"\n                  onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                >\n                  +\n                </button>\n              </div>\n              \n              <p style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.5rem' }}>\n                Subtotal: ${(item.price * item.quantity).toFixed(2)}\n              </p>\n            </div>\n            \n            <button\n              onClick={() => removeFromCart(item.id)}\n              className=\"btn btn-danger btn-small\"\n              style={{ alignSelf: 'flex-start' }}\n            >\n              Remove\n            </button>\n          </div>\n        ))}\n\n        <div className=\"cart-summary\">\n          <div className=\"cart-total\">\n            <span>Total: ${getCartTotal()}</span>\n          </div>\n          \n          <div style={{ display: 'flex', gap: '1rem', justifyContent: 'flex-end' }}>\n            <Link to=\"/products\" className=\"btn btn-outline\">\n              Continue Shopping\n            </Link>\n            <Link to=\"/checkout\" className=\"btn btn-primary\">\n              Proceed to Checkout\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;","size_bytes":3326},"projects/ecommerce-platform/client/src/pages/Checkout.js":{"content":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useCart } from '../context/CartContext';\nimport { useAuth } from '../context/AuthContext';\nimport { createOrder } from '../services/api';\n\nconst Checkout = () => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    paymentMethod: 'card'\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const { cartItems, getCartTotal, clearCart } = useCart();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.firstName) newErrors.firstName = 'First name is required';\n    if (!formData.lastName) newErrors.lastName = 'Last name is required';\n    if (!formData.email) newErrors.email = 'Email is required';\n    if (!formData.phone) newErrors.phone = 'Phone is required';\n    if (!formData.address) newErrors.address = 'Address is required';\n    if (!formData.city) newErrors.city = 'City is required';\n    if (!formData.state) newErrors.state = 'State is required';\n    if (!formData.zipCode) newErrors.zipCode = 'ZIP code is required';\n    \n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      const orderData = {\n        items: cartItems,\n        total: getCartTotal(),\n        shippingAddress: {\n          firstName: formData.firstName,\n          lastName: formData.lastName,\n          address: formData.address,\n          city: formData.city,\n          state: formData.state,\n          zipCode: formData.zipCode\n        },\n        contactInfo: {\n          email: formData.email,\n          phone: formData.phone\n        },\n        paymentMethod: formData.paymentMethod,\n        userId: user?.id\n      };\n\n      await createOrder(orderData);\n      clearCart();\n      navigate('/order-success');\n    } catch (error) {\n      setErrors({ submit: error.message || 'Order failed. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (cartItems.length === 0) {\n    return (\n      <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n        <div className=\"text-center\">\n          <h2 style={{ fontSize: '2rem', fontWeight: '700', marginBottom: '1rem' }}>\n            Your cart is empty\n          </h2>\n          <p style={{ marginBottom: '2rem' }}>\n            Add some products to your cart before checking out.\n          </p>\n          <button \n            onClick={() => navigate('/products')} \n            className=\"btn btn-primary\"\n          >\n            Continue Shopping\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n      <h1 style={{ fontSize: '2.5rem', fontWeight: '700', marginBottom: '2rem' }}>\n        Checkout\n      </h1>\n\n      <div className=\"grid grid-2\">\n        {/* Order Summary */}\n        <div>\n          <div className=\"cart-container\">\n            <h2 style={{ fontSize: '1.5rem', fontWeight: '600', marginBottom: '1rem' }}>\n              Order Summary\n            </h2>\n            \n            {cartItems.map((item) => (\n              <div key={item.id} style={{ \n                display: 'flex', \n                alignItems: 'center', \n                padding: '1rem 0', \n                borderBottom: '1px solid #e5e7eb' \n              }}>\n                <img\n                  src={item.image}\n                  alt={item.name}\n                  style={{ \n                    width: '60px', \n                    height: '60px', \n                    objectFit: 'cover', \n                    borderRadius: '0.375rem', \n                    marginRight: '1rem' \n                  }}\n                />\n                <div style={{ flex: 1 }}>\n                  <h3 style={{ fontSize: '1rem', fontWeight: '600' }}>{item.name}</h3>\n                  <p style={{ color: '#6b7280', fontSize: '0.875rem' }}>\n                    Qty: {item.quantity} √ó ${item.price}\n                  </p>\n                </div>\n                <div style={{ fontWeight: '600' }}>\n                  ${(item.price * item.quantity).toFixed(2)}\n                </div>\n              </div>\n            ))}\n\n            <div className=\"cart-summary\">\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                marginBottom: '0.5rem' \n              }}>\n                <span>Subtotal:</span>\n                <span>${getCartTotal()}</span>\n              </div>\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                marginBottom: '0.5rem' \n              }}>\n                <span>Shipping:</span>\n                <span>Free</span>\n              </div>\n              <div className=\"cart-total\">\n                <span>Total: ${getCartTotal()}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Checkout Form */}\n        <div>\n          <div className=\"form form-wide\" style={{ margin: 0, maxWidth: 'none' }}>\n            <h2 style={{ fontSize: '1.5rem', fontWeight: '600', marginBottom: '1rem' }}>\n              Shipping Information\n            </h2>\n\n            {errors.submit && (\n              <div className=\"alert alert-error\">\n                {errors.submit}\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit}>\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem' }}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\" className=\"form-label\">First Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                    className=\"form-input\"\n                    placeholder=\"First name\"\n                  />\n                  {errors.firstName && <div className=\"form-error\">{errors.firstName}</div>}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\" className=\"form-label\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    className=\"form-input\"\n                    placeholder=\"Last name\"\n                  />\n                  {errors.lastName && <div className=\"form-error\">{errors.lastName}</div>}\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  className=\"form-input\"\n                  placeholder=\"Email address\"\n                />\n                {errors.email && <div className=\"form-error\">{errors.email}</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  className=\"form-input\"\n                  placeholder=\"Phone number\"\n                />\n                {errors.phone && <div className=\"form-error\">{errors.phone}</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"address\" className=\"form-label\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"address\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleChange}\n                  className=\"form-input\"\n                  placeholder=\"Street address\"\n                />\n                {errors.address && <div className=\"form-error\">{errors.address}</div>}\n              </div>\n\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '1rem' }}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"city\" className=\"form-label\">City</label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    value={formData.city}\n                    onChange={handleChange}\n                    className=\"form-input\"\n                    placeholder=\"City\"\n                  />\n                  {errors.city && <div className=\"form-error\">{errors.city}</div>}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\" className=\"form-label\">State</label>\n                  <input\n                    type=\"text\"\n                    id=\"state\"\n                    name=\"state\"\n                    value={formData.state}\n                    onChange={handleChange}\n                    className=\"form-input\"\n                    placeholder=\"State\"\n                  />\n                  {errors.state && <div className=\"form-error\">{errors.state}</div>}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"zipCode\" className=\"form-label\">ZIP Code</label>\n                  <input\n                    type=\"text\"\n                    id=\"zipCode\"\n                    name=\"zipCode\"\n                    value={formData.zipCode}\n                    onChange={handleChange}\n                    className=\"form-input\"\n                    placeholder=\"ZIP code\"\n                  />\n                  {errors.zipCode && <div className=\"form-error\">{errors.zipCode}</div>}\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"paymentMethod\" className=\"form-label\">Payment Method</label>\n                <select\n                  id=\"paymentMethod\"\n                  name=\"paymentMethod\"\n                  value={formData.paymentMethod}\n                  onChange={handleChange}\n                  className=\"select\"\n                >\n                  <option value=\"card\">Credit Card</option>\n                  <option value=\"paypal\">PayPal</option>\n                  <option value=\"cash\">Cash on Delivery</option>\n                </select>\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"btn btn-primary w-full\"\n                style={{ marginTop: '1rem' }}\n              >\n                {isLoading ? 'Processing...' : `Place Order - $${getCartTotal()}`}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;","size_bytes":11693},"projects/ecommerce-platform/client/src/pages/Home.js":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchProducts } from '../services/api';\n\nconst Home = () => {\n  const { data: featuredProducts, isLoading } = useQuery(\n    ['products', { featured: true }],\n    () => fetchProducts({ featured: true }),\n    {\n      staleTime: 10 * 60 * 1000, // 10 minutes\n    }\n  );\n\n  const features = [\n    {\n      icon: 'üöö',\n      title: 'Free Shipping',\n      description: 'Free shipping on orders over $50'\n    },\n    {\n      icon: 'üîí',\n      title: 'Secure Payment',\n      description: '100% secure payment processing'\n    },\n    {\n      icon: 'üí≥',\n      title: 'Easy Returns',\n      description: '30-day hassle-free returns'\n    },\n    {\n      icon: 'üõçÔ∏è',\n      title: 'Quality Products',\n      description: 'Carefully curated product selection'\n    }\n  ];\n\n  const categories = [\n    {\n      name: 'Electronics',\n      image: 'https://images.unsplash.com/photo-1498049794561-7780e7231661?w=400&h=300&fit=crop',\n      itemCount: '200+ items'\n    },\n    {\n      name: 'Clothing',\n      image: 'https://images.unsplash.com/photo-1445205170230-053b83016050?w=400&h=300&fit=crop',\n      itemCount: '150+ items'\n    },\n    {\n      name: 'Sports',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&h=300&fit=crop',\n      itemCount: '100+ items'\n    },\n    {\n      name: 'Food',\n      image: 'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=400&h=300&fit=crop',\n      itemCount: '80+ items'\n    }\n  ];\n\n  return (\n    <div style={{ minHeight: '100vh' }}>\n      {/* Hero Section */}\n      <section className=\"hero\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1 className=\"fade-in\">\n              Shop the Best Products\n            </h1>\n            <p className=\"fade-in\">\n              Discover amazing products at unbeatable prices\n            </p>\n            <Link\n              to=\"/products\"\n              className=\"btn btn-primary fade-in\"\n              style={{ \n                display: 'inline-flex', \n                alignItems: 'center', \n                padding: '1rem 2rem',\n                fontSize: '1rem',\n                marginTop: '1rem'\n              }}\n            >\n              üõçÔ∏è Shop Now\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"section\" style={{ backgroundColor: '#f8f9fa' }}>\n        <div className=\"container\">\n          <div className=\"grid grid-4\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"text-center fade-in\">\n                <div style={{ \n                  fontSize: '3rem', \n                  marginBottom: '1rem',\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}>\n                  {feature.icon}\n                </div>\n                <h3 style={{ \n                  fontSize: '1.125rem', \n                  fontWeight: '600', \n                  color: '#1f2937', \n                  marginBottom: '0.5rem' \n                }}>\n                  {feature.title}\n                </h3>\n                <p style={{ color: '#6b7280' }}>{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Categories Section */}\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"section-title\">Shop by Category</h2>\n            <p style={{ fontSize: '1.125rem', color: '#6b7280' }}>Find exactly what you're looking for</p>\n          </div>\n          <div className=\"grid grid-4\">\n            {categories.map((category, index) => (\n              <Link\n                key={index}\n                to={`/products?category=${category.name.toLowerCase()}`}\n                className=\"card scale-hover\"\n                style={{ \n                  position: 'relative', \n                  overflow: 'hidden',\n                  textDecoration: 'none',\n                  color: 'inherit'\n                }}\n              >\n                <img\n                  src={category.image}\n                  alt={category.name}\n                  className=\"card-image\"\n                  style={{ height: '16rem' }}\n                />\n                <div style={{ \n                  position: 'absolute', \n                  inset: 0, \n                  background: 'rgba(0, 0, 0, 0.4)',\n                  transition: 'background 0.3s'\n                }}>\n                  <div style={{ \n                    position: 'absolute', \n                    bottom: '1rem', \n                    left: '1rem', \n                    color: 'white' \n                  }}>\n                    <h3 style={{ \n                      fontSize: '1.25rem', \n                      fontWeight: '600',\n                      marginBottom: '0.25rem'\n                    }}>\n                      {category.name}\n                    </h3>\n                    <p style={{ \n                      fontSize: '0.875rem', \n                      opacity: 0.9 \n                    }}>\n                      {category.itemCount}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Products Section */}\n      <section className=\"section\" style={{ backgroundColor: '#f8f9fa' }}>\n        <div className=\"container\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"section-title\">Featured Products</h2>\n            <p style={{ fontSize: '1.125rem', color: '#6b7280' }}>Our most popular items</p>\n          </div>\n          \n          {isLoading ? (\n            <div className=\"grid grid-4\">\n              {[...Array(4)].map((_, index) => (\n                <div key={index} className=\"card\" style={{ padding: '1rem' }}>\n                  <div style={{ \n                    background: '#d1d5db', \n                    height: '12rem', \n                    borderRadius: '0.5rem', \n                    marginBottom: '1rem' \n                  }}></div>\n                  <div style={{ \n                    background: '#d1d5db', \n                    height: '1rem', \n                    borderRadius: '0.25rem', \n                    marginBottom: '0.5rem' \n                  }}></div>\n                  <div style={{ \n                    background: '#d1d5db', \n                    height: '1rem', \n                    borderRadius: '0.25rem', \n                    width: '75%' \n                  }}></div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"grid grid-4\">\n              {featuredProducts?.slice(0, 4).map((product) => (\n                <Link\n                  key={product.id}\n                  to={`/products/${product.id}`}\n                  className=\"card scale-hover fade-in\"\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <img\n                    src={product.image}\n                    alt={product.name}\n                    className=\"card-image\"\n                  />\n                  <div className=\"card-content\">\n                    <h3 className=\"card-title\">{product.name}</h3>\n                    <p className=\"card-description\" style={{ \n                      display: '-webkit-box',\n                      WebkitLineClamp: 2,\n                      WebkitBoxOrient: 'vertical',\n                      overflow: 'hidden'\n                    }}>\n                      {product.description}\n                    </p>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"card-price\">${product.price}</span>\n                      <span style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n                        {product.stock} in stock\n                      </span>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          )}\n          \n          <div className=\"text-center mt-8\">\n            <Link\n              to=\"/products\"\n              className=\"btn btn-primary\"\n              style={{ \n                display: 'inline-flex', \n                alignItems: 'center', \n                padding: '0.75rem 1.5rem',\n                fontSize: '1rem'\n              }}\n            >\n              View All Products\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter Section */}\n      <section className=\"section\" style={{ \n        background: '#2563eb', \n        color: 'white' \n      }}>\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h2 style={{ \n              fontSize: '2rem', \n              fontWeight: '700', \n              marginBottom: '1rem' \n            }}>\n              Stay Updated\n            </h2>\n            <p style={{ \n              fontSize: '1.25rem', \n              opacity: 0.9, \n              marginBottom: '2rem' \n            }}>\n              Get the latest deals and new product announcements\n            </p>\n            <div style={{ \n              maxWidth: '28rem', \n              margin: '0 auto', \n              display: 'flex',\n              borderRadius: '0.375rem',\n              overflow: 'hidden',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            }}>\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                style={{\n                  flex: 1,\n                  padding: '0.75rem 1rem',\n                  border: 'none',\n                  outline: 'none',\n                  fontSize: '1rem'\n                }}\n              />\n              <button \n                className=\"btn\"\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  background: '#1d4ed8',\n                  color: 'white',\n                  border: 'none',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                  cursor: 'pointer',\n                  transition: 'background 0.3s'\n                }}\n                onMouseOver={(e) => e.target.style.background = '#1e40af'}\n                onMouseOut={(e) => e.target.style.background = '#1d4ed8'}\n              >\n                Subscribe\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;","size_bytes":10584},"projects/ecommerce-platform/client/src/pages/Login.js":{"content":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    \n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    \n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await login(formData.email, formData.password);\n      navigate('/');\n    } catch (error) {\n      setErrors({ submit: error.message || 'Login failed. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n      <div className=\"form\">\n        <div className=\"text-center mb-8\">\n          <h1 style={{ fontSize: '2rem', fontWeight: '700', marginBottom: '0.5rem' }}>\n            Welcome Back\n          </h1>\n          <p style={{ color: '#6b7280' }}>\n            Sign in to your account to continue shopping\n          </p>\n        </div>\n\n        {errors.submit && (\n          <div className=\"alert alert-error\">\n            {errors.submit}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email Address\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Enter your email\"\n            />\n            {errors.email && (\n              <div className=\"form-error\">{errors.email}</div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Enter your password\"\n            />\n            {errors.password && (\n              <div className=\"form-error\">{errors.password}</div>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"btn btn-primary w-full\"\n            style={{ marginBottom: '1rem' }}\n          >\n            {isLoading ? 'Signing in...' : 'Sign In'}\n          </button>\n        </form>\n\n        <div className=\"text-center\">\n          <p style={{ color: '#6b7280' }}>\n            Don't have an account?{' '}\n            <Link to=\"/register\" style={{ color: '#2563eb', textDecoration: 'none' }}>\n              Sign up here\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","size_bytes":3996},"projects/ecommerce-platform/client/src/pages/ProductDetail.js":{"content":"import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchProduct } from '../services/api';\nimport { useCart } from '../context/CartContext';\n\nconst ProductDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { addToCart } = useCart();\n\n  const { data: product, isLoading, error } = useQuery(\n    ['product', id],\n    () => fetchProduct(id),\n    {\n      enabled: !!id,\n    }\n  );\n\n  const handleAddToCart = () => {\n    if (product) {\n      addToCart({\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.image,\n        quantity: 1\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\" style={{ minHeight: '60vh' }}>\n        <div className=\"spinner\"></div>\n      </div>\n    );\n  }\n\n  if (error || !product) {\n    return (\n      <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n        <div className=\"text-center\">\n          <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem', color: '#6b7280' }}>\n            Product not found\n          </h2>\n          <p style={{ color: '#9ca3af', marginBottom: '2rem' }}>\n            The product you're looking for doesn't exist or has been removed.\n          </p>\n          <button \n            onClick={() => navigate('/products')} \n            className=\"btn btn-primary\"\n          >\n            Back to Products\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n      <button \n        onClick={() => navigate(-1)} \n        className=\"btn btn-outline mb-4\"\n        style={{ marginBottom: '2rem' }}\n      >\n        ‚Üê Back\n      </button>\n\n      <div className=\"product-detail\">\n        <div>\n          <img\n            src={product.image}\n            alt={product.name}\n            className=\"product-image-large\"\n          />\n        </div>\n\n        <div className=\"product-info\">\n          <h1>{product.name}</h1>\n          <div className=\"product-price-large\">${product.price}</div>\n          \n          <div style={{ marginBottom: '1rem' }}>\n            <span className={`card-stock ${product.stock > 10 ? 'stock-high' : 'stock-low'}`}>\n              {product.stock > 0 ? `${product.stock} in stock` : 'Out of stock'}\n            </span>\n          </div>\n\n          <div className=\"product-description\">\n            {product.description}\n          </div>\n\n          <div style={{ marginBottom: '2rem' }}>\n            <h3 style={{ fontSize: '1.125rem', fontWeight: '600', marginBottom: '0.5rem' }}>\n              Product Details\n            </h3>\n            <ul style={{ color: '#6b7280', paddingLeft: '1.25rem' }}>\n              <li>Category: {product.category}</li>\n              <li>Brand: {product.brand || 'ShopZone'}</li>\n              <li>SKU: {product.id}</li>\n              {product.features && product.features.map((feature, index) => (\n                <li key={index}>{feature}</li>\n              ))}\n            </ul>\n          </div>\n\n          <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>\n            <button\n              onClick={handleAddToCart}\n              disabled={product.stock === 0}\n              className=\"btn btn-primary\"\n              style={{ flex: 1, minWidth: '200px' }}\n            >\n              {product.stock === 0 ? 'Out of Stock' : 'Add to Cart'}\n            </button>\n            \n            <button \n              onClick={() => {\n                handleAddToCart();\n                navigate('/cart');\n              }}\n              disabled={product.stock === 0}\n              className=\"btn btn-outline\"\n              style={{ flex: 1, minWidth: '200px' }}\n            >\n              Buy Now\n            </button>\n          </div>\n\n          <div style={{ \n            marginTop: '2rem', \n            padding: '1rem', \n            backgroundColor: '#f8f9fa', \n            borderRadius: '0.5rem' \n          }}>\n            <h4 style={{ fontSize: '1rem', fontWeight: '600', marginBottom: '0.5rem' }}>\n              üöö Free Shipping\n            </h4>\n            <p style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n              Free shipping on orders over $50\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetail;","size_bytes":4428},"projects/ecommerce-platform/client/src/pages/Products.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchProducts, fetchCategories } from '../services/api';\nimport { useCart } from '../context/CartContext';\n\nconst Products = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filters, setFilters] = useState({\n    search: searchParams.get('search') || '',\n    category: searchParams.get('category') || '',\n    minPrice: '',\n    maxPrice: '',\n    sortBy: 'name'\n  });\n  const [showFilters, setShowFilters] = useState(false);\n\n  const { addToCart } = useCart();\n\n  // Update filters when URL params change\n  useEffect(() => {\n    setFilters(prev => ({\n      ...prev,\n      search: searchParams.get('search') || '',\n      category: searchParams.get('category') || ''\n    }));\n  }, [searchParams]);\n\n  const { data: products = [], isLoading: productsLoading } = useQuery(\n    ['products', filters],\n    () => fetchProducts(filters),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  const { data: categories = [] } = useQuery('categories', fetchCategories);\n\n  const handleFilterChange = (key, value) => {\n    const newFilters = { ...filters, [key]: value };\n    setFilters(newFilters);\n    \n    // Update URL params\n    const newParams = new URLSearchParams();\n    Object.entries(newFilters).forEach(([k, v]) => {\n      if (v) newParams.set(k, v);\n    });\n    setSearchParams(newParams);\n  };\n\n  const handleAddToCart = (product) => {\n    addToCart({\n      id: product.id,\n      name: product.name,\n      price: product.price,\n      image: product.image,\n      quantity: 1\n    });\n  };\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n      {/* Page Header */}\n      <div className=\"text-center mb-8\">\n        <h1 style={{ fontSize: '2.5rem', fontWeight: '700', marginBottom: '1rem' }}>\n          Our Products\n        </h1>\n        <p style={{ fontSize: '1.125rem', color: '#6b7280' }}>\n          Discover our amazing collection of products\n        </p>\n      </div>\n\n      {/* Filters */}\n      <div className=\"filters\">\n        <div className=\"filter-row\">\n          <div className=\"filter-group\">\n            <label className=\"filter-title\">Search</label>\n            <input\n              type=\"text\"\n              value={filters.search}\n              onChange={(e) => handleFilterChange('search', e.target.value)}\n              placeholder=\"Search products...\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-title\">Category</label>\n            <select\n              value={filters.category}\n              onChange={(e) => handleFilterChange('category', e.target.value)}\n              className=\"select\"\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map((category) => (\n                <option key={category.id} value={category.name}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-title\">Min Price</label>\n            <input\n              type=\"number\"\n              value={filters.minPrice}\n              onChange={(e) => handleFilterChange('minPrice', e.target.value)}\n              placeholder=\"Min price\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-title\">Max Price</label>\n            <input\n              type=\"number\"\n              value={filters.maxPrice}\n              onChange={(e) => handleFilterChange('maxPrice', e.target.value)}\n              placeholder=\"Max price\"\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"filter-group\">\n            <label className=\"filter-title\">Sort By</label>\n            <select\n              value={filters.sortBy}\n              onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n              className=\"select\"\n            >\n              <option value=\"name\">Name</option>\n              <option value=\"price_low\">Price: Low to High</option>\n              <option value=\"price_high\">Price: High to Low</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Products Grid */}\n      {productsLoading ? (\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : (\n        <>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center', \n            marginBottom: '2rem' \n          }}>\n            <p style={{ color: '#6b7280' }}>\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          {products.length === 0 ? (\n            <div className=\"text-center\" style={{ padding: '4rem' }}>\n              <h3 style={{ fontSize: '1.5rem', marginBottom: '1rem', color: '#6b7280' }}>\n                No products found\n              </h3>\n              <p style={{ color: '#9ca3af' }}>\n                Try adjusting your search criteria or browse all products.\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-3\">\n              {products.map((product) => (\n                <div key={product.id} className=\"card fade-in\">\n                  <Link to={`/products/${product.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                    <img\n                      src={product.image}\n                      alt={product.name}\n                      className=\"card-image\"\n                    />\n                  </Link>\n                  <div className=\"card-content\">\n                    <Link to={`/products/${product.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                      <h3 className=\"card-title\">{product.name}</h3>\n                      <p className=\"card-description\">{product.description}</p>\n                    </Link>\n                    <div className=\"flex justify-between items-center mb-4\">\n                      <span className=\"card-price\">${product.price}</span>\n                      <span className={`card-stock ${product.stock > 10 ? 'stock-high' : 'stock-low'}`}>\n                        {product.stock} in stock\n                      </span>\n                    </div>\n                    <button\n                      onClick={() => handleAddToCart(product)}\n                      className=\"btn btn-primary w-full\"\n                      disabled={product.stock === 0}\n                    >\n                      {product.stock === 0 ? 'Out of Stock' : 'Add to Cart'}\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Products;","size_bytes":7019},"projects/ecommerce-platform/client/src/pages/Profile.js":{"content":"import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useAuth } from '../context/AuthContext';\nimport { fetchUserOrders } from '../services/api';\n\nconst Profile = () => {\n  const [activeTab, setActiveTab] = useState('profile');\n  const { user, logout } = useAuth();\n\n  const { data: orders = [], isLoading: ordersLoading } = useQuery(\n    ['orders', user?.id],\n    () => fetchUserOrders(user?.id),\n    {\n      enabled: !!user?.id && activeTab === 'orders',\n    }\n  );\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  if (!user) {\n    return (\n      <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n        <div className=\"text-center\">\n          <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem', color: '#6b7280' }}>\n            Please log in\n          </h2>\n          <p style={{ color: '#9ca3af', marginBottom: '2rem' }}>\n            You need to be logged in to view your profile.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n      <h1 style={{ fontSize: '2.5rem', fontWeight: '700', marginBottom: '2rem' }}>\n        My Account\n      </h1>\n\n      {/* Tab Navigation */}\n      <div style={{ \n        display: 'flex', \n        borderBottom: '1px solid #e5e7eb', \n        marginBottom: '2rem' \n      }}>\n        <button\n          onClick={() => setActiveTab('profile')}\n          className={`btn ${activeTab === 'profile' ? 'btn-primary' : 'btn-outline'}`}\n          style={{ \n            borderRadius: '0', \n            marginRight: '0.5rem',\n            borderBottom: activeTab === 'profile' ? '2px solid #2563eb' : 'none'\n          }}\n        >\n          Profile\n        </button>\n        <button\n          onClick={() => setActiveTab('orders')}\n          className={`btn ${activeTab === 'orders' ? 'btn-primary' : 'btn-outline'}`}\n          style={{ \n            borderRadius: '0',\n            borderBottom: activeTab === 'orders' ? '2px solid #2563eb' : 'none'\n          }}\n        >\n          Order History\n        </button>\n      </div>\n\n      {/* Profile Tab */}\n      {activeTab === 'profile' && (\n        <div className=\"card\" style={{ maxWidth: '600px' }}>\n          <div className=\"card-content\">\n            <h2 style={{ fontSize: '1.5rem', fontWeight: '600', marginBottom: '1.5rem' }}>\n              Profile Information\n            </h2>\n            \n            <div style={{ marginBottom: '1rem' }}>\n              <label className=\"form-label\">Name</label>\n              <div style={{ \n                padding: '0.75rem', \n                backgroundColor: '#f3f4f6', \n                borderRadius: '0.375rem',\n                border: '1px solid #d1d5db'\n              }}>\n                {user.name || user.username || 'Not provided'}\n              </div>\n            </div>\n\n            <div style={{ marginBottom: '1rem' }}>\n              <label className=\"form-label\">Email</label>\n              <div style={{ \n                padding: '0.75rem', \n                backgroundColor: '#f3f4f6', \n                borderRadius: '0.375rem',\n                border: '1px solid #d1d5db'\n              }}>\n                {user.email || 'Not provided'}\n              </div>\n            </div>\n\n            <div style={{ marginBottom: '1.5rem' }}>\n              <label className=\"form-label\">Member Since</label>\n              <div style={{ \n                padding: '0.75rem', \n                backgroundColor: '#f3f4f6', \n                borderRadius: '0.375rem',\n                border: '1px solid #d1d5db'\n              }}>\n                {user.createdAt ? new Date(user.createdAt).toLocaleDateString() : 'Unknown'}\n              </div>\n            </div>\n\n            <button \n              onClick={handleLogout}\n              className=\"btn btn-danger\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Orders Tab */}\n      {activeTab === 'orders' && (\n        <div>\n          <h2 style={{ fontSize: '1.5rem', fontWeight: '600', marginBottom: '1.5rem' }}>\n            Order History\n          </h2>\n          \n          {ordersLoading ? (\n            <div className=\"loading\">\n              <div className=\"spinner\"></div>\n            </div>\n          ) : orders.length === 0 ? (\n            <div className=\"text-center\" style={{ padding: '3rem' }}>\n              <h3 style={{ fontSize: '1.25rem', marginBottom: '1rem', color: '#6b7280' }}>\n                No orders yet\n              </h3>\n              <p style={{ color: '#9ca3af', marginBottom: '2rem' }}>\n                You haven't placed any orders yet. Start shopping to see your order history here.\n              </p>\n              <a href=\"/products\" className=\"btn btn-primary\">\n                Start Shopping\n              </a>\n            </div>\n          ) : (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n              {orders.map((order) => (\n                <div key={order.id} className=\"card\">\n                  <div className=\"card-content\">\n                    <div style={{ \n                      display: 'flex', \n                      justifyContent: 'space-between', \n                      alignItems: 'flex-start',\n                      marginBottom: '1rem'\n                    }}>\n                      <div>\n                        <h3 style={{ fontSize: '1.125rem', fontWeight: '600' }}>\n                          Order #{order.id}\n                        </h3>\n                        <p style={{ color: '#6b7280', fontSize: '0.875rem' }}>\n                          Placed on {new Date(order.createdAt).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <div style={{ textAlign: 'right' }}>\n                        <div style={{ fontSize: '1.125rem', fontWeight: '600' }}>\n                          ${order.total}\n                        </div>\n                        <span style={{ \n                          padding: '0.25rem 0.5rem', \n                          borderRadius: '0.25rem', \n                          fontSize: '0.75rem',\n                          backgroundColor: order.status === 'delivered' ? '#d1fae5' : '#dbeafe',\n                          color: order.status === 'delivered' ? '#065f46' : '#1e40af'\n                        }}>\n                          {order.status || 'Processing'}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div style={{ borderTop: '1px solid #e5e7eb', paddingTop: '1rem' }}>\n                      <h4 style={{ fontSize: '1rem', fontWeight: '600', marginBottom: '0.5rem' }}>\n                        Items ({order.items?.length || 0})\n                      </h4>\n                      <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                        {order.items?.slice(0, 3).map((item, index) => (\n                          <div key={index} style={{ \n                            display: 'flex', \n                            justifyContent: 'space-between',\n                            fontSize: '0.875rem'\n                          }}>\n                            <span>{item.name} √ó {item.quantity}</span>\n                            <span>${(item.price * item.quantity).toFixed(2)}</span>\n                          </div>\n                        ))}\n                        {order.items?.length > 3 && (\n                          <div style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n                            +{order.items.length - 3} more items\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;","size_bytes":7908},"projects/ecommerce-platform/client/src/pages/Register.js":{"content":"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const { register } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name) {\n      newErrors.name = 'Name is required';\n    }\n    \n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    \n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    \n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    \n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      await register({\n        name: formData.name,\n        email: formData.email,\n        password: formData.password\n      });\n      navigate('/');\n    } catch (error) {\n      setErrors({ submit: error.message || 'Registration failed. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '4rem', paddingBottom: '4rem' }}>\n      <div className=\"form\">\n        <div className=\"text-center mb-8\">\n          <h1 style={{ fontSize: '2rem', fontWeight: '700', marginBottom: '0.5rem' }}>\n            Create Account\n          </h1>\n          <p style={{ color: '#6b7280' }}>\n            Join us and start shopping today\n          </p>\n        </div>\n\n        {errors.submit && (\n          <div className=\"alert alert-error\">\n            {errors.submit}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Full Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Enter your full name\"\n            />\n            {errors.name && (\n              <div className=\"form-error\">{errors.name}</div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email Address\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Enter your email\"\n            />\n            {errors.email && (\n              <div className=\"form-error\">{errors.email}</div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Create a password\"\n            />\n            {errors.password && (\n              <div className=\"form-error\">{errors.password}</div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              className=\"form-input\"\n              placeholder=\"Confirm your password\"\n            />\n            {errors.confirmPassword && (\n              <div className=\"form-error\">{errors.confirmPassword}</div>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"btn btn-primary w-full\"\n            style={{ marginBottom: '1rem' }}\n          >\n            {isLoading ? 'Creating Account...' : 'Create Account'}\n          </button>\n        </form>\n\n        <div className=\"text-center\">\n          <p style={{ color: '#6b7280' }}>\n            Already have an account?{' '}\n            <Link to=\"/login\" style={{ color: '#2563eb', textDecoration: 'none' }}>\n              Sign in here\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;","size_bytes":5597},"projects/ecommerce-platform/client/src/services/api.js":{"content":"import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const login = (email, password) => {\n  return api.post('/api/auth/login', { email, password });\n};\n\nexport const register = (userData) => {\n  return api.post('/api/auth/register', userData);\n};\n\n// Product API calls\nexport const fetchProducts = (params = {}) => {\n  return api.get('/api/products', { params }).then(response => response.data);\n};\n\nexport const fetchProduct = (id) => {\n  return api.get(`/api/products/${id}`).then(response => response.data);\n};\n\nexport const fetchCategories = () => {\n  return api.get('/api/products/categories').then(response => response.data);\n};\n\n// Cart API calls\nexport const getCart = (userId) => {\n  return api.get(`/api/cart/${userId}`);\n};\n\nexport const addToCart = (userId, itemData) => {\n  return api.post(`/api/cart/${userId}/add`, itemData);\n};\n\nexport const updateCartItem = (userId, itemData) => {\n  return api.put(`/api/cart/${userId}/update`, itemData);\n};\n\nexport const removeFromCart = (userId, productId) => {\n  return api.delete(`/api/cart/${userId}/remove/${productId}`);\n};\n\nexport const clearCart = (userId) => {\n  return api.delete(`/api/cart/${userId}/clear`);\n};\n\n// Order API calls\nexport const createOrder = (orderData) => {\n  return api.post('/api/orders', orderData);\n};\n\nexport const fetchUserOrders = (userId) => {\n  return api.get(`/api/orders/user/${userId}`);\n};\n\nexport const fetchOrder = (orderId) => {\n  return api.get(`/api/orders/${orderId}`);\n};\n\n// Payment API calls\nexport const createPaymentIntent = (amount, currency = 'usd') => {\n  return api.post('/api/payment/create-payment-intent', { amount, currency });\n};\n\nexport const confirmPayment = (paymentIntentId, orderId) => {\n  return api.post('/api/payment/confirm-payment', { paymentIntentId, orderId });\n};\n\nexport const getPaymentStatus = (paymentId) => {\n  return api.get(`/api/payment/status/${paymentId}`);\n};\n\nexport default api;","size_bytes":2362},"projects/task-management-app/client/src/context/SocketContext.js":{"content":"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5002');\n    setSocket(newSocket);\n\n    // Handle online users\n    newSocket.on('usersOnline', (users) => {\n      setOnlineUsers(users);\n    });\n\n    // Handle typing indicators\n    newSocket.on('userTyping', (data) => {\n      setTypingUsers(prev => [...prev.filter(u => u.userId !== data.userId), data]);\n    });\n\n    newSocket.on('userStoppedTyping', (data) => {\n      setTypingUsers(prev => prev.filter(u => u.userId !== data.userId));\n    });\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const joinProject = (projectId) => {\n    if (socket) {\n      socket.emit('joinProject', projectId);\n    }\n  };\n\n  const leaveProject = (projectId) => {\n    if (socket) {\n      socket.emit('leaveProject', projectId);\n    }\n  };\n\n  const updateTaskStatus = (taskId, newStatus, projectId) => {\n    if (socket) {\n      socket.emit('taskStatusChange', { taskId, newStatus, projectId });\n    }\n  };\n\n  const startTyping = (userId, userName, projectId) => {\n    if (socket) {\n      socket.emit('userTyping', { userId, userName, projectId });\n    }\n  };\n\n  const stopTyping = (userId, projectId) => {\n    if (socket) {\n      socket.emit('userStoppedTyping', { userId, projectId });\n    }\n  };\n\n  const value = {\n    socket,\n    onlineUsers,\n    typingUsers,\n    joinProject,\n    leaveProject,\n    updateTaskStatus,\n    startTyping,\n    stopTyping\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};","size_bytes":2116},"projects/task-management-app/client/src/pages/Dashboard.js":{"content":"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { PlusIcon, ClockIcon, CheckCircleIcon, UserGroupIcon } from '@heroicons/react/24/outline';\nimport { fetchProjects, fetchTasks } from '../services/api';\n\nconst Dashboard = () => {\n  const { data: projects = [], isLoading: projectsLoading } = useQuery({\n    queryKey: ['projects'],\n    queryFn: fetchProjects\n  });\n\n  const { data: tasks = [], isLoading: tasksLoading } = useQuery({\n    queryKey: ['tasks'],\n    queryFn: fetchTasks\n  });\n\n  const getTaskCounts = () => {\n    return {\n      total: tasks.length,\n      todo: tasks.filter(task => task.status === 'todo').length,\n      inProgress: tasks.filter(task => task.status === 'in-progress').length,\n      done: tasks.filter(task => task.status === 'done').length\n    };\n  };\n\n  const taskCounts = getTaskCounts();\n  const recentTasks = tasks.slice(0, 5);\n\n  const stats = [\n    {\n      name: 'Total Tasks',\n      value: taskCounts.total,\n      icon: ClockIcon,\n      color: 'bg-blue-500'\n    },\n    {\n      name: 'In Progress',\n      value: taskCounts.inProgress,\n      icon: ClockIcon,\n      color: 'bg-yellow-500'\n    },\n    {\n      name: 'Completed',\n      value: taskCounts.done,\n      icon: CheckCircleIcon,\n      color: 'bg-green-500'\n    },\n    {\n      name: 'Projects',\n      value: projects.length,\n      icon: UserGroupIcon,\n      color: 'bg-purple-500'\n    }\n  ];\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'high': return 'text-red-600 bg-red-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'low': return 'text-green-600 bg-green-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'todo': return 'text-blue-600 bg-blue-100';\n      case 'in-progress': return 'text-yellow-600 bg-yellow-100';\n      case 'done': return 'text-green-600 bg-green-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  if (projectsLoading || tasksLoading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {[...Array(4)].map((_, i) => (\n              <div key={i} className=\"bg-gray-200 h-24 rounded-lg\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6 fade-in\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n        <Link\n          to=\"/project/new\"\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          <PlusIcon className=\"mr-2 h-4 w-4\" />\n          New Project\n        </Link>\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {stats.map((stat, index) => (\n          <div key={index} className=\"bg-white rounded-lg shadow p-6 slide-in\">\n            <div className=\"flex items-center\">\n              <div className={`p-3 rounded-md ${stat.color}`}>\n                <stat.icon className=\"h-6 w-6 text-white\" />\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">{stat.name}</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">{stat.value}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Recent Projects */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Recent Projects</h2>\n          </div>\n          <div className=\"p-6\">\n            {projects.length > 0 ? (\n              <div className=\"space-y-4\">\n                {projects.slice(0, 3).map((project) => (\n                  <Link\n                    key={project.id}\n                    to={`/project/${project.id}`}\n                    className=\"block hover:bg-gray-50 rounded-lg p-4 transition-colors\"\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-900\">\n                          {project.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-500 mt-1\">\n                          {project.description}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-xs text-gray-500\">\n                          {project.teamMembers?.length || 0} members\n                        </span>\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500\">No projects yet</p>\n                <Link\n                  to=\"/project/new\"\n                  className=\"mt-2 text-blue-600 hover:text-blue-800\"\n                >\n                  Create your first project\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Recent Tasks */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Recent Tasks</h2>\n          </div>\n          <div className=\"p-6\">\n            {recentTasks.length > 0 ? (\n              <div className=\"space-y-4\">\n                {recentTasks.map((task) => (\n                  <div key={task.id} className=\"border-l-4 border-blue-400 pl-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-sm font-medium text-gray-900\">\n                          {task.title}\n                        </h3>\n                        <p className=\"text-sm text-gray-500 mt-1\">\n                          {task.description}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center space-x-2 ml-4\">\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getPriorityColor(task.priority)}`}>\n                          {task.priority}\n                        </span>\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(task.status)}`}>\n                          {task.status.replace('-', ' ')}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500\">No tasks yet</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <button className=\"flex items-center justify-center px-4 py-3 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n            <PlusIcon className=\"mr-2 h-4 w-4\" />\n            Create Task\n          </button>\n          <button className=\"flex items-center justify-center px-4 py-3 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n            <UserGroupIcon className=\"mr-2 h-4 w-4\" />\n            Invite Team Member\n          </button>\n          <button className=\"flex items-center justify-center px-4 py-3 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n            <ClockIcon className=\"mr-2 h-4 w-4\" />\n            View Calendar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;","size_bytes":8625},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[x] 4. Fixed contact form fetch error (use relative URLs instead of localhost)\n[x] 5. Removed unwanted projects (social media, ecommerce, weather, task management)\n[x] 6. Keep only Split Money and URL Shortener projects \n[x] 7. Made navbar responsive with mobile-optimized logo and navigation\n[x] 8. Fixed contact form email settings and removed budget field\n[x] 9. Removed mobile development from footer services\n[x] 10. Migration and fixes completed successfully\n[x] 11. Fixed Experience section layout - View Project button and rating no longer overlap\n[x] 12. Updated email to akshadapastambh37@gmail.com in footer component\n[x] 13. Fixed project cards alignment - all cards now same height and level\n[x] 14. Enhanced project visuals with improved animations and floating elements\n[x] 11. Final verification - application running successfully on port 5000\n[x] 12. Vite frontend connecting properly\n[x] 13. Replit environment migration completed","size_bytes":1107}},"version":1}